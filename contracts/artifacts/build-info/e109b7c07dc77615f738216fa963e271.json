{
	"id": "e109b7c07dc77615f738216fa963e271",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.28;\r\n\r\n\r\n\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\ncontract StakingContract is Ownable, ReentrancyGuard {\r\n    // Token interface for staking tokens\r\n    IERC20 public stakingToken;\r\n\r\n    // Cooldown period for unstaking\r\n    uint256 public constant COOLDOWN_PERIOD = 4 hours;\r\n\r\n    // Fee wallet address to collect fees\r\n    address public feeWallet;\r\n\r\n    // Fee percentages (as basis points, e.g., 200 = 2%)\r\n    uint256 public constant DEPOSIT_FEE_BPS = 200; // 2%\r\n    uint256 public constant WITHDRAWAL_FEE_BPS = 500; // 5%\r\n\r\n    struct Pool {\r\n        uint256 apy;                   // Annual Percentage Yield for rewards\r\n        uint256 totalStaked;           // Total amount staked in this pool\r\n        IERC20 rewardToken;            // Reward token for this pool\r\n        mapping(address => uint256) stakedAmounts;  // Staked amount per user\r\n        mapping(address => uint256) lastStakedTime; // Last time the user staked\r\n    }\r\n\r\n    // Pool management\r\n    mapping(uint256 => Pool) public pools;  // Mapping pool ID to Pool data\r\n    uint256 public poolCount;               // Number of pools created\r\n\r\n    // Events\r\n    event PoolCreated(uint256 indexed poolId, uint256 apy, address rewardToken);\r\n    event Staked(address indexed user, uint256 poolId, uint256 amount);\r\n    event Unstaked(address indexed user, uint256 poolId, uint256 amount);\r\n    event RewardClaimed(address indexed user, uint256 poolId, uint256 reward);\r\n    event APYAdjusted(uint256 indexed poolId, uint256 newAPY);\r\n\r\n    constructor(address _stakingToken) Ownable(msg.sender) {\r\n        stakingToken = IERC20(_stakingToken);\r\n        poolCount = 0;\r\n    }\r\n\r\n    modifier feeWalletSet() {\r\n        require(feeWallet != address(0), \"Fee wallet not set\");\r\n        _;\r\n    }\r\n\r\n    modifier validAddress(address _address) {\r\n        require(_address != address(0), \"Invalid address\");\r\n        _;\r\n    }\r\n\r\n    function setFeeWallet(address _feeWallet) external onlyOwner validAddress(_feeWallet) {\r\n        feeWallet = _feeWallet;\r\n    }\r\n\r\n    function addPool(uint256 _apy, address _rewardToken) external onlyOwner validAddress(_rewardToken) {\r\n        Pool storage newPool = pools[poolCount];\r\n        newPool.apy = _apy;\r\n        newPool.rewardToken = IERC20(_rewardToken);\r\n        newPool.totalStaked = 0;\r\n\r\n        emit PoolCreated(poolCount, _apy, _rewardToken);\r\n        poolCount++;\r\n    }\r\n\r\n    function stake(uint256 _poolId, uint256 _amount) external nonReentrant feeWalletSet {\r\n        require(_poolId < poolCount, \"Pool does not exist\");\r\n        require(_amount > 0, \"Amount must be greater than zero\");\r\n\r\n        Pool storage pool = pools[_poolId];\r\n        uint256 fee = (_amount * DEPOSIT_FEE_BPS) / 10000;\r\n        uint256 amountAfterFee = _amount - fee;\r\n\r\n        require(stakingToken.transferFrom(msg.sender, address(this), amountAfterFee), \"Transfer failed\");\r\n        require(stakingToken.transferFrom(msg.sender, feeWallet, fee), \"Fee transfer failed\");\r\n\r\n        pool.stakedAmounts[msg.sender] += amountAfterFee;\r\n        pool.totalStaked += amountAfterFee;\r\n        pool.lastStakedTime[msg.sender] = block.timestamp;\r\n\r\n        emit Staked(msg.sender, _poolId, amountAfterFee);\r\n    }\r\n\r\n    function unstake(uint256 _poolId, uint256 _amount) external nonReentrant feeWalletSet {\r\n        require(_poolId < poolCount, \"Pool does not exist\");\r\n        require(_amount > 0, \"Amount must be greater than zero\");\r\n\r\n        Pool storage pool = pools[_poolId];\r\n        uint256 stakedAmount = pool.stakedAmounts[msg.sender];\r\n\r\n        require(stakedAmount >= _amount, \"Insufficient staked balance\");\r\n        require(block.timestamp >= pool.lastStakedTime[msg.sender] + COOLDOWN_PERIOD, \"Cooldown period not over\");\r\n\r\n        uint256 fee = (_amount * WITHDRAWAL_FEE_BPS) / 10000;\r\n        uint256 amountAfterFee = _amount - fee;\r\n\r\n        pool.stakedAmounts[msg.sender] -= _amount;\r\n        pool.totalStaked -= _amount;\r\n\r\n        require(stakingToken.transfer(msg.sender, amountAfterFee), \"Transfer failed\");\r\n        require(stakingToken.transfer(feeWallet, fee), \"Fee transfer failed\");\r\n\r\n        emit Unstaked(msg.sender, _poolId, amountAfterFee);\r\n    }\r\n\r\n    function calculateReward(uint256 _poolId, address _user) public view returns (uint256) {\r\n        Pool storage pool = pools[_poolId];\r\n        uint256 stakedAmount = pool.stakedAmounts[_user];\r\n\r\n        if (stakedAmount == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 stakingDuration = block.timestamp - pool.lastStakedTime[_user];\r\n        return (stakedAmount * pool.apy * stakingDuration) / (365 days * 100);\r\n    }\r\n\r\n    function claimRewards(uint256 _poolId) external nonReentrant {\r\n        require(_poolId < poolCount, \"Pool does not exist\");\r\n\r\n        Pool storage pool = pools[_poolId];\r\n        uint256 reward = calculateReward(_poolId, msg.sender);\r\n        require(reward > 0, \"No rewards available\");\r\n\r\n        pool.lastStakedTime[msg.sender] = block.timestamp;\r\n        require(pool.rewardToken.transfer(msg.sender, reward), \"Reward transfer failed\");\r\n\r\n        emit RewardClaimed(msg.sender, _poolId, reward);\r\n    }\r\n\r\n    function adjustAPY(uint256 _poolId) external onlyOwner {\r\n        require(_poolId < poolCount, \"Pool does not exist\");\r\n\r\n        Pool storage pool = pools[_poolId];\r\n        \r\n        if (pool.totalStaked >= 100000 ether) {\r\n            pool.apy = 30;\r\n        } else if (pool.totalStaked >= 50000 ether) {\r\n            pool.apy = 100;\r\n        } else {\r\n            pool.apy = 200;\r\n        }\r\n\r\n        emit APYAdjusted(_poolId, pool.apy);\r\n    }\r\n\r\n    function getPoolInfo(uint256 _poolId) external view returns (uint256, address, uint256) {\r\n        require(_poolId < poolCount, \"Pool does not exist\");\r\n        Pool storage pool = pools[_poolId];\r\n        return (pool.apy, address(pool.rewardToken), pool.totalStaked);\r\n    }\r\n\r\n    function getUserStakedAmount(uint256 _poolId, address _user) external view returns (uint256) {\r\n        require(_poolId < poolCount, \"Pool does not exist\");\r\n        return pools[_poolId].stakedAmounts[_user];\r\n    }\r\n\r\n    function getUserLastStakedTime(uint256 _poolId, address _user) external view returns (uint256) {\r\n        require(_poolId < poolCount, \"Pool does not exist\");\r\n        return pools[_poolId].lastStakedTime[_user];\r\n    }\r\n\r\n    function getPoolCount() external view returns (uint256) {\r\n        return poolCount;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking.sol": {
				"StakingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAPY",
									"type": "uint256"
								}
							],
							"name": "APYAdjusted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "COOLDOWN_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEPOSIT_FEE_BPS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WITHDRAWAL_FEE_BPS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_apy",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								}
							],
							"name": "addPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								}
							],
							"name": "adjustAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								}
							],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								}
							],
							"name": "getPoolInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserLastStakedTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserStakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "pools",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "apy",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStaked",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "rewardToken",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeWallet",
									"type": "address"
								}
							],
							"name": "setFeeWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking.sol\":244:6632  contract StakingContract is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Staking.sol\":1713:1847  constructor(address _stakingToken) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Staking.sol\":1756:1766  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":455:506   */\n  mstore\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"contracts/Staking.sol\":1779:1791  stakingToken */\n  0x02\n    /* \"contracts/Staking.sol\":1779:1815  stakingToken = IERC20(_stakingToken) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  0x00\n    /* \"contracts/Staking.sol\":1826:1835  poolCount */\n  0x05\n    /* \"contracts/Staking.sol\":1826:1839  poolCount = 0 */\n  sstore\n    /* \"contracts/Staking.sol\":244:6632  contract StakingContract is Ownable, ReentrancyGuard {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_19:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_20:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:512   */\ntag_17:\n    /* \"contracts/Staking.sol\":244:6632  contract StakingContract is Ownable, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking.sol\":244:6632  contract StakingContract is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xac4afa38\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xac4afa38\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb684edcf\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd13d8258\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf25f4b56\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf525cb68\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8eec5d70\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x90d49b9d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9e2c8a5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa18f07a0\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x6bbf758d\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x6bbf758d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6e99d52f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x0962ef79\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2f380b35\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x33ba8882\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3a4ae669\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4d333a21\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking.sol\":4829:5338  function claimRewards(uint256 _poolId) external nonReentrant {... */\n    tag_3:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/Staking.sol\":5803:6079  function getPoolInfo(uint256 _poolId) external view returns (uint256, address, uint256) {... */\n    tag_4:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":447:472   */\n      swap4\n      dup5\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":508:540   */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":503:505   */\n      0x20\n        /* \"#utility.yul\":488:506   */\n      dup5\n      add\n        /* \"#utility.yul\":481:541   */\n      mstore\n        /* \"#utility.yul\":557:575   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":550:584   */\n      mstore\n        /* \"#utility.yul\":435:437   */\n      0x60\n        /* \"#utility.yul\":420:438   */\n      add\n        /* \"contracts/Staking.sol\":5803:6079  function getPoolInfo(uint256 _poolId) external view returns (uint256, address, uint256) {... */\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":2236:2591  function addPool(uint256 _apy, address _rewardToken) external onlyOwner validAddress(_rewardToken) {... */\n    tag_5:\n      tag_27\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"contracts/Staking.sol\":670:718  uint256 public constant WITHDRAWAL_FEE_BPS = 500 */\n    tag_6:\n      tag_40\n        /* \"contracts/Staking.sol\":715:718  500 */\n      0x01f4\n        /* \"contracts/Staking.sol\":670:718  uint256 public constant WITHDRAWAL_FEE_BPS = 500 */\n      dup2\n      jump\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":1224:1249   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1212:1214   */\n      0x20\n        /* \"#utility.yul\":1197:1215   */\n      add\n        /* \"contracts/Staking.sol\":670:718  uint256 public constant WITHDRAWAL_FEE_BPS = 500 */\n      tag_34\n        /* \"#utility.yul\":1078:1255   */\n      jump\n        /* \"contracts/Staking.sol\":5346:5795  function adjustAPY(uint256 _poolId) external onlyOwner {... */\n    tag_7:\n      tag_27\n      tag_45\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"contracts/Staking.sol\":612:657  uint256 public constant DEPOSIT_FEE_BPS = 200 */\n    tag_8:\n      tag_40\n        /* \"contracts/Staking.sol\":654:657  200 */\n      0xc8\n        /* \"contracts/Staking.sol\":612:657  uint256 public constant DEPOSIT_FEE_BPS = 200 */\n      dup2\n      jump\n        /* \"contracts/Staking.sol\":420:469  uint256 public constant COOLDOWN_PERIOD = 4 hours */\n    tag_9:\n      tag_40\n        /* \"contracts/Staking.sol\":462:469  4 hours */\n      0x3840\n        /* \"contracts/Staking.sol\":420:469  uint256 public constant COOLDOWN_PERIOD = 4 hours */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_27\n      tag_54\n      jump\t// in\n        /* \"contracts/Staking.sol\":347:373  IERC20 public stakingToken */\n    tag_11:\n      sload(0x02)\n      tag_55\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_55:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1438:1470   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1420:1471   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1408:1410   */\n      0x20\n        /* \"#utility.yul\":1393:1411   */\n      add\n        /* \"contracts/Staking.sol\":347:373  IERC20 public stakingToken */\n      tag_34\n        /* \"#utility.yul\":1260:1477   */\n      jump\n        /* \"contracts/Staking.sol\":2599:3408  function stake(uint256 _poolId, uint256 _amount) external nonReentrant feeWalletSet {... */\n    tag_12:\n      tag_27\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_55)\n        /* \"contracts/Staking.sol\":6538:6629  function getPoolCount() external view returns (uint256) {... */\n    tag_14:\n        /* \"contracts/Staking.sol\":6612:6621  poolCount */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":6538:6629  function getPoolCount() external view returns (uint256) {... */\n      jump(tag_40)\n        /* \"contracts/Staking.sol\":2101:2228  function setFeeWallet(address _feeWallet) external onlyOwner validAddress(_feeWallet) {... */\n    tag_15:\n      tag_27\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"contracts/Staking.sol\":3416:4381  function unstake(uint256 _poolId, uint256 _amount) external nonReentrant feeWalletSet {... */\n    tag_16:\n      tag_27\n      tag_75\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"contracts/Staking.sol\":4389:4821  function calculateReward(uint256 _poolId, address _user) public view returns (uint256) {... */\n    tag_17:\n      tag_40\n      tag_78\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"contracts/Staking.sol\":1171:1208  mapping(uint256 => Pool) public pools */\n    tag_18:\n      tag_81\n      tag_82\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_82:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup4\n      jump\n    tag_81:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2448:2473   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":2504:2506   */\n      0x20\n        /* \"#utility.yul\":2489:2507   */\n      dup5\n      add\n        /* \"#utility.yul\":2482:2516   */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2552:2584   */\n      and\n        /* \"#utility.yul\":2532:2550   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2525:2585   */\n      mstore\n        /* \"#utility.yul\":2436:2438   */\n      0x60\n        /* \"#utility.yul\":2421:2439   */\n      add\n        /* \"contracts/Staking.sol\":1171:1208  mapping(uint256 => Pool) public pools */\n      tag_34\n        /* \"#utility.yul\":2232:2591   */\n      jump\n        /* \"contracts/Staking.sol\":6311:6530  function getUserLastStakedTime(uint256 _poolId, address _user) external view returns (uint256) {... */\n    tag_19:\n      tag_40\n      tag_87\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"contracts/Staking.sol\":6087:6303  function getUserStakedAmount(uint256 _poolId, address _user) external view returns (uint256) {... */\n    tag_20:\n      tag_40\n      tag_91\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"contracts/Staking.sol\":521:545  address public feeWallet */\n    tag_21:\n      sload(0x03)\n      tag_55\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_27\n      tag_98\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"contracts/Staking.sol\":1248:1272  uint256 public poolCount */\n    tag_23:\n      tag_40\n      sload(0x05)\n      dup2\n      jump\n        /* \"contracts/Staking.sol\":4829:5338  function claimRewards(uint256 _poolId) external nonReentrant {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_104\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_105\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_104:\n        /* \"contracts/Staking.sol\":4919:4928  poolCount */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":4909:4916  _poolId */\n      dup2\n        /* \"contracts/Staking.sol\":4909:4928  _poolId < poolCount */\n      lt\n        /* \"contracts/Staking.sol\":4901:4952  require(_poolId < poolCount, \"Pool does not exist\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"contracts/Staking.sol\":4965:4982  Pool storage pool */\n      0x00\n        /* \"contracts/Staking.sol\":4985:4999  pools[_poolId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":4985:4990  pools */\n      0x04\n        /* \"contracts/Staking.sol\":4985:4999  pools[_poolId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/Staking.sol\":5027:5063  calculateReward(_poolId, msg.sender) */\n      tag_110\n        /* \"contracts/Staking.sol\":4991:4998  _poolId */\n      dup4\n        /* \"contracts/Staking.sol\":5052:5062  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":5027:5042  calculateReward */\n      tag_79\n        /* \"contracts/Staking.sol\":5027:5063  calculateReward(_poolId, msg.sender) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/Staking.sol\":5010:5063  uint256 reward = calculateReward(_poolId, msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5091:5092  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5082:5088  reward */\n      dup2\n        /* \"contracts/Staking.sol\":5082:5092  reward > 0 */\n      gt\n        /* \"contracts/Staking.sol\":5074:5117  require(reward > 0, \"No rewards available\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3146:3148   */\n      0x20\n        /* \"contracts/Staking.sol\":5074:5117  require(reward > 0, \"No rewards available\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3128:3149   */\n      mstore\n        /* \"#utility.yul\":3185:3187   */\n      0x14\n        /* \"#utility.yul\":3165:3183   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3158:3188   */\n      mstore\n      shl(0x60, 0x4e6f207265776172647320617661696c61626c65)\n        /* \"#utility.yul\":3204:3222   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3197:3247   */\n      mstore\n        /* \"#utility.yul\":3264:3282   */\n      0x64\n      add\n        /* \"contracts/Staking.sol\":5074:5117  require(reward > 0, \"No rewards available\") */\n      tag_108\n        /* \"#utility.yul\":2944:3288   */\n      jump\n        /* \"contracts/Staking.sol\":5074:5117  require(reward > 0, \"No rewards available\") */\n    tag_111:\n        /* \"contracts/Staking.sol\":5150:5160  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":5130:5161  pool.lastStakedTime[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":5130:5149  pool.lastStakedTime */\n      0x04\n      dup5\n      dup2\n      add\n        /* \"contracts/Staking.sol\":5130:5161  pool.lastStakedTime[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Staking.sol\":5164:5179  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":5130:5179  pool.lastStakedTime[msg.sender] = block.timestamp */\n      swap1\n      sstore\n        /* \"contracts/Staking.sol\":5198:5214  pool.rewardToken */\n      0x02\n      dup6\n      add\n      sload\n        /* \"contracts/Staking.sol\":5198:5243  pool.rewardToken.transfer(msg.sender, reward) */\n      swap2\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":3467:3518   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3534:3552   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3527:3561   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking.sol\":5198:5214  pool.rewardToken */\n      and\n      swap1\n        /* \"contracts/Staking.sol\":5198:5223  pool.rewardToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3440:3458   */\n      0x44\n      add\n        /* \"contracts/Staking.sol\":5198:5243  pool.rewardToken.transfer(msg.sender, reward) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"contracts/Staking.sol\":5190:5270  require(pool.rewardToken.transfer(msg.sender, reward), \"Reward transfer failed\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4056:4058   */\n      0x20\n        /* \"contracts/Staking.sol\":5190:5270  require(pool.rewardToken.transfer(msg.sender, reward), \"Reward transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4038:4059   */\n      mstore\n        /* \"#utility.yul\":4095:4097   */\n      0x16\n        /* \"#utility.yul\":4075:4093   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4068:4098   */\n      mstore\n      shl(0x52, 0x14995dd85c99081d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":4114:4132   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4107:4159   */\n      mstore\n        /* \"#utility.yul\":4176:4194   */\n      0x64\n      add\n        /* \"contracts/Staking.sol\":5190:5270  require(pool.rewardToken.transfer(msg.sender, reward), \"Reward transfer failed\") */\n      tag_108\n        /* \"#utility.yul\":3854:4200   */\n      jump\n        /* \"contracts/Staking.sol\":5190:5270  require(pool.rewardToken.transfer(msg.sender, reward), \"Reward transfer failed\") */\n    tag_120:\n        /* \"contracts/Staking.sol\":5288:5330  RewardClaimed(msg.sender, _poolId, reward) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4379:4404   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":4435:4437   */\n      0x20\n        /* \"#utility.yul\":4420:4438   */\n      dup2\n      add\n        /* \"#utility.yul\":4413:4447   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Staking.sol\":5302:5312  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Staking.sol\":5288:5330  RewardClaimed(msg.sender, _poolId, reward) */\n      0xf01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e2731743\n      swap2\n        /* \"#utility.yul\":4352:4370   */\n      add\n        /* \"contracts/Staking.sol\":5288:5330  RewardClaimed(msg.sender, _poolId, reward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Staking.sol\":4890:5338  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_125\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_125:\n        /* \"contracts/Staking.sol\":4829:5338  function claimRewards(uint256 _poolId) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":5803:6079  function getPoolInfo(uint256 _poolId) external view returns (uint256, address, uint256) {... */\n    tag_33:\n        /* \"contracts/Staking.sol\":5864:5871  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5873:5880  address */\n      dup1\n        /* \"contracts/Staking.sol\":5882:5889  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5920:5929  poolCount */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":5910:5917  _poolId */\n      dup5\n        /* \"contracts/Staking.sol\":5910:5929  _poolId < poolCount */\n      lt\n        /* \"contracts/Staking.sol\":5902:5953  require(_poolId < poolCount, \"Pool does not exist\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_128:\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":5964:5981  Pool storage pool */\n      0x00\n        /* \"contracts/Staking.sol\":5984:5998  pools[_poolId] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":5984:5989  pools */\n      0x04\n        /* \"contracts/Staking.sol\":5984:5998  pools[_poolId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Staking.sol\":6017:6025  pool.apy */\n      dup1\n      sload\n        /* \"contracts/Staking.sol\":6035:6051  pool.rewardToken */\n      0x02\n      dup3\n      add\n      sload\n      0x01\n        /* \"contracts/Staking.sol\":6054:6070  pool.totalStaked */\n      swap1\n      swap3\n      add\n      sload\n        /* \"contracts/Staking.sol\":6017:6025  pool.apy */\n      swap1\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking.sol\":6035:6051  pool.rewardToken */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/Staking.sol\":5803:6079  function getPoolInfo(uint256 _poolId) external view returns (uint256, address, uint256) {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":2236:2591  function addPool(uint256 _apy, address _rewardToken) external onlyOwner validAddress(_rewardToken) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"contracts/Staking.sol\":2321:2333  _rewardToken */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking.sol\":2031:2053  _address != address(0) */\n      dup2\n      and\n        /* \"contracts/Staking.sol\":2023:2073  require(_address != address(0), \"Invalid address\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4660:4662   */\n      0x20\n        /* \"contracts/Staking.sol\":2023:2073  require(_address != address(0), \"Invalid address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4642:4663   */\n      mstore\n        /* \"#utility.yul\":4699:4701   */\n      0x0f\n        /* \"#utility.yul\":4679:4697   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4672:4702   */\n      mstore\n      shl(0x88, 0x496e76616c69642061646472657373)\n        /* \"#utility.yul\":4718:4736   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4711:4756   */\n      mstore\n        /* \"#utility.yul\":4773:4791   */\n      0x64\n      add\n        /* \"contracts/Staking.sol\":2023:2073  require(_address != address(0), \"Invalid address\") */\n      tag_108\n        /* \"#utility.yul\":4458:4797   */\n      jump\n        /* \"contracts/Staking.sol\":2023:2073  require(_address != address(0), \"Invalid address\") */\n    tag_134:\n        /* \"contracts/Staking.sol\":2375:2384  poolCount */\n      0x05\n      dup1\n      sload\n        /* \"contracts/Staking.sol\":2346:2366  Pool storage newPool */\n      0x00\n        /* \"contracts/Staking.sol\":2369:2385  pools[poolCount] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":2369:2374  pools */\n      0x04\n        /* \"contracts/Staking.sol\":2369:2385  pools[poolCount] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Staking.sol\":2396:2414  newPool.apy = _apy */\n      dup8\n      dup2\n      sstore\n        /* \"contracts/Staking.sol\":2425:2444  newPool.rewardToken */\n      0x02\n      dup2\n      add\n        /* \"contracts/Staking.sol\":2425:2467  newPool.rewardToken = IERC20(_rewardToken) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0x01\n        /* \"contracts/Staking.sol\":2478:2497  newPool.totalStaked */\n      dup3\n      add\n        /* \"contracts/Staking.sol\":2478:2501  newPool.totalStaked = 0 */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Staking.sol\":2531:2540  poolCount */\n      swap4\n      sload\n        /* \"contracts/Staking.sol\":2519:2561  PoolCreated(poolCount, _apy, _rewardToken) */\n      dup2\n      mload\n        /* \"#utility.yul\":4976:5001   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":5017:5035   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":5010:5070   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"contracts/Staking.sol\":2519:2561  PoolCreated(poolCount, _apy, _rewardToken) */\n      0xae9596825f83aa972e67ed4a3ac74d2eb98b77ee23453868db5dc3b08a0316ca\n      swap2\n        /* \"#utility.yul\":4949:4967   */\n      add\n        /* \"contracts/Staking.sol\":2519:2561  PoolCreated(poolCount, _apy, _rewardToken) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Staking.sol\":2572:2581  poolCount */\n      0x05\n        /* \"contracts/Staking.sol\":2572:2583  poolCount++ */\n      dup1\n      sload\n      swap1\n        /* \"contracts/Staking.sol\":2572:2581  poolCount */\n      0x00\n        /* \"contracts/Staking.sol\":2572:2583  poolCount++ */\n      tag_140\n      dup4\n      tag_141\n      jump\t// in\n    tag_140:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2335:2591  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"contracts/Staking.sol\":2236:2591  function addPool(uint256 _apy, address _rewardToken) external onlyOwner validAddress(_rewardToken) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":5346:5795  function adjustAPY(uint256 _poolId) external onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/Staking.sol\":5430:5439  poolCount */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":5420:5427  _poolId */\n      dup2\n        /* \"contracts/Staking.sol\":5420:5439  _poolId < poolCount */\n      lt\n        /* \"contracts/Staking.sol\":5412:5463  require(_poolId < poolCount, \"Pool does not exist\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_145:\n        /* \"contracts/Staking.sol\":5476:5493  Pool storage pool */\n      0x00\n        /* \"contracts/Staking.sol\":5496:5510  pools[_poolId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":5496:5501  pools */\n      0x04\n        /* \"contracts/Staking.sol\":5496:5510  pools[_poolId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Staking.sol\":5535:5551  pool.totalStaked */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/Staking.sol\":5555:5567  100000 ether */\n      0x152d02c7e14af6800000\n      gt\n        /* \"contracts/Staking.sol\":5531:5740  if (pool.totalStaked >= 100000 ether) {... */\n      tag_147\n      jumpi\n        /* \"contracts/Staking.sol\":5595:5597  30 */\n      0x1e\n        /* \"contracts/Staking.sol\":5584:5597  pool.apy = 30 */\n      dup2\n      sstore\n        /* \"contracts/Staking.sol\":5531:5740  if (pool.totalStaked >= 100000 ether) {... */\n      jump(tag_150)\n    tag_147:\n        /* \"contracts/Staking.sol\":5639:5650  50000 ether */\n      0x0a968163f0a57b400000\n        /* \"contracts/Staking.sol\":5619:5623  pool */\n      dup2\n        /* \"contracts/Staking.sol\":5619:5635  pool.totalStaked */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":5619:5650  pool.totalStaked >= 50000 ether */\n      lt\n        /* \"contracts/Staking.sol\":5615:5740  if (pool.totalStaked >= 50000 ether) {... */\n      tag_149\n      jumpi\n        /* \"contracts/Staking.sol\":5678:5681  100 */\n      0x64\n        /* \"contracts/Staking.sol\":5667:5681  pool.apy = 100 */\n      dup2\n      sstore\n        /* \"contracts/Staking.sol\":5615:5740  if (pool.totalStaked >= 50000 ether) {... */\n      jump(tag_150)\n    tag_149:\n        /* \"contracts/Staking.sol\":5725:5728  200 */\n      0xc8\n        /* \"contracts/Staking.sol\":5714:5728  pool.apy = 200 */\n      dup2\n      sstore\n        /* \"contracts/Staking.sol\":5615:5740  if (pool.totalStaked >= 50000 ether) {... */\n    tag_150:\n        /* \"contracts/Staking.sol\":5778:5786  pool.apy */\n      dup1\n      sload\n        /* \"contracts/Staking.sol\":5757:5787  APYAdjusted(_poolId, pool.apy) */\n      mload(0x40)\n        /* \"#utility.yul\":1224:1249   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":5769:5776  _poolId */\n      dup3\n      swap1\n        /* \"contracts/Staking.sol\":5757:5787  APYAdjusted(_poolId, pool.apy) */\n      0x9c4893e20d6432767854bfaa7ead2c90ad7644e9440c6861a383f63e4fb2803e\n      swap1\n        /* \"#utility.yul\":1212:1214   */\n      0x20\n        /* \"#utility.yul\":1197:1215   */\n      add\n        /* \"contracts/Staking.sol\":5757:5787  APYAdjusted(_poolId, pool.apy) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Staking.sol\":5401:5795  {... */\n      pop\n        /* \"contracts/Staking.sol\":5346:5795  function adjustAPY(uint256 _poolId) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":2599:3408  function stake(uint256 _poolId, uint256 _amount) external nonReentrant feeWalletSet {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_158\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_105\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/Staking.sol\":1898:1907  feeWallet */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/Staking.sol\":1890:1944  require(feeWallet != address(0), \"Fee wallet not set\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5555:5557   */\n      0x20\n        /* \"contracts/Staking.sol\":1890:1944  require(feeWallet != address(0), \"Fee wallet not set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5537:5558   */\n      mstore\n        /* \"#utility.yul\":5594:5596   */\n      0x12\n        /* \"#utility.yul\":5574:5592   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5567:5597   */\n      mstore\n      shl(0x72, 0x119959481dd85b1b195d081b9bdd081cd95d)\n        /* \"#utility.yul\":5613:5631   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5606:5654   */\n      mstore\n        /* \"#utility.yul\":5671:5689   */\n      0x64\n      add\n        /* \"contracts/Staking.sol\":1890:1944  require(feeWallet != address(0), \"Fee wallet not set\") */\n      tag_108\n        /* \"#utility.yul\":5353:5695   */\n      jump\n        /* \"contracts/Staking.sol\":1890:1944  require(feeWallet != address(0), \"Fee wallet not set\") */\n    tag_160:\n        /* \"contracts/Staking.sol\":2712:2721  poolCount */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":2702:2709  _poolId */\n      dup3\n        /* \"contracts/Staking.sol\":2702:2721  _poolId < poolCount */\n      lt\n        /* \"contracts/Staking.sol\":2694:2745  require(_poolId < poolCount, \"Pool does not exist\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_164:\n        /* \"contracts/Staking.sol\":2774:2775  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2764:2771  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":2764:2775  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":2756:2812  require(_amount > 0, \"Amount must be greater than zero\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5902:5904   */\n      0x20\n        /* \"contracts/Staking.sol\":2756:2812  require(_amount > 0, \"Amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5884:5905   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5921:5939   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5914:5944   */\n      mstore\n        /* \"#utility.yul\":5980:6014   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":5960:5978   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5953:6015   */\n      mstore\n        /* \"#utility.yul\":6032:6050   */\n      0x64\n      add\n        /* \"contracts/Staking.sol\":2756:2812  require(_amount > 0, \"Amount must be greater than zero\") */\n      tag_108\n        /* \"#utility.yul\":5700:6056   */\n      jump\n        /* \"contracts/Staking.sol\":2756:2812  require(_amount > 0, \"Amount must be greater than zero\") */\n    tag_166:\n        /* \"contracts/Staking.sol\":2825:2842  Pool storage pool */\n      0x00\n        /* \"contracts/Staking.sol\":2845:2859  pools[_poolId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":2845:2850  pools */\n      0x04\n        /* \"contracts/Staking.sol\":2845:2859  pools[_poolId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/Staking.sol\":2914:2919  10000 */\n      0x2710\n        /* \"contracts/Staking.sol\":2885:2910  _amount * DEPOSIT_FEE_BPS */\n      tag_169\n        /* \"contracts/Staking.sol\":654:657  200 */\n      0xc8\n        /* \"contracts/Staking.sol\":2885:2892  _amount */\n      dup6\n        /* \"contracts/Staking.sol\":2885:2910  _amount * DEPOSIT_FEE_BPS */\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"contracts/Staking.sol\":2884:2919  (_amount * DEPOSIT_FEE_BPS) / 10000 */\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"contracts/Staking.sol\":2870:2919  uint256 fee = (_amount * DEPOSIT_FEE_BPS) / 10000 */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2930:2952  uint256 amountAfterFee */\n      0x00\n        /* \"contracts/Staking.sol\":2955:2968  _amount - fee */\n      tag_173\n        /* \"contracts/Staking.sol\":2870:2919  uint256 fee = (_amount * DEPOSIT_FEE_BPS) / 10000 */\n      dup3\n        /* \"contracts/Staking.sol\":2955:2962  _amount */\n      dup6\n        /* \"contracts/Staking.sol\":2955:2968  _amount - fee */\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"contracts/Staking.sol\":2989:3001  stakingToken */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":2989:3057  stakingToken.transferFrom(msg.sender, address(this), amountAfterFee) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":3015:3025  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2989:3057  stakingToken.transferFrom(msg.sender, address(this), amountAfterFee) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6791:6842   */\n      mstore\n        /* \"contracts/Staking.sol\":3035:3039  this */\n      address\n        /* \"#utility.yul\":6858:6876   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6851:6911   */\n      mstore\n        /* \"#utility.yul\":6927:6945   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6920:6954   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Staking.sol\":2930:2968  uint256 amountAfterFee = _amount - fee */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking.sol\":2989:3001  stakingToken */\n      and\n      swap1\n        /* \"contracts/Staking.sol\":2989:3014  stakingToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":6764:6782   */\n      0x64\n      add\n        /* \"contracts/Staking.sol\":2989:3057  stakingToken.transferFrom(msg.sender, address(this), amountAfterFee) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_179\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_179:\n        /* \"contracts/Staking.sol\":2981:3077  require(stakingToken.transferFrom(msg.sender, address(this), amountAfterFee), \"Transfer failed\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7167:7169   */\n      0x20\n        /* \"contracts/Staking.sol\":2981:3077  require(stakingToken.transferFrom(msg.sender, address(this), amountAfterFee), \"Transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7149:7170   */\n      mstore\n        /* \"#utility.yul\":7206:7208   */\n      0x0f\n        /* \"#utility.yul\":7186:7204   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7179:7209   */\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":7225:7243   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7218:7263   */\n      mstore\n        /* \"#utility.yul\":7280:7298   */\n      0x64\n      add\n        /* \"contracts/Staking.sol\":2981:3077  require(stakingToken.transferFrom(msg.sender, address(this), amountAfterFee), \"Transfer failed\") */\n      tag_108\n        /* \"#utility.yul\":6965:7304   */\n      jump\n        /* \"contracts/Staking.sol\":2981:3077  require(stakingToken.transferFrom(msg.sender, address(this), amountAfterFee), \"Transfer failed\") */\n    tag_180:\n        /* \"contracts/Staking.sol\":3096:3108  stakingToken */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":3134:3143  feeWallet */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":3096:3149  stakingToken.transferFrom(msg.sender, feeWallet, fee) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":3122:3132  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3096:3149  stakingToken.transferFrom(msg.sender, feeWallet, fee) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6791:6842   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking.sol\":3134:3143  feeWallet */\n      swap2\n      dup3\n      and\n        /* \"#utility.yul\":6858:6876   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6851:6911   */\n      mstore\n        /* \"#utility.yul\":6927:6945   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6920:6954   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/Staking.sol\":3096:3108  stakingToken */\n      swap2\n      and\n      swap1\n        /* \"contracts/Staking.sol\":3096:3121  stakingToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":6764:6782   */\n      0x64\n      add\n        /* \"contracts/Staking.sol\":3096:3149  stakingToken.transferFrom(msg.sender, feeWallet, fee) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_186:\n        /* \"contracts/Staking.sol\":3088:3173  require(stakingToken.transferFrom(msg.sender, feeWallet, fee), \"Fee transfer failed\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7511:7513   */\n      0x20\n        /* \"contracts/Staking.sol\":3088:3173  require(stakingToken.transferFrom(msg.sender, feeWallet, fee), \"Fee transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7493:7514   */\n      mstore\n        /* \"#utility.yul\":7550:7552   */\n      0x13\n        /* \"#utility.yul\":7530:7548   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7523:7553   */\n      mstore\n      shl(0x6a, 0x119959481d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":7569:7587   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7562:7611   */\n      mstore\n        /* \"#utility.yul\":7628:7646   */\n      0x64\n      add\n        /* \"contracts/Staking.sol\":3088:3173  require(stakingToken.transferFrom(msg.sender, feeWallet, fee), \"Fee transfer failed\") */\n      tag_108\n        /* \"#utility.yul\":7309:7652   */\n      jump\n        /* \"contracts/Staking.sol\":3088:3173  require(stakingToken.transferFrom(msg.sender, feeWallet, fee), \"Fee transfer failed\") */\n    tag_187:\n        /* \"contracts/Staking.sol\":3205:3215  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3186:3216  pool.stakedAmounts[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":3186:3204  pool.stakedAmounts */\n      0x03\n      dup5\n      add\n        /* \"contracts/Staking.sol\":3186:3216  pool.stakedAmounts[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Staking.sol\":3186:3234  pool.stakedAmounts[msg.sender] += amountAfterFee */\n      dup1\n      sload\n        /* \"contracts/Staking.sol\":3220:3234  amountAfterFee */\n      dup4\n      swap3\n        /* \"contracts/Staking.sol\":3186:3216  pool.stakedAmounts[msg.sender] */\n      swap1\n        /* \"contracts/Staking.sol\":3186:3234  pool.stakedAmounts[msg.sender] += amountAfterFee */\n      tag_190\n      swap1\n        /* \"contracts/Staking.sol\":3220:3234  amountAfterFee */\n      dup5\n      swap1\n        /* \"contracts/Staking.sol\":3186:3234  pool.stakedAmounts[msg.sender] += amountAfterFee */\n      tag_191\n      jump\t// in\n    tag_190:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3265:3279  amountAfterFee */\n      dup1\n        /* \"contracts/Staking.sol\":3245:3249  pool */\n      dup4\n        /* \"contracts/Staking.sol\":3245:3261  pool.totalStaked */\n      0x01\n      add\n      0x00\n        /* \"contracts/Staking.sol\":3245:3279  pool.totalStaked += amountAfterFee */\n      dup3\n      dup3\n      sload\n      tag_192\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_192:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Staking.sol\":3310:3320  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3290:3321  pool.lastStakedTime[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":3290:3309  pool.lastStakedTime */\n      0x04\n      dup6\n      add\n        /* \"contracts/Staking.sol\":3290:3321  pool.lastStakedTime[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Staking.sol\":3324:3339  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":3290:3339  pool.lastStakedTime[msg.sender] = block.timestamp */\n      swap1\n      sstore\n        /* \"contracts/Staking.sol\":3357:3400  Staked(msg.sender, _poolId, amountAfterFee) */\n      dup2\n      mload\n        /* \"#utility.yul\":4379:4404   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":4420:4438   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":4413:4447   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Staking.sol\":3357:3400  Staked(msg.sender, _poolId, amountAfterFee) */\n      0x1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90\n      swap2\n        /* \"#utility.yul\":4352:4370   */\n      add\n        /* \"contracts/Staking.sol\":3357:3400  Staked(msg.sender, _poolId, amountAfterFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Staking.sol\":2683:3408  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_194\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_194:\n        /* \"contracts/Staking.sol\":2599:3408  function stake(uint256 _poolId, uint256 _amount) external nonReentrant feeWalletSet {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":2101:2228  function setFeeWallet(address _feeWallet) external onlyOwner validAddress(_feeWallet) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_198:\n        /* \"contracts/Staking.sol\":2175:2185  _feeWallet */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking.sol\":2031:2053  _address != address(0) */\n      dup2\n      and\n        /* \"contracts/Staking.sol\":2023:2073  require(_address != address(0), \"Invalid address\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4660:4662   */\n      0x20\n        /* \"contracts/Staking.sol\":2023:2073  require(_address != address(0), \"Invalid address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4642:4663   */\n      mstore\n        /* \"#utility.yul\":4699:4701   */\n      0x0f\n        /* \"#utility.yul\":4679:4697   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4672:4702   */\n      mstore\n      shl(0x88, 0x496e76616c69642061646472657373)\n        /* \"#utility.yul\":4718:4736   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4711:4756   */\n      mstore\n        /* \"#utility.yul\":4773:4791   */\n      0x64\n      add\n        /* \"contracts/Staking.sol\":2023:2073  require(_address != address(0), \"Invalid address\") */\n      tag_108\n        /* \"#utility.yul\":4458:4797   */\n      jump\n        /* \"contracts/Staking.sol\":2023:2073  require(_address != address(0), \"Invalid address\") */\n    tag_200:\n      pop\n        /* \"contracts/Staking.sol\":2198:2207  feeWallet */\n      0x03\n        /* \"contracts/Staking.sol\":2198:2220  feeWallet = _feeWallet */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Staking.sol\":2101:2228  function setFeeWallet(address _feeWallet) external onlyOwner validAddress(_feeWallet) {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":3416:4381  function unstake(uint256 _poolId, uint256 _amount) external nonReentrant feeWalletSet {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_204\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_105\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_204:\n        /* \"contracts/Staking.sol\":1898:1907  feeWallet */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/Staking.sol\":1890:1944  require(feeWallet != address(0), \"Fee wallet not set\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5555:5557   */\n      0x20\n        /* \"contracts/Staking.sol\":1890:1944  require(feeWallet != address(0), \"Fee wallet not set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5537:5558   */\n      mstore\n        /* \"#utility.yul\":5594:5596   */\n      0x12\n        /* \"#utility.yul\":5574:5592   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5567:5597   */\n      mstore\n      shl(0x72, 0x119959481dd85b1b195d081b9bdd081cd95d)\n        /* \"#utility.yul\":5613:5631   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5606:5654   */\n      mstore\n        /* \"#utility.yul\":5671:5689   */\n      0x64\n      add\n        /* \"contracts/Staking.sol\":1890:1944  require(feeWallet != address(0), \"Fee wallet not set\") */\n      tag_108\n        /* \"#utility.yul\":5353:5695   */\n      jump\n        /* \"contracts/Staking.sol\":1890:1944  require(feeWallet != address(0), \"Fee wallet not set\") */\n    tag_206:\n        /* \"contracts/Staking.sol\":3531:3540  poolCount */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":3521:3528  _poolId */\n      dup3\n        /* \"contracts/Staking.sol\":3521:3540  _poolId < poolCount */\n      lt\n        /* \"contracts/Staking.sol\":3513:3564  require(_poolId < poolCount, \"Pool does not exist\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_209:\n        /* \"contracts/Staking.sol\":3593:3594  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3583:3590  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":3583:3594  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":3575:3631  require(_amount > 0, \"Amount must be greater than zero\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5902:5904   */\n      0x20\n        /* \"contracts/Staking.sol\":3575:3631  require(_amount > 0, \"Amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5884:5905   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5921:5939   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5914:5944   */\n      mstore\n        /* \"#utility.yul\":5980:6014   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":5960:5978   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5953:6015   */\n      mstore\n        /* \"#utility.yul\":6032:6050   */\n      0x64\n      add\n        /* \"contracts/Staking.sol\":3575:3631  require(_amount > 0, \"Amount must be greater than zero\") */\n      tag_108\n        /* \"#utility.yul\":5700:6056   */\n      jump\n        /* \"contracts/Staking.sol\":3575:3631  require(_amount > 0, \"Amount must be greater than zero\") */\n    tag_211:\n        /* \"contracts/Staking.sol\":3644:3661  Pool storage pool */\n      0x00\n        /* \"contracts/Staking.sol\":3664:3678  pools[_poolId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":3664:3669  pools */\n      0x04\n        /* \"contracts/Staking.sol\":3664:3678  pools[_poolId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Staking.sol\":3731:3741  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3712:3742  pool.stakedAmounts[msg.sender] */\n      dup5\n      mstore\n        /* \"contracts/Staking.sol\":3712:3730  pool.stakedAmounts */\n      0x03\n      dup2\n      add\n        /* \"contracts/Staking.sol\":3712:3742  pool.stakedAmounts[msg.sender] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/Staking.sol\":3763:3786  stakedAmount >= _amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":3755:3818  require(stakedAmount >= _amount, \"Insufficient staked balance\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7989:7991   */\n      0x20\n        /* \"contracts/Staking.sol\":3755:3818  require(stakedAmount >= _amount, \"Insufficient staked balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7971:7992   */\n      mstore\n        /* \"#utility.yul\":8028:8030   */\n      0x1b\n        /* \"#utility.yul\":8008:8026   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8001:8031   */\n      mstore\n        /* \"#utility.yul\":8067:8096   */\n      0x496e73756666696369656e74207374616b65642062616c616e63650000000000\n        /* \"#utility.yul\":8047:8065   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8040:8097   */\n      mstore\n        /* \"#utility.yul\":8114:8132   */\n      0x64\n      add\n        /* \"contracts/Staking.sol\":3755:3818  require(stakedAmount >= _amount, \"Insufficient staked balance\") */\n      tag_108\n        /* \"#utility.yul\":7787:8138   */\n      jump\n        /* \"contracts/Staking.sol\":3755:3818  require(stakedAmount >= _amount, \"Insufficient staked balance\") */\n    tag_213:\n        /* \"contracts/Staking.sol\":3876:3886  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3856:3887  pool.lastStakedTime[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":3856:3875  pool.lastStakedTime */\n      0x04\n      dup4\n      add\n        /* \"contracts/Staking.sol\":3856:3887  pool.lastStakedTime[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Staking.sol\":3856:3905  pool.lastStakedTime[msg.sender] + COOLDOWN_PERIOD */\n      tag_216\n      swap1\n        /* \"contracts/Staking.sol\":462:469  4 hours */\n      0x3840\n      swap1\n        /* \"contracts/Staking.sol\":3856:3905  pool.lastStakedTime[msg.sender] + COOLDOWN_PERIOD */\n      tag_191\n      jump\t// in\n    tag_216:\n        /* \"contracts/Staking.sol\":3837:3852  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":3837:3905  block.timestamp >= pool.lastStakedTime[msg.sender] + COOLDOWN_PERIOD */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":3829:3934  require(block.timestamp >= pool.lastStakedTime[msg.sender] + COOLDOWN_PERIOD, \"Cooldown period not over\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8345:8347   */\n      0x20\n        /* \"contracts/Staking.sol\":3829:3934  require(block.timestamp >= pool.lastStakedTime[msg.sender] + COOLDOWN_PERIOD, \"Cooldown period not over\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8327:8348   */\n      mstore\n        /* \"#utility.yul\":8384:8386   */\n      0x18\n        /* \"#utility.yul\":8364:8382   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8357:8387   */\n      mstore\n        /* \"#utility.yul\":8423:8449   */\n      0x436f6f6c646f776e20706572696f64206e6f74206f7665720000000000000000\n        /* \"#utility.yul\":8403:8421   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8396:8450   */\n      mstore\n        /* \"#utility.yul\":8467:8485   */\n      0x64\n      add\n        /* \"contracts/Staking.sol\":3829:3934  require(block.timestamp >= pool.lastStakedTime[msg.sender] + COOLDOWN_PERIOD, \"Cooldown period not over\") */\n      tag_108\n        /* \"#utility.yul\":8143:8491   */\n      jump\n        /* \"contracts/Staking.sol\":3829:3934  require(block.timestamp >= pool.lastStakedTime[msg.sender] + COOLDOWN_PERIOD, \"Cooldown period not over\") */\n    tag_217:\n        /* \"contracts/Staking.sol\":3947:3958  uint256 fee */\n      0x00\n        /* \"contracts/Staking.sol\":3994:3999  10000 */\n      0x2710\n        /* \"contracts/Staking.sol\":3962:3990  _amount * WITHDRAWAL_FEE_BPS */\n      tag_220\n        /* \"contracts/Staking.sol\":715:718  500 */\n      0x01f4\n        /* \"contracts/Staking.sol\":3962:3969  _amount */\n      dup7\n        /* \"contracts/Staking.sol\":3962:3990  _amount * WITHDRAWAL_FEE_BPS */\n      tag_170\n      jump\t// in\n    tag_220:\n        /* \"contracts/Staking.sol\":3961:3999  (_amount * WITHDRAWAL_FEE_BPS) / 10000 */\n      tag_221\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_221:\n        /* \"contracts/Staking.sol\":3947:3999  uint256 fee = (_amount * WITHDRAWAL_FEE_BPS) / 10000 */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4010:4032  uint256 amountAfterFee */\n      0x00\n        /* \"contracts/Staking.sol\":4035:4048  _amount - fee */\n      tag_222\n        /* \"contracts/Staking.sol\":3947:3999  uint256 fee = (_amount * WITHDRAWAL_FEE_BPS) / 10000 */\n      dup3\n        /* \"contracts/Staking.sol\":4035:4042  _amount */\n      dup7\n        /* \"contracts/Staking.sol\":4035:4048  _amount - fee */\n      tag_174\n      jump\t// in\n    tag_222:\n        /* \"contracts/Staking.sol\":4080:4090  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4061:4091  pool.stakedAmounts[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":4061:4079  pool.stakedAmounts */\n      0x03\n      dup7\n      add\n        /* \"contracts/Staking.sol\":4061:4091  pool.stakedAmounts[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Staking.sol\":4061:4102  pool.stakedAmounts[msg.sender] -= _amount */\n      dup1\n      sload\n        /* \"contracts/Staking.sol\":4010:4048  uint256 amountAfterFee = _amount - fee */\n      swap3\n      swap4\n      pop\n        /* \"contracts/Staking.sol\":4095:4102  _amount */\n      dup8\n      swap3\n        /* \"contracts/Staking.sol\":4061:4091  pool.stakedAmounts[msg.sender] */\n      swap1\n      swap2\n      swap1\n        /* \"contracts/Staking.sol\":4061:4102  pool.stakedAmounts[msg.sender] -= _amount */\n      tag_223\n      swap1\n        /* \"contracts/Staking.sol\":4095:4102  _amount */\n      dup5\n      swap1\n        /* \"contracts/Staking.sol\":4061:4102  pool.stakedAmounts[msg.sender] -= _amount */\n      tag_174\n      jump\t// in\n    tag_223:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4133:4140  _amount */\n      dup5\n        /* \"contracts/Staking.sol\":4113:4117  pool */\n      dup5\n        /* \"contracts/Staking.sol\":4113:4129  pool.totalStaked */\n      0x01\n      add\n      0x00\n        /* \"contracts/Staking.sol\":4113:4140  pool.totalStaked -= _amount */\n      dup3\n      dup3\n      sload\n      tag_224\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_224:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Staking.sol\":4161:4173  stakingToken */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":4161:4210  stakingToken.transfer(msg.sender, amountAfterFee) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":4183:4193  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4161:4210  stakingToken.transfer(msg.sender, amountAfterFee) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3467:3518   */\n      mstore\n        /* \"#utility.yul\":3534:3552   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3527:3561   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking.sol\":4161:4173  stakingToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Staking.sol\":4161:4182  stakingToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3440:3458   */\n      0x44\n      add\n        /* \"contracts/Staking.sol\":4161:4210  stakingToken.transfer(msg.sender, amountAfterFee) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_227\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_227:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_228\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_228:\n        /* \"contracts/Staking.sol\":4153:4230  require(stakingToken.transfer(msg.sender, amountAfterFee), \"Transfer failed\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7167:7169   */\n      0x20\n        /* \"contracts/Staking.sol\":4153:4230  require(stakingToken.transfer(msg.sender, amountAfterFee), \"Transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7149:7170   */\n      mstore\n        /* \"#utility.yul\":7206:7208   */\n      0x0f\n        /* \"#utility.yul\":7186:7204   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7179:7209   */\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":7225:7243   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7218:7263   */\n      mstore\n        /* \"#utility.yul\":7280:7298   */\n      0x64\n      add\n        /* \"contracts/Staking.sol\":4153:4230  require(stakingToken.transfer(msg.sender, amountAfterFee), \"Transfer failed\") */\n      tag_108\n        /* \"#utility.yul\":6965:7304   */\n      jump\n        /* \"contracts/Staking.sol\":4153:4230  require(stakingToken.transfer(msg.sender, amountAfterFee), \"Transfer failed\") */\n    tag_229:\n        /* \"contracts/Staking.sol\":4249:4261  stakingToken */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":4271:4280  feeWallet */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":4249:4286  stakingToken.transfer(feeWallet, fee) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking.sol\":4271:4280  feeWallet */\n      swap2\n      dup3\n      and\n        /* \"contracts/Staking.sol\":4249:4286  stakingToken.transfer(feeWallet, fee) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3467:3518   */\n      mstore\n        /* \"#utility.yul\":3534:3552   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3527:3561   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/Staking.sol\":4249:4261  stakingToken */\n      swap2\n      and\n      swap1\n        /* \"contracts/Staking.sol\":4249:4270  stakingToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3440:3458   */\n      0x44\n      add\n        /* \"contracts/Staking.sol\":4249:4286  stakingToken.transfer(feeWallet, fee) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_233\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_233:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_234\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_234:\n        /* \"contracts/Staking.sol\":4241:4310  require(stakingToken.transfer(feeWallet, fee), \"Fee transfer failed\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7511:7513   */\n      0x20\n        /* \"contracts/Staking.sol\":4241:4310  require(stakingToken.transfer(feeWallet, fee), \"Fee transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7493:7514   */\n      mstore\n        /* \"#utility.yul\":7550:7552   */\n      0x13\n        /* \"#utility.yul\":7530:7548   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7523:7553   */\n      mstore\n      shl(0x6a, 0x119959481d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":7569:7587   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7562:7611   */\n      mstore\n        /* \"#utility.yul\":7628:7646   */\n      0x64\n      add\n        /* \"contracts/Staking.sol\":4241:4310  require(stakingToken.transfer(feeWallet, fee), \"Fee transfer failed\") */\n      tag_108\n        /* \"#utility.yul\":7309:7652   */\n      jump\n        /* \"contracts/Staking.sol\":4241:4310  require(stakingToken.transfer(feeWallet, fee), \"Fee transfer failed\") */\n    tag_235:\n        /* \"contracts/Staking.sol\":4328:4373  Unstaked(msg.sender, _poolId, amountAfterFee) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4379:4404   */\n      dup8\n      dup2\n      mstore\n        /* \"#utility.yul\":4435:4437   */\n      0x20\n        /* \"#utility.yul\":4420:4438   */\n      dup2\n      add\n        /* \"#utility.yul\":4413:4447   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Staking.sol\":4337:4347  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Staking.sol\":4328:4373  Unstaked(msg.sender, _poolId, amountAfterFee) */\n      0x7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e\n      swap2\n        /* \"#utility.yul\":4352:4370   */\n      add\n        /* \"contracts/Staking.sol\":4328:4373  Unstaked(msg.sender, _poolId, amountAfterFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Staking.sol\":3502:4381  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_194\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"contracts/Staking.sol\":4389:4821  function calculateReward(uint256 _poolId, address _user) public view returns (uint256) {... */\n    tag_79:\n        /* \"contracts/Staking.sol\":4467:4474  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4507:4521  pools[_poolId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":4507:4512  pools */\n      0x04\n        /* \"contracts/Staking.sol\":4507:4521  pools[_poolId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking.sol\":4555:4580  pool.stakedAmounts[_user] */\n      dup6\n      and\n      dup5\n      mstore\n        /* \"contracts/Staking.sol\":4555:4573  pool.stakedAmounts */\n      0x03\n      dup2\n      add\n        /* \"contracts/Staking.sol\":4555:4580  pool.stakedAmounts[_user] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n      sload\n        /* \"contracts/Staking.sol\":4597:4614  stakedAmount == 0 */\n      dup1\n      dup4\n      sub\n        /* \"contracts/Staking.sol\":4593:4651  if (stakedAmount == 0) {... */\n      tag_240\n      jumpi\n        /* \"contracts/Staking.sol\":4638:4639  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4631:4639  return 0 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_239)\n        /* \"contracts/Staking.sol\":4593:4651  if (stakedAmount == 0) {... */\n    tag_240:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking.sol\":4707:4733  pool.lastStakedTime[_user] */\n      dup5\n      and\n        /* \"contracts/Staking.sol\":4663:4686  uint256 stakingDuration */\n      0x00\n        /* \"contracts/Staking.sol\":4707:4733  pool.lastStakedTime[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":4707:4726  pool.lastStakedTime */\n      0x04\n      dup4\n      add\n        /* \"contracts/Staking.sol\":4707:4733  pool.lastStakedTime[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Staking.sol\":4689:4733  block.timestamp - pool.lastStakedTime[_user] */\n      tag_241\n      swap1\n        /* \"contracts/Staking.sol\":4689:4704  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":4689:4733  block.timestamp - pool.lastStakedTime[_user] */\n      tag_174\n      jump\t// in\n    tag_241:\n        /* \"contracts/Staking.sol\":4663:4733  uint256 stakingDuration = block.timestamp - pool.lastStakedTime[_user] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4798:4812  365 days * 100 */\n      0xbbf81e00\n        /* \"contracts/Staking.sol\":4778:4793  stakingDuration */\n      dup2\n        /* \"contracts/Staking.sol\":4767:4771  pool */\n      dup5\n        /* \"contracts/Staking.sol\":4767:4775  pool.apy */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":4752:4764  stakedAmount */\n      dup5\n        /* \"contracts/Staking.sol\":4752:4775  stakedAmount * pool.apy */\n      tag_242\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_242:\n        /* \"contracts/Staking.sol\":4752:4793  stakedAmount * pool.apy * stakingDuration */\n      tag_243\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_243:\n        /* \"contracts/Staking.sol\":4751:4813  (stakedAmount * pool.apy * stakingDuration) / (365 days * 100) */\n      tag_244\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_244:\n        /* \"contracts/Staking.sol\":4744:4813  return (stakedAmount * pool.apy * stakingDuration) / (365 days * 100) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":4389:4821  function calculateReward(uint256 _poolId, address _user) public view returns (uint256) {... */\n    tag_239:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":6311:6530  function getUserLastStakedTime(uint256 _poolId, address _user) external view returns (uint256) {... */\n    tag_88:\n        /* \"contracts/Staking.sol\":6397:6404  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":6435:6444  poolCount */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":6425:6432  _poolId */\n      dup4\n        /* \"contracts/Staking.sol\":6425:6444  _poolId < poolCount */\n      lt\n        /* \"contracts/Staking.sol\":6417:6468  require(_poolId < poolCount, \"Pool does not exist\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_246:\n      pop\n        /* \"contracts/Staking.sol\":6486:6500  pools[_poolId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":6486:6491  pools */\n      0x04\n        /* \"contracts/Staking.sol\":6486:6500  pools[_poolId] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking.sol\":6486:6522  pools[_poolId].lastStakedTime[_user] */\n      dup7\n      and\n      dup6\n      mstore\n        /* \"contracts/Staking.sol\":6486:6515  pools[_poolId].lastStakedTime */\n      swap1\n      swap3\n      add\n        /* \"contracts/Staking.sol\":6486:6522  pools[_poolId].lastStakedTime[_user] */\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Staking.sol\":6311:6530  function getUserLastStakedTime(uint256 _poolId, address _user) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":6087:6303  function getUserStakedAmount(uint256 _poolId, address _user) external view returns (uint256) {... */\n    tag_92:\n        /* \"contracts/Staking.sol\":6171:6178  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":6209:6218  poolCount */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":6199:6206  _poolId */\n      dup4\n        /* \"contracts/Staking.sol\":6199:6218  _poolId < poolCount */\n      lt\n        /* \"contracts/Staking.sol\":6191:6242  require(_poolId < poolCount, \"Pool does not exist\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_249:\n      pop\n        /* \"contracts/Staking.sol\":6260:6274  pools[_poolId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Staking.sol\":6260:6265  pools */\n      0x04\n        /* \"contracts/Staking.sol\":6260:6274  pools[_poolId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Staking.sol\":6260:6295  pools[_poolId].stakedAmounts[_user] */\n      dup6\n      and\n      dup5\n      mstore\n        /* \"contracts/Staking.sol\":6260:6288  pools[_poolId].stakedAmounts */\n      0x03\n      add\n        /* \"contracts/Staking.sol\":6260:6295  pools[_poolId].stakedAmounts[_user] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Staking.sol\":6087:6303  function getUserStakedAmount(uint256 _poolId, address _user) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_252:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1420:1471   */\n      mstore\n        /* \"#utility.yul\":1393:1411   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_108\n        /* \"#utility.yul\":1260:1477   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8698:8700   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8680:8701   */\n      mstore\n        /* \"#utility.yul\":8737:8739   */\n      0x1f\n        /* \"#utility.yul\":8717:8735   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8710:8740   */\n      mstore\n        /* \"#utility.yul\":8776:8809   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":8756:8774   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8749:8810   */\n      mstore\n        /* \"#utility.yul\":8827:8845   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_108\n        /* \"#utility.yul\":8496:8851   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_258:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1420:1471   */\n      mstore\n        /* \"#utility.yul\":1393:1411   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_108\n        /* \"#utility.yul\":1260:1477   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:240   */\n    tag_29:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_275:\n      pop\n        /* \"#utility.yul\":187:210   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:240   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":595:768   */\n    tag_271:\n        /* \"#utility.yul\":663:683   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":712:743   */\n      dup2\n      and\n        /* \"#utility.yul\":702:744   */\n      dup2\n      eq\n        /* \"#utility.yul\":692:762   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":758:759   */\n      0x00\n        /* \"#utility.yul\":755:756   */\n      dup1\n        /* \"#utility.yul\":748:760   */\n      revert\n        /* \"#utility.yul\":692:762   */\n    tag_278:\n        /* \"#utility.yul\":595:768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":773:1073   */\n    tag_38:\n        /* \"#utility.yul\":841:847   */\n      0x00\n        /* \"#utility.yul\":849:855   */\n      dup1\n        /* \"#utility.yul\":902:904   */\n      0x40\n        /* \"#utility.yul\":890:899   */\n      dup4\n        /* \"#utility.yul\":881:888   */\n      dup6\n        /* \"#utility.yul\":877:900   */\n      sub\n        /* \"#utility.yul\":873:905   */\n      slt\n        /* \"#utility.yul\":870:922   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":918:919   */\n      0x00\n        /* \"#utility.yul\":915:916   */\n      dup1\n        /* \"#utility.yul\":908:920   */\n      revert\n        /* \"#utility.yul\":870:922   */\n    tag_280:\n        /* \"#utility.yul\":963:986   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1029:1067   */\n      tag_281\n        /* \"#utility.yul\":1063:1065   */\n      0x20\n        /* \"#utility.yul\":1048:1066   */\n      dup5\n      add\n        /* \"#utility.yul\":1029:1067   */\n      tag_271\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":1019:1067   */\n      swap1\n      pop\n        /* \"#utility.yul\":773:1073   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1482:1828   */\n    tag_61:\n        /* \"#utility.yul\":1550:1556   */\n      0x00\n        /* \"#utility.yul\":1558:1564   */\n      dup1\n        /* \"#utility.yul\":1611:1613   */\n      0x40\n        /* \"#utility.yul\":1599:1608   */\n      dup4\n        /* \"#utility.yul\":1590:1597   */\n      dup6\n        /* \"#utility.yul\":1586:1609   */\n      sub\n        /* \"#utility.yul\":1582:1614   */\n      slt\n        /* \"#utility.yul\":1579:1631   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":1627:1628   */\n      0x00\n        /* \"#utility.yul\":1624:1625   */\n      dup1\n        /* \"#utility.yul\":1617:1629   */\n      revert\n        /* \"#utility.yul\":1579:1631   */\n    tag_285:\n      pop\n      pop\n        /* \"#utility.yul\":1672:1695   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1792:1794   */\n      0x20\n        /* \"#utility.yul\":1777:1795   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1764:1796   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1482:1828   */\n      jump\t// out\n        /* \"#utility.yul\":2041:2227   */\n    tag_72:\n        /* \"#utility.yul\":2100:2106   */\n      0x00\n        /* \"#utility.yul\":2153:2155   */\n      0x20\n        /* \"#utility.yul\":2141:2150   */\n      dup3\n        /* \"#utility.yul\":2132:2139   */\n      dup5\n        /* \"#utility.yul\":2128:2151   */\n      sub\n        /* \"#utility.yul\":2124:2156   */\n      slt\n        /* \"#utility.yul\":2121:2173   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":2169:2170   */\n      0x00\n        /* \"#utility.yul\":2166:2167   */\n      dup1\n        /* \"#utility.yul\":2159:2171   */\n      revert\n        /* \"#utility.yul\":2121:2173   */\n    tag_288:\n        /* \"#utility.yul\":2192:2221   */\n      tag_289\n        /* \"#utility.yul\":2211:2220   */\n      dup3\n        /* \"#utility.yul\":2192:2221   */\n      tag_271\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2182:2221   */\n      swap4\n        /* \"#utility.yul\":2041:2227   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2596:2939   */\n    tag_109:\n        /* \"#utility.yul\":2798:2800   */\n      0x20\n        /* \"#utility.yul\":2780:2801   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2837:2839   */\n      0x13\n        /* \"#utility.yul\":2817:2835   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2810:2840   */\n      mstore\n      shl(0x6a, 0x141bdbdb08191bd95cc81b9bdd08195e1a5cdd)\n        /* \"#utility.yul\":2871:2873   */\n      0x40\n        /* \"#utility.yul\":2856:2874   */\n      dup3\n      add\n        /* \"#utility.yul\":2849:2898   */\n      mstore\n        /* \"#utility.yul\":2930:2932   */\n      0x60\n        /* \"#utility.yul\":2915:2933   */\n      add\n      swap1\n        /* \"#utility.yul\":2596:2939   */\n      jump\t// out\n        /* \"#utility.yul\":3572:3849   */\n    tag_119:\n        /* \"#utility.yul\":3639:3645   */\n      0x00\n        /* \"#utility.yul\":3692:3694   */\n      0x20\n        /* \"#utility.yul\":3680:3689   */\n      dup3\n        /* \"#utility.yul\":3671:3678   */\n      dup5\n        /* \"#utility.yul\":3667:3690   */\n      sub\n        /* \"#utility.yul\":3663:3695   */\n      slt\n        /* \"#utility.yul\":3660:3712   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":3708:3709   */\n      0x00\n        /* \"#utility.yul\":3705:3706   */\n      dup1\n        /* \"#utility.yul\":3698:3710   */\n      revert\n        /* \"#utility.yul\":3660:3712   */\n    tag_295:\n        /* \"#utility.yul\":3740:3749   */\n      dup2\n        /* \"#utility.yul\":3734:3750   */\n      mload\n        /* \"#utility.yul\":3793:3798   */\n      dup1\n        /* \"#utility.yul\":3786:3799   */\n      iszero\n        /* \"#utility.yul\":3779:3800   */\n      iszero\n        /* \"#utility.yul\":3772:3777   */\n      dup2\n        /* \"#utility.yul\":3769:3801   */\n      eq\n        /* \"#utility.yul\":3759:3819   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":3815:3816   */\n      0x00\n        /* \"#utility.yul\":3812:3813   */\n      dup1\n        /* \"#utility.yul\":3805:3817   */\n      revert\n        /* \"#utility.yul\":5081:5208   */\n    tag_272:\n        /* \"#utility.yul\":5142:5152   */\n      0x4e487b71\n        /* \"#utility.yul\":5137:5140   */\n      0xe0\n        /* \"#utility.yul\":5133:5153   */\n      shl\n        /* \"#utility.yul\":5130:5131   */\n      0x00\n        /* \"#utility.yul\":5123:5154   */\n      mstore\n        /* \"#utility.yul\":5173:5177   */\n      0x11\n        /* \"#utility.yul\":5170:5171   */\n      0x04\n        /* \"#utility.yul\":5163:5178   */\n      mstore\n        /* \"#utility.yul\":5197:5201   */\n      0x24\n        /* \"#utility.yul\":5194:5195   */\n      0x00\n        /* \"#utility.yul\":5187:5202   */\n      revert\n        /* \"#utility.yul\":5213:5348   */\n    tag_141:\n        /* \"#utility.yul\":5252:5255   */\n      0x00\n        /* \"#utility.yul\":5273:5290   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":5270:5313   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":5293:5311   */\n      tag_304\n      tag_272\n      jump\t// in\n    tag_304:\n      pop\n        /* \"#utility.yul\":5340:5341   */\n      0x01\n        /* \"#utility.yul\":5329:5342   */\n      add\n      swap1\n        /* \"#utility.yul\":5213:5348   */\n      jump\t// out\n        /* \"#utility.yul\":6061:6229   */\n    tag_170:\n        /* \"#utility.yul\":6134:6143   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6165:6174   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6182:6197   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6176:6198   */\n      dup5\n      eq\n        /* \"#utility.yul\":6162:6199   */\n      or\n        /* \"#utility.yul\":6152:6223   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":6203:6221   */\n      tag_239\n      tag_272\n      jump\t// in\n        /* \"#utility.yul\":6234:6451   */\n    tag_172:\n        /* \"#utility.yul\":6274:6275   */\n      0x00\n        /* \"#utility.yul\":6300:6301   */\n      dup3\n        /* \"#utility.yul\":6290:6422   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":6344:6354   */\n      0x4e487b71\n        /* \"#utility.yul\":6339:6342   */\n      0xe0\n        /* \"#utility.yul\":6335:6355   */\n      shl\n        /* \"#utility.yul\":6332:6333   */\n      0x00\n        /* \"#utility.yul\":6325:6356   */\n      mstore\n        /* \"#utility.yul\":6379:6383   */\n      0x12\n        /* \"#utility.yul\":6376:6377   */\n      0x04\n        /* \"#utility.yul\":6369:6384   */\n      mstore\n        /* \"#utility.yul\":6407:6411   */\n      0x24\n        /* \"#utility.yul\":6404:6405   */\n      0x00\n        /* \"#utility.yul\":6397:6412   */\n      revert\n        /* \"#utility.yul\":6290:6422   */\n    tag_311:\n      pop\n        /* \"#utility.yul\":6436:6445   */\n      div\n      swap1\n        /* \"#utility.yul\":6234:6451   */\n      jump\t// out\n        /* \"#utility.yul\":6456:6584   */\n    tag_174:\n        /* \"#utility.yul\":6523:6532   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6544:6555   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6541:6578   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":6558:6576   */\n      tag_239\n      tag_272\n      jump\t// in\n        /* \"#utility.yul\":7657:7782   */\n    tag_191:\n        /* \"#utility.yul\":7722:7731   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7743:7753   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7740:7776   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":7756:7774   */\n      tag_239\n      tag_272\n      jump\t// in\n\n    auxdata: 0xa26469706673582212205ce8940413ecb077250abe281c0bdbfbd357062f93dabaf13a7ec8acd98fdf1364736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_424": {
									"entryPoint": null,
									"id": 424,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 141,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:514:5",
										"nodeType": "YulBlock",
										"src": "0:514:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:5",
													"nodeType": "YulBlock",
													"src": "95:209:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:5",
																"nodeType": "YulBlock",
																"src": "141:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:5",
																					"nodeType": "YulLiteral",
																					"src": "150:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:5",
																					"nodeType": "YulLiteral",
																					"src": "153:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:5"
																			},
																			"nativeSrc": "143:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:5"
																		},
																		"nativeSrc": "143:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:5"
																		},
																		"nativeSrc": "112:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:5",
																		"nodeType": "YulLiteral",
																		"src": "137:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:5"
																},
																"nativeSrc": "108:32:5",
																"nodeType": "YulFunctionCall",
																"src": "108:32:5"
															},
															"nativeSrc": "105:52:5",
															"nodeType": "YulIf",
															"src": "105:52:5"
														},
														{
															"nativeSrc": "166:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:5"
																},
																"nativeSrc": "179:16:5",
																"nodeType": "YulFunctionCall",
																"src": "179:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:5",
																	"nodeType": "YulTypedName",
																	"src": "170:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:5",
																"nodeType": "YulBlock",
																"src": "258:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:5",
																					"nodeType": "YulLiteral",
																					"src": "267:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:5",
																					"nodeType": "YulLiteral",
																					"src": "270:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:5"
																			},
																			"nativeSrc": "260:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:5"
																		},
																		"nativeSrc": "260:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:5",
																										"nodeType": "YulLiteral",
																										"src": "243:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:5",
																										"nodeType": "YulLiteral",
																										"src": "248:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:5"
																								},
																								"nativeSrc": "239:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:5",
																								"nodeType": "YulLiteral",
																								"src": "252:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:5"
																						},
																						"nativeSrc": "235:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:5"
																				},
																				"nativeSrc": "224:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:5"
																		},
																		"nativeSrc": "214:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:5"
																},
																"nativeSrc": "207:50:5",
																"nodeType": "YulFunctionCall",
																"src": "207:50:5"
															},
															"nativeSrc": "204:70:5",
															"nodeType": "YulIf",
															"src": "204:70:5"
														},
														{
															"nativeSrc": "283:15:5",
															"nodeType": "YulAssignment",
															"src": "283:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:5",
																"nodeType": "YulIdentifier",
																"src": "293:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:5",
														"nodeType": "YulTypedName",
														"src": "61:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:5",
														"nodeType": "YulTypedName",
														"src": "72:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:5",
														"nodeType": "YulTypedName",
														"src": "84:6:5",
														"type": ""
													}
												],
												"src": "14:290:5"
											},
											{
												"body": {
													"nativeSrc": "410:102:5",
													"nodeType": "YulBlock",
													"src": "410:102:5",
													"statements": [
														{
															"nativeSrc": "420:26:5",
															"nodeType": "YulAssignment",
															"src": "420:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "432:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:2:5",
																		"nodeType": "YulLiteral",
																		"src": "443:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:5"
																},
																"nativeSrc": "428:18:5",
																"nodeType": "YulFunctionCall",
																"src": "428:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "420:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "462:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "477:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "493:3:5",
																								"nodeType": "YulLiteral",
																								"src": "493:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "498:1:5",
																								"nodeType": "YulLiteral",
																								"src": "498:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "489:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:5"
																						},
																						"nativeSrc": "489:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "502:1:5",
																						"nodeType": "YulLiteral",
																						"src": "502:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "485:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:5"
																				},
																				"nativeSrc": "485:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "473:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:5"
																		},
																		"nativeSrc": "473:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "455:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:5"
																},
																"nativeSrc": "455:51:5",
																"nodeType": "YulFunctionCall",
																"src": "455:51:5"
															},
															"nativeSrc": "455:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "455:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "309:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "379:9:5",
														"nodeType": "YulTypedName",
														"src": "379:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "390:6:5",
														"nodeType": "YulTypedName",
														"src": "390:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "401:4:5",
														"nodeType": "YulTypedName",
														"src": "401:4:5",
														"type": ""
													}
												],
												"src": "309:203:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161133c38038061133c83398101604081905261002f916100dd565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e8161008d565b5060018055600280546001600160a01b0319166001600160a01b0392909216919091179055600060055561010d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ef57600080fd5b81516001600160a01b038116811461010657600080fd5b9392505050565b6112208061011c6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638da5cb5b116100b8578063ac4afa381161007c578063ac4afa3814610272578063b684edcf146102ce578063d13d8258146102e1578063f25f4b56146102f4578063f2fde38b14610307578063f525cb681461031a57600080fd5b80638da5cb5b146102205780638eec5d701461023157806390d49b9d146102395780639e2c8a5b1461024c578063a18f07a01461025f57600080fd5b80636bbf758d116100ff5780636bbf758d146101c95780636e99d52f146101d1578063715018a6146101da57806372f702f3146101e25780637b0472f01461020d57600080fd5b80630962ef791461013c5780632f380b351461015157806333ba88821461018c5780633a4ae6691461019f5780634d333a21146101b6575b600080fd5b61014f61014a366004611068565b610323565b005b61016461015f366004611068565b6104d1565b604080519384526001600160a01b039092166020840152908201526060015b60405180910390f35b61014f61019a36600461109d565b610525565b6101a86101f481565b604051908152602001610183565b61014f6101c4366004611068565b61060a565b6101a860c881565b6101a861384081565b61014f6106bd565b6002546101f5906001600160a01b031681565b6040516001600160a01b039091168152602001610183565b61014f61021b3660046110c9565b6106d1565b6000546001600160a01b03166101f5565b6005546101a8565b61014f6102473660046110eb565b6109e6565b61014f61025a3660046110c9565b610a5a565b6101a861026d36600461109d565b610e22565b6102aa610280366004611068565b6004602052600090815260409020805460018201546002909201549091906001600160a01b031683565b6040805193845260208401929092526001600160a01b031690820152606001610183565b6101a86102dc36600461109d565b610eb8565b6101a86102ef36600461109d565b610f07565b6003546101f5906001600160a01b031681565b61014f6103153660046110eb565b610f57565b6101a860055481565b61032b610f92565b60055481106103555760405162461bcd60e51b815260040161034c9061110d565b60405180910390fd5b60008181526004602052604081209061036e8333610e22565b9050600081116103b75760405162461bcd60e51b81526020600482015260146024820152734e6f207265776172647320617661696c61626c6560601b604482015260640161034c565b33600081815260048481016020526040918290204290556002850154915163a9059cbb60e01b815290810192909252602482018390526001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561041f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610443919061113a565b6104885760405162461bcd60e51b815260206004820152601660248201527514995dd85c99081d1c985b9cd9995c8819985a5b195960521b604482015260640161034c565b604080518481526020810183905233917ff01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e2731743910160405180910390a250506104ce60018055565b50565b600080600060055484106104f75760405162461bcd60e51b815260040161034c9061110d565b50505060009081526004602052604090208054600282015460019092015490926001600160a01b0390921691565b61052d610feb565b806001600160a01b0381166105765760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161034c565b6005805460009081526004602090815260408083208781556002810180546001600160a01b0319166001600160a01b038916908117909155600182019490945593548151888152928301939093527fae9596825f83aa972e67ed4a3ac74d2eb98b77ee23453868db5dc3b08a0316ca910160405180910390a2600580549060006105ff83611172565b919050555050505050565b610612610feb565b60055481106106335760405162461bcd60e51b815260040161034c9061110d565b6000818152600460205260409020600181015469152d02c7e14af68000001161065f57601e8155610682565b690a968163f0a57b40000081600101541061067d5760648155610682565b60c881555b805460405190815282907f9c4893e20d6432767854bfaa7ead2c90ad7644e9440c6861a383f63e4fb2803e9060200160405180910390a25050565b6106c5610feb565b6106cf6000611018565b565b6106d9610f92565b6003546001600160a01b03166107265760405162461bcd60e51b8152602060048201526012602482015271119959481dd85b1b195d081b9bdd081cd95d60721b604482015260640161034c565b60055482106107475760405162461bcd60e51b815260040161034c9061110d565b600081116107975760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161034c565b6000828152600460205260408120906127106107b460c88561118b565b6107be91906111a2565b905060006107cc82856111c4565b6002546040516323b872dd60e01b8152336004820152306024820152604481018390529192506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610824573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610848919061113a565b6108865760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161034c565b6002546003546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152604481018590529116906323b872dd906064016020604051808303816000875af11580156108e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610905919061113a565b6109475760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b604482015260640161034c565b336000908152600384016020526040812080548392906109689084906111d7565b925050819055508083600101600082825461098391906111d7565b909155505033600081815260048501602090815260409182902042905581518881529081018490527f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90910160405180910390a25050506109e260018055565b5050565b6109ee610feb565b806001600160a01b038116610a375760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161034c565b50600380546001600160a01b0319166001600160a01b0392909216919091179055565b610a62610f92565b6003546001600160a01b0316610aaf5760405162461bcd60e51b8152602060048201526012602482015271119959481dd85b1b195d081b9bdd081cd95d60721b604482015260640161034c565b6005548210610ad05760405162461bcd60e51b815260040161034c9061110d565b60008111610b205760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161034c565b6000828152600460209081526040808320338452600381019092529091205482811015610b8f5760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e74207374616b65642062616c616e63650000000000604482015260640161034c565b336000908152600483016020526040902054610bae90613840906111d7565b421015610bfd5760405162461bcd60e51b815260206004820152601860248201527f436f6f6c646f776e20706572696f64206e6f74206f7665720000000000000000604482015260640161034c565b6000612710610c0e6101f48661118b565b610c1891906111a2565b90506000610c2682866111c4565b336000908152600386016020526040812080549293508792909190610c4c9084906111c4565b9250508190555084846001016000828254610c6791906111c4565b909155505060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce1919061113a565b610d1f5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161034c565b60025460035460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af1158015610d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d98919061113a565b610dda5760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b604482015260640161034c565b604080518781526020810183905233917f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e910160405180910390a2505050506109e260018055565b60008281526004602090815260408083206001600160a01b038516845260038101909252822054808303610e5b57600092505050610eb2565b6001600160a01b0384166000908152600483016020526040812054610e8090426111c4565b905063bbf81e0081846000015484610e98919061118b565b610ea2919061118b565b610eac91906111a2565b93505050505b92915050565b60006005548310610edb5760405162461bcd60e51b815260040161034c9061110d565b5060008281526004602081815260408084206001600160a01b0386168552909201905290205492915050565b60006005548310610f2a5760405162461bcd60e51b815260040161034c9061110d565b5060008281526004602090815260408083206001600160a01b038516845260030190915290205492915050565b610f5f610feb565b6001600160a01b038116610f8957604051631e4fbdf760e01b81526000600482015260240161034c565b6104ce81611018565b600260015403610fe45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161034c565b6002600155565b6000546001600160a01b031633146106cf5760405163118cdaa760e01b815233600482015260240161034c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561107a57600080fd5b5035919050565b80356001600160a01b038116811461109857600080fd5b919050565b600080604083850312156110b057600080fd5b823591506110c060208401611081565b90509250929050565b600080604083850312156110dc57600080fd5b50508035926020909101359150565b6000602082840312156110fd57600080fd5b61110682611081565b9392505050565b602080825260139082015272141bdbdb08191bd95cc81b9bdd08195e1a5cdd606a1b604082015260600190565b60006020828403121561114c57600080fd5b8151801515811461110657600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016111845761118461115c565b5060010190565b8082028115828204841417610eb257610eb261115c565b6000826111bf57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610eb257610eb261115c565b80820180821115610eb257610eb261115c56fea26469706673582212205ce8940413ecb077250abe281c0bdbfbd357062f93dabaf13a7ec8acd98fdf1364736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x133C CODESIZE SUB DUP1 PUSH2 0x133C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xDD JUMP JUMPDEST CALLER DUP1 PUSH2 0x55 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E DUP2 PUSH2 0x8D JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH2 0x10D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1220 DUP1 PUSH2 0x11C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xAC4AFA38 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xAC4AFA38 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xB684EDCF EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xD13D8258 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xF25F4B56 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xF525CB68 EQ PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x8EEC5D70 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x90D49B9D EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x9E2C8A5B EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xA18F07A0 EQ PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6BBF758D GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x6BBF758D EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6E99D52F EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x962EF79 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x2F380B35 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x33BA8882 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x3A4AE669 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x4D333A21 EQ PUSH2 0x1B6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x1068 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x1068 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x109D JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x183 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1068 JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST PUSH2 0x1A8 PUSH1 0xC8 DUP2 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x3840 DUP2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1F5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x183 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1A8 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x109D JUMP JUMPDEST PUSH2 0xE22 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x183 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x109D JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x109D JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1F5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0xF57 JUMP JUMPDEST PUSH2 0x1A8 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x32B PUSH2 0xF92 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT PUSH2 0x355 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x36E DUP4 CALLER PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F207265776172647320617661696C61626C65 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP5 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x2 DUP6 ADD SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14995DD85C99081D1C985B9CD9995C8819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF01DA32686223933D8A18A391060918C7F11A3648639EDD87AE013E2E2731743 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x4CE PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x5 SLOAD DUP5 LT PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0x110D JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 JUMP JUMPDEST PUSH2 0x52D PUSH2 0xFEB JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP2 SSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP3 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP4 SLOAD DUP2 MLOAD DUP9 DUP2 MSTORE SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0xAE9596825F83AA972E67ED4A3AC74D2EB98B77EE23453868DB5DC3B08A0316CA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x5 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x5FF DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x612 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT PUSH2 0x633 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH10 0x152D02C7E14AF6800000 GT PUSH2 0x65F JUMPI PUSH1 0x1E DUP2 SSTORE PUSH2 0x682 JUMP JUMPDEST PUSH10 0xA968163F0A57B400000 DUP2 PUSH1 0x1 ADD SLOAD LT PUSH2 0x67D JUMPI PUSH1 0x64 DUP2 SSTORE PUSH2 0x682 JUMP JUMPDEST PUSH1 0xC8 DUP2 SSTORE JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE DUP3 SWAP1 PUSH32 0x9C4893E20D6432767854BFAA7EAD2C90AD7644E9440C6861A383F63E4FB2803E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x6C5 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x6CF PUSH1 0x0 PUSH2 0x1018 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6D9 PUSH2 0xF92 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x726 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x119959481DD85B1B195D081B9BDD081CD95D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 LT PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x2710 PUSH2 0x7B4 PUSH1 0xC8 DUP6 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x11A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7CC DUP3 DUP6 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x824 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x848 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x886 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x905 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x947 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x968 SWAP1 DUP5 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x983 SWAP2 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE DUP2 MLOAD DUP9 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x9E2 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9EE PUSH2 0xFEB JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA62 PUSH2 0xF92 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x119959481DD85B1B195D081B9BDD081CD95D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 LT PUSH2 0xAD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x3 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xB8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBAE SWAP1 PUSH2 0x3840 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6F6C646F776E20706572696F64206E6F74206F7665720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH2 0xC0E PUSH2 0x1F4 DUP7 PUSH2 0x118B JUMP JUMPDEST PUSH2 0xC18 SWAP2 SWAP1 PUSH2 0x11A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC26 DUP3 DUP7 PUSH2 0x11C4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP8 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xC4C SWAP1 DUP5 SWAP1 PUSH2 0x11C4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP5 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC67 SWAP2 SWAP1 PUSH2 0x11C4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0xD1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD98 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0xDDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0x9E2 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x3 DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD DUP1 DUP4 SUB PUSH2 0xE5B JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xE80 SWAP1 TIMESTAMP PUSH2 0x11C4 JUMP JUMPDEST SWAP1 POP PUSH4 0xBBF81E00 DUP2 DUP5 PUSH1 0x0 ADD SLOAD DUP5 PUSH2 0xE98 SWAP2 SWAP1 PUSH2 0x118B JUMP JUMPDEST PUSH2 0xEA2 SWAP2 SWAP1 PUSH2 0x118B JUMP JUMPDEST PUSH2 0xEAC SWAP2 SWAP1 PUSH2 0x11A2 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD DUP4 LT PUSH2 0xEDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0x110D JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD DUP4 LT PUSH2 0xF2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0x110D JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF5F PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF89 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34C JUMP JUMPDEST PUSH2 0x4CE DUP2 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xFE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1098 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x10C0 PUSH1 0x20 DUP5 ADD PUSH2 0x1081 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1106 DUP3 PUSH2 0x1081 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x141BDBDB08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x114C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1184 JUMPI PUSH2 0x1184 PUSH2 0x115C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xEB2 JUMPI PUSH2 0xEB2 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xEB2 JUMPI PUSH2 0xEB2 PUSH2 0x115C JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xEB2 JUMPI PUSH2 0xEB2 PUSH2 0x115C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TLOAD 0xE8 SWAP5 DIV SGT 0xEC 0xB0 PUSH24 0x250ABE281C0BDBFBD357062F93DABAF13A7EC8ACD98FDF13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "244:6388:4:-:0;;;1713:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1756:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:5;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1716:1:1;1821:22;;1779:12:4::1;:36:::0;;-1:-1:-1;;;;;;1779:36:4::1;-1:-1:-1::0;;;;;1779:36:4;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1826:9:4::1;:13:::0;244:6388;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:5:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;309:203::-;244:6388:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@COOLDOWN_PERIOD_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEPOSIT_FEE_BPS_340": {
									"entryPoint": null,
									"id": 340,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WITHDRAWAL_FEE_BPS_343": {
									"entryPoint": null,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4075,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_302": {
									"entryPoint": null,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": null,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 3986,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4120,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addPool_518": {
									"entryPoint": 1317,
									"id": 518,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@adjustAPY_919": {
									"entryPoint": 1546,
									"id": 919,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateReward_795": {
									"entryPoint": 3618,
									"id": 795,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimRewards_860": {
									"entryPoint": 803,
									"id": 860,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@feeWallet_337": {
									"entryPoint": null,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getPoolCount_1012": {
									"entryPoint": null,
									"id": 1012,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPoolInfo_956": {
									"entryPoint": 1233,
									"id": 956,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@getUserLastStakedTime_1004": {
									"entryPoint": 3768,
									"id": 1004,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getUserStakedAmount_980": {
									"entryPoint": 3847,
									"id": 980,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@poolCount_366": {
									"entryPoint": null,
									"id": 366,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pools_364": {
									"entryPoint": null,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1725,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setFeeWallet_469": {
									"entryPoint": 2534,
									"id": 469,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_623": {
									"entryPoint": 1745,
									"id": 623,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakingToken_332": {
									"entryPoint": null,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3927,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_741": {
									"entryPoint": 2650,
									"id": 741,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 4253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_450e63d12583b524c4239640e625b08c76818feaa191e82900f37b9aa0c748b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6e3d8bbfcef8ebc89bd4618ff46db01df5dd9a3f910e649e8b56fb682681de4f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_contract$_IERC20_$290__to_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4444,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8853:5",
										"nodeType": "YulBlock",
										"src": "0:8853:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:156:5",
													"nodeType": "YulBlock",
													"src": "84:156:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:5",
																"nodeType": "YulBlock",
																"src": "130:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:5",
																					"nodeType": "YulLiteral",
																					"src": "139:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:5",
																					"nodeType": "YulLiteral",
																					"src": "142:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:5"
																			},
																			"nativeSrc": "132:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:5"
																		},
																		"nativeSrc": "132:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:5"
																		},
																		"nativeSrc": "101:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:5",
																		"nodeType": "YulLiteral",
																		"src": "126:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:5"
																},
																"nativeSrc": "97:32:5",
																"nodeType": "YulFunctionCall",
																"src": "97:32:5"
															},
															"nativeSrc": "94:52:5",
															"nodeType": "YulIf",
															"src": "94:52:5"
														},
														{
															"nativeSrc": "155:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "155:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "168:1:5",
																"nodeType": "YulLiteral",
																"src": "168:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:5",
																	"nodeType": "YulTypedName",
																	"src": "159:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "178:32:5",
															"nodeType": "YulAssignment",
															"src": "178:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "200:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "200:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "187:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:12:5"
																},
																"nativeSrc": "187:23:5",
																"nodeType": "YulFunctionCall",
																"src": "187:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "178:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "178:5:5"
																}
															]
														},
														{
															"nativeSrc": "219:15:5",
															"nodeType": "YulAssignment",
															"src": "219:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "229:5:5",
																"nodeType": "YulIdentifier",
																"src": "229:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "219:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "219:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:226:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:5",
														"nodeType": "YulTypedName",
														"src": "50:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:5",
														"nodeType": "YulTypedName",
														"src": "61:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:5",
														"nodeType": "YulTypedName",
														"src": "73:6:5",
														"type": ""
													}
												],
												"src": "14:226:5"
											},
											{
												"body": {
													"nativeSrc": "402:188:5",
													"nodeType": "YulBlock",
													"src": "402:188:5",
													"statements": [
														{
															"nativeSrc": "412:26:5",
															"nodeType": "YulAssignment",
															"src": "412:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "424:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "424:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "435:2:5",
																		"nodeType": "YulLiteral",
																		"src": "435:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "420:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "420:3:5"
																},
																"nativeSrc": "420:18:5",
																"nodeType": "YulFunctionCall",
																"src": "420:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "412:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "412:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "454:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "454:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "465:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "465:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "447:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "447:6:5"
																},
																"nativeSrc": "447:25:5",
																"nodeType": "YulFunctionCall",
																"src": "447:25:5"
															},
															"nativeSrc": "447:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "447:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "492:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "492:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "503:2:5",
																				"nodeType": "YulLiteral",
																				"src": "503:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "488:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "488:3:5"
																		},
																		"nativeSrc": "488:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "488:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "512:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "512:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "528:3:5",
																								"nodeType": "YulLiteral",
																								"src": "528:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "533:1:5",
																								"nodeType": "YulLiteral",
																								"src": "533:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "524:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "524:3:5"
																						},
																						"nativeSrc": "524:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "524:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "537:1:5",
																						"nodeType": "YulLiteral",
																						"src": "537:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "520:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "520:3:5"
																				},
																				"nativeSrc": "520:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "520:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "508:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "508:3:5"
																		},
																		"nativeSrc": "508:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "508:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "481:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "481:6:5"
																},
																"nativeSrc": "481:60:5",
																"nodeType": "YulFunctionCall",
																"src": "481:60:5"
															},
															"nativeSrc": "481:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "481:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "561:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "561:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "572:2:5",
																				"nodeType": "YulLiteral",
																				"src": "572:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "557:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "557:3:5"
																		},
																		"nativeSrc": "557:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "557:18:5"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "577:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "577:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "550:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "550:6:5"
																},
																"nativeSrc": "550:34:5",
																"nodeType": "YulFunctionCall",
																"src": "550:34:5"
															},
															"nativeSrc": "550:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "550:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "245:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "355:9:5",
														"nodeType": "YulTypedName",
														"src": "355:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "366:6:5",
														"nodeType": "YulTypedName",
														"src": "366:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "374:6:5",
														"nodeType": "YulTypedName",
														"src": "374:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "382:6:5",
														"nodeType": "YulTypedName",
														"src": "382:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "393:4:5",
														"nodeType": "YulTypedName",
														"src": "393:4:5",
														"type": ""
													}
												],
												"src": "245:345:5"
											},
											{
												"body": {
													"nativeSrc": "644:124:5",
													"nodeType": "YulBlock",
													"src": "644:124:5",
													"statements": [
														{
															"nativeSrc": "654:29:5",
															"nodeType": "YulAssignment",
															"src": "654:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "676:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "676:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "663:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "663:12:5"
																},
																"nativeSrc": "663:20:5",
																"nodeType": "YulFunctionCall",
																"src": "663:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "654:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "654:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "746:16:5",
																"nodeType": "YulBlock",
																"src": "746:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "755:1:5",
																					"nodeType": "YulLiteral",
																					"src": "755:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "758:1:5",
																					"nodeType": "YulLiteral",
																					"src": "758:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "748:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:5"
																			},
																			"nativeSrc": "748:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "748:12:5"
																		},
																		"nativeSrc": "748:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "748:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "705:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "705:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "716:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "716:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "731:3:5",
																										"nodeType": "YulLiteral",
																										"src": "731:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "736:1:5",
																										"nodeType": "YulLiteral",
																										"src": "736:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "727:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "727:3:5"
																								},
																								"nativeSrc": "727:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "727:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "740:1:5",
																								"nodeType": "YulLiteral",
																								"src": "740:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "723:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "723:3:5"
																						},
																						"nativeSrc": "723:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "723:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "712:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "712:3:5"
																				},
																				"nativeSrc": "712:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "712:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "702:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "702:2:5"
																		},
																		"nativeSrc": "702:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "702:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "695:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "695:6:5"
																},
																"nativeSrc": "695:50:5",
																"nodeType": "YulFunctionCall",
																"src": "695:50:5"
															},
															"nativeSrc": "692:70:5",
															"nodeType": "YulIf",
															"src": "692:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "595:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "623:6:5",
														"nodeType": "YulTypedName",
														"src": "623:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "634:5:5",
														"nodeType": "YulTypedName",
														"src": "634:5:5",
														"type": ""
													}
												],
												"src": "595:173:5"
											},
											{
												"body": {
													"nativeSrc": "860:213:5",
													"nodeType": "YulBlock",
													"src": "860:213:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "906:16:5",
																"nodeType": "YulBlock",
																"src": "906:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "915:1:5",
																					"nodeType": "YulLiteral",
																					"src": "915:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "918:1:5",
																					"nodeType": "YulLiteral",
																					"src": "918:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "908:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "908:6:5"
																			},
																			"nativeSrc": "908:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "908:12:5"
																		},
																		"nativeSrc": "908:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "908:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "881:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "881:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "890:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "890:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "877:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "877:3:5"
																		},
																		"nativeSrc": "877:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "877:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "902:2:5",
																		"nodeType": "YulLiteral",
																		"src": "902:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "873:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "873:3:5"
																},
																"nativeSrc": "873:32:5",
																"nodeType": "YulFunctionCall",
																"src": "873:32:5"
															},
															"nativeSrc": "870:52:5",
															"nodeType": "YulIf",
															"src": "870:52:5"
														},
														{
															"nativeSrc": "931:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "931:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "944:1:5",
																"nodeType": "YulLiteral",
																"src": "944:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "935:5:5",
																	"nodeType": "YulTypedName",
																	"src": "935:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "954:32:5",
															"nodeType": "YulAssignment",
															"src": "954:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "976:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "976:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "963:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "963:12:5"
																},
																"nativeSrc": "963:23:5",
																"nodeType": "YulFunctionCall",
																"src": "963:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "954:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "954:5:5"
																}
															]
														},
														{
															"nativeSrc": "995:15:5",
															"nodeType": "YulAssignment",
															"src": "995:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "1005:5:5",
																"nodeType": "YulIdentifier",
																"src": "1005:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "995:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "995:6:5"
																}
															]
														},
														{
															"nativeSrc": "1019:48:5",
															"nodeType": "YulAssignment",
															"src": "1019:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1052:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1063:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1063:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1048:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1048:3:5"
																		},
																		"nativeSrc": "1048:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1048:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1029:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1029:18:5"
																},
																"nativeSrc": "1029:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1029:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1019:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1019:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "773:300:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "818:9:5",
														"nodeType": "YulTypedName",
														"src": "818:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "829:7:5",
														"nodeType": "YulTypedName",
														"src": "829:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "841:6:5",
														"nodeType": "YulTypedName",
														"src": "841:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "849:6:5",
														"nodeType": "YulTypedName",
														"src": "849:6:5",
														"type": ""
													}
												],
												"src": "773:300:5"
											},
											{
												"body": {
													"nativeSrc": "1179:76:5",
													"nodeType": "YulBlock",
													"src": "1179:76:5",
													"statements": [
														{
															"nativeSrc": "1189:26:5",
															"nodeType": "YulAssignment",
															"src": "1189:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1201:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1201:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1212:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1212:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1197:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1197:3:5"
																},
																"nativeSrc": "1197:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1197:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1189:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1189:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1231:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1231:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1242:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1242:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1224:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1224:6:5"
																},
																"nativeSrc": "1224:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1224:25:5"
															},
															"nativeSrc": "1224:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "1224:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1078:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1148:9:5",
														"nodeType": "YulTypedName",
														"src": "1148:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1159:6:5",
														"nodeType": "YulTypedName",
														"src": "1159:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1170:4:5",
														"nodeType": "YulTypedName",
														"src": "1170:4:5",
														"type": ""
													}
												],
												"src": "1078:177:5"
											},
											{
												"body": {
													"nativeSrc": "1375:102:5",
													"nodeType": "YulBlock",
													"src": "1375:102:5",
													"statements": [
														{
															"nativeSrc": "1385:26:5",
															"nodeType": "YulAssignment",
															"src": "1385:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1397:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1397:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1408:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1408:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1393:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1393:3:5"
																},
																"nativeSrc": "1393:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1393:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1385:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1385:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1427:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1427:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1442:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1442:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1458:3:5",
																								"nodeType": "YulLiteral",
																								"src": "1458:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1463:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1463:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1454:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1454:3:5"
																						},
																						"nativeSrc": "1454:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1454:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1467:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1467:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1450:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1450:3:5"
																				},
																				"nativeSrc": "1450:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1450:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1438:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1438:3:5"
																		},
																		"nativeSrc": "1438:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1438:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1420:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:5"
																},
																"nativeSrc": "1420:51:5",
																"nodeType": "YulFunctionCall",
																"src": "1420:51:5"
															},
															"nativeSrc": "1420:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "1420:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed",
												"nativeSrc": "1260:217:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1344:9:5",
														"nodeType": "YulTypedName",
														"src": "1344:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1355:6:5",
														"nodeType": "YulTypedName",
														"src": "1355:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1366:4:5",
														"nodeType": "YulTypedName",
														"src": "1366:4:5",
														"type": ""
													}
												],
												"src": "1260:217:5"
											},
											{
												"body": {
													"nativeSrc": "1569:259:5",
													"nodeType": "YulBlock",
													"src": "1569:259:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1615:16:5",
																"nodeType": "YulBlock",
																"src": "1615:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1624:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1624:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1627:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1627:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1617:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1617:6:5"
																			},
																			"nativeSrc": "1617:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1617:12:5"
																		},
																		"nativeSrc": "1617:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1617:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1590:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1590:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1599:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1599:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1586:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1586:3:5"
																		},
																		"nativeSrc": "1586:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1586:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1611:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1611:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1582:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:5"
																},
																"nativeSrc": "1582:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1582:32:5"
															},
															"nativeSrc": "1579:52:5",
															"nodeType": "YulIf",
															"src": "1579:52:5"
														},
														{
															"nativeSrc": "1640:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1640:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1653:1:5",
																"nodeType": "YulLiteral",
																"src": "1653:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1644:5:5",
																	"nodeType": "YulTypedName",
																	"src": "1644:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1663:32:5",
															"nodeType": "YulAssignment",
															"src": "1663:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1685:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1685:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1672:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1672:12:5"
																},
																"nativeSrc": "1672:23:5",
																"nodeType": "YulFunctionCall",
																"src": "1672:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1663:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1663:5:5"
																}
															]
														},
														{
															"nativeSrc": "1704:15:5",
															"nodeType": "YulAssignment",
															"src": "1704:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "1714:5:5",
																"nodeType": "YulIdentifier",
																"src": "1714:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1704:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:5"
																}
															]
														},
														{
															"nativeSrc": "1728:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1728:16:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1743:1:5",
																"nodeType": "YulLiteral",
																"src": "1743:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1732:7:5",
																	"nodeType": "YulTypedName",
																	"src": "1732:7:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1753:43:5",
															"nodeType": "YulAssignment",
															"src": "1753:43:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1781:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1781:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1792:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1792:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1777:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1777:3:5"
																		},
																		"nativeSrc": "1777:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1777:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1764:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1764:12:5"
																},
																"nativeSrc": "1764:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1764:32:5"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1753:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1753:7:5"
																}
															]
														},
														{
															"nativeSrc": "1805:17:5",
															"nodeType": "YulAssignment",
															"src": "1805:17:5",
															"value": {
																"name": "value_1",
																"nativeSrc": "1815:7:5",
																"nodeType": "YulIdentifier",
																"src": "1815:7:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1805:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1805:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1482:346:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1527:9:5",
														"nodeType": "YulTypedName",
														"src": "1527:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1538:7:5",
														"nodeType": "YulTypedName",
														"src": "1538:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1550:6:5",
														"nodeType": "YulTypedName",
														"src": "1550:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1558:6:5",
														"nodeType": "YulTypedName",
														"src": "1558:6:5",
														"type": ""
													}
												],
												"src": "1482:346:5"
											},
											{
												"body": {
													"nativeSrc": "1934:102:5",
													"nodeType": "YulBlock",
													"src": "1934:102:5",
													"statements": [
														{
															"nativeSrc": "1944:26:5",
															"nodeType": "YulAssignment",
															"src": "1944:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1956:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1956:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1967:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1967:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1952:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1952:3:5"
																},
																"nativeSrc": "1952:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1952:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1944:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1944:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1986:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1986:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2001:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2001:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2017:3:5",
																								"nodeType": "YulLiteral",
																								"src": "2017:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2022:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2022:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2013:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2013:3:5"
																						},
																						"nativeSrc": "2013:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2013:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2026:1:5",
																						"nodeType": "YulLiteral",
																						"src": "2026:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2009:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2009:3:5"
																				},
																				"nativeSrc": "2009:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2009:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1997:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1997:3:5"
																		},
																		"nativeSrc": "1997:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1997:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1979:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1979:6:5"
																},
																"nativeSrc": "1979:51:5",
																"nodeType": "YulFunctionCall",
																"src": "1979:51:5"
															},
															"nativeSrc": "1979:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "1979:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1833:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1903:9:5",
														"nodeType": "YulTypedName",
														"src": "1903:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1914:6:5",
														"nodeType": "YulTypedName",
														"src": "1914:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1925:4:5",
														"nodeType": "YulTypedName",
														"src": "1925:4:5",
														"type": ""
													}
												],
												"src": "1833:203:5"
											},
											{
												"body": {
													"nativeSrc": "2111:116:5",
													"nodeType": "YulBlock",
													"src": "2111:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2157:16:5",
																"nodeType": "YulBlock",
																"src": "2157:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2166:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2166:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2169:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2169:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2159:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2159:6:5"
																			},
																			"nativeSrc": "2159:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2159:12:5"
																		},
																		"nativeSrc": "2159:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2159:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2132:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2132:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2141:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2141:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2128:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2128:3:5"
																		},
																		"nativeSrc": "2128:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2128:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2153:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2153:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2124:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2124:3:5"
																},
																"nativeSrc": "2124:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2124:32:5"
															},
															"nativeSrc": "2121:52:5",
															"nodeType": "YulIf",
															"src": "2121:52:5"
														},
														{
															"nativeSrc": "2182:39:5",
															"nodeType": "YulAssignment",
															"src": "2182:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2211:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2211:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2192:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2192:18:5"
																},
																"nativeSrc": "2192:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2192:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2182:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2182:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2041:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2077:9:5",
														"nodeType": "YulTypedName",
														"src": "2077:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2088:7:5",
														"nodeType": "YulTypedName",
														"src": "2088:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2100:6:5",
														"nodeType": "YulTypedName",
														"src": "2100:6:5",
														"type": ""
													}
												],
												"src": "2041:186:5"
											},
											{
												"body": {
													"nativeSrc": "2403:188:5",
													"nodeType": "YulBlock",
													"src": "2403:188:5",
													"statements": [
														{
															"nativeSrc": "2413:26:5",
															"nodeType": "YulAssignment",
															"src": "2413:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2425:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2425:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2436:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2436:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2421:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2421:3:5"
																},
																"nativeSrc": "2421:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2421:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2413:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2413:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2455:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2455:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2466:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2466:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2448:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2448:6:5"
																},
																"nativeSrc": "2448:25:5",
																"nodeType": "YulFunctionCall",
																"src": "2448:25:5"
															},
															"nativeSrc": "2448:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "2448:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2493:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2493:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2504:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2504:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2489:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2489:3:5"
																		},
																		"nativeSrc": "2489:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2489:18:5"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2509:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2509:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2482:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2482:6:5"
																},
																"nativeSrc": "2482:34:5",
																"nodeType": "YulFunctionCall",
																"src": "2482:34:5"
															},
															"nativeSrc": "2482:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "2482:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2536:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2536:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2547:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2547:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2532:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:5"
																		},
																		"nativeSrc": "2532:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "2556:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2556:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2572:3:5",
																								"nodeType": "YulLiteral",
																								"src": "2572:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2577:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2577:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2568:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2568:3:5"
																						},
																						"nativeSrc": "2568:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2568:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2581:1:5",
																						"nodeType": "YulLiteral",
																						"src": "2581:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2564:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2564:3:5"
																				},
																				"nativeSrc": "2564:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2564:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2552:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2552:3:5"
																		},
																		"nativeSrc": "2552:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2552:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2525:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2525:6:5"
																},
																"nativeSrc": "2525:60:5",
																"nodeType": "YulFunctionCall",
																"src": "2525:60:5"
															},
															"nativeSrc": "2525:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "2525:60:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_contract$_IERC20_$290__to_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "2232:359:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2356:9:5",
														"nodeType": "YulTypedName",
														"src": "2356:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2367:6:5",
														"nodeType": "YulTypedName",
														"src": "2367:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2375:6:5",
														"nodeType": "YulTypedName",
														"src": "2375:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2383:6:5",
														"nodeType": "YulTypedName",
														"src": "2383:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2394:4:5",
														"nodeType": "YulTypedName",
														"src": "2394:4:5",
														"type": ""
													}
												],
												"src": "2232:359:5"
											},
											{
												"body": {
													"nativeSrc": "2770:169:5",
													"nodeType": "YulBlock",
													"src": "2770:169:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2787:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2787:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2798:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2798:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2780:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2780:6:5"
																},
																"nativeSrc": "2780:21:5",
																"nodeType": "YulFunctionCall",
																"src": "2780:21:5"
															},
															"nativeSrc": "2780:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "2780:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2821:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2832:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2832:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2817:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2817:3:5"
																		},
																		"nativeSrc": "2817:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2817:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2837:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2837:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2810:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2810:6:5"
																},
																"nativeSrc": "2810:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2810:30:5"
															},
															"nativeSrc": "2810:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "2810:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2860:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2860:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2871:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2871:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2856:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2856:3:5"
																		},
																		"nativeSrc": "2856:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2856:18:5"
																	},
																	{
																		"hexValue": "506f6f6c20646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "2876:21:5",
																		"nodeType": "YulLiteral",
																		"src": "2876:21:5",
																		"type": "",
																		"value": "Pool does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2849:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:5"
																},
																"nativeSrc": "2849:49:5",
																"nodeType": "YulFunctionCall",
																"src": "2849:49:5"
															},
															"nativeSrc": "2849:49:5",
															"nodeType": "YulExpressionStatement",
															"src": "2849:49:5"
														},
														{
															"nativeSrc": "2907:26:5",
															"nodeType": "YulAssignment",
															"src": "2907:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2919:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2919:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2930:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2930:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2915:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2915:3:5"
																},
																"nativeSrc": "2915:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2915:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2907:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2907:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2596:343:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2747:9:5",
														"nodeType": "YulTypedName",
														"src": "2747:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2761:4:5",
														"nodeType": "YulTypedName",
														"src": "2761:4:5",
														"type": ""
													}
												],
												"src": "2596:343:5"
											},
											{
												"body": {
													"nativeSrc": "3118:170:5",
													"nodeType": "YulBlock",
													"src": "3118:170:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3135:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3135:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3146:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3146:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3128:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3128:6:5"
																},
																"nativeSrc": "3128:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3128:21:5"
															},
															"nativeSrc": "3128:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3128:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3169:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3169:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3180:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3180:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3165:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3165:3:5"
																		},
																		"nativeSrc": "3165:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3165:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3185:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3185:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3158:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3158:6:5"
																},
																"nativeSrc": "3158:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3158:30:5"
															},
															"nativeSrc": "3158:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3158:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3208:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3208:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3219:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3219:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3204:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3204:3:5"
																		},
																		"nativeSrc": "3204:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3204:18:5"
																	},
																	{
																		"hexValue": "4e6f207265776172647320617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "3224:22:5",
																		"nodeType": "YulLiteral",
																		"src": "3224:22:5",
																		"type": "",
																		"value": "No rewards available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3197:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3197:6:5"
																},
																"nativeSrc": "3197:50:5",
																"nodeType": "YulFunctionCall",
																"src": "3197:50:5"
															},
															"nativeSrc": "3197:50:5",
															"nodeType": "YulExpressionStatement",
															"src": "3197:50:5"
														},
														{
															"nativeSrc": "3256:26:5",
															"nodeType": "YulAssignment",
															"src": "3256:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3268:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3268:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3279:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3279:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3264:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3264:3:5"
																},
																"nativeSrc": "3264:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3264:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3256:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3256:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2944:344:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3095:9:5",
														"nodeType": "YulTypedName",
														"src": "3095:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3109:4:5",
														"nodeType": "YulTypedName",
														"src": "3109:4:5",
														"type": ""
													}
												],
												"src": "2944:344:5"
											},
											{
												"body": {
													"nativeSrc": "3422:145:5",
													"nodeType": "YulBlock",
													"src": "3422:145:5",
													"statements": [
														{
															"nativeSrc": "3432:26:5",
															"nodeType": "YulAssignment",
															"src": "3432:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3444:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3444:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3455:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3455:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3440:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3440:3:5"
																},
																"nativeSrc": "3440:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3440:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3432:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3432:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3474:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3474:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3489:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3489:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3505:3:5",
																								"nodeType": "YulLiteral",
																								"src": "3505:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3510:1:5",
																								"nodeType": "YulLiteral",
																								"src": "3510:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3501:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "3501:3:5"
																						},
																						"nativeSrc": "3501:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3501:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3514:1:5",
																						"nodeType": "YulLiteral",
																						"src": "3514:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3497:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3497:3:5"
																				},
																				"nativeSrc": "3497:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3497:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3485:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3485:3:5"
																		},
																		"nativeSrc": "3485:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3485:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3467:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3467:6:5"
																},
																"nativeSrc": "3467:51:5",
																"nodeType": "YulFunctionCall",
																"src": "3467:51:5"
															},
															"nativeSrc": "3467:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "3467:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3538:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3538:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3549:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3549:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3534:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3534:3:5"
																		},
																		"nativeSrc": "3534:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3534:18:5"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3554:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3554:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3527:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3527:6:5"
																},
																"nativeSrc": "3527:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3527:34:5"
															},
															"nativeSrc": "3527:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3527:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3293:274:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3383:9:5",
														"nodeType": "YulTypedName",
														"src": "3383:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3394:6:5",
														"nodeType": "YulTypedName",
														"src": "3394:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3402:6:5",
														"nodeType": "YulTypedName",
														"src": "3402:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3413:4:5",
														"nodeType": "YulTypedName",
														"src": "3413:4:5",
														"type": ""
													}
												],
												"src": "3293:274:5"
											},
											{
												"body": {
													"nativeSrc": "3650:199:5",
													"nodeType": "YulBlock",
													"src": "3650:199:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3696:16:5",
																"nodeType": "YulBlock",
																"src": "3696:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3705:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3705:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3708:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3708:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3698:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3698:6:5"
																			},
																			"nativeSrc": "3698:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3698:12:5"
																		},
																		"nativeSrc": "3698:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3698:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3671:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3671:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3680:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3680:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3667:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3667:3:5"
																		},
																		"nativeSrc": "3667:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3667:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3692:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3692:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3663:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3663:3:5"
																},
																"nativeSrc": "3663:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3663:32:5"
															},
															"nativeSrc": "3660:52:5",
															"nodeType": "YulIf",
															"src": "3660:52:5"
														},
														{
															"nativeSrc": "3721:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3721:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3740:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3740:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3734:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3734:5:5"
																},
																"nativeSrc": "3734:16:5",
																"nodeType": "YulFunctionCall",
																"src": "3734:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3725:5:5",
																	"nodeType": "YulTypedName",
																	"src": "3725:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3803:16:5",
																"nodeType": "YulBlock",
																"src": "3803:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3812:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3812:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3815:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3815:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3805:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3805:6:5"
																			},
																			"nativeSrc": "3805:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3805:12:5"
																		},
																		"nativeSrc": "3805:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3805:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3772:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3772:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3793:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "3793:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3786:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3786:6:5"
																						},
																						"nativeSrc": "3786:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3786:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3779:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3779:6:5"
																				},
																				"nativeSrc": "3779:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3779:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3769:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "3769:2:5"
																		},
																		"nativeSrc": "3769:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3769:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3762:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3762:6:5"
																},
																"nativeSrc": "3762:40:5",
																"nodeType": "YulFunctionCall",
																"src": "3762:40:5"
															},
															"nativeSrc": "3759:60:5",
															"nodeType": "YulIf",
															"src": "3759:60:5"
														},
														{
															"nativeSrc": "3828:15:5",
															"nodeType": "YulAssignment",
															"src": "3828:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "3838:5:5",
																"nodeType": "YulIdentifier",
																"src": "3838:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3828:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3828:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3572:277:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3616:9:5",
														"nodeType": "YulTypedName",
														"src": "3616:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3627:7:5",
														"nodeType": "YulTypedName",
														"src": "3627:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3639:6:5",
														"nodeType": "YulTypedName",
														"src": "3639:6:5",
														"type": ""
													}
												],
												"src": "3572:277:5"
											},
											{
												"body": {
													"nativeSrc": "4028:172:5",
													"nodeType": "YulBlock",
													"src": "4028:172:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4045:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4045:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4056:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4056:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4038:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4038:6:5"
																},
																"nativeSrc": "4038:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4038:21:5"
															},
															"nativeSrc": "4038:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4038:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4079:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4079:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4090:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4090:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4075:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4075:3:5"
																		},
																		"nativeSrc": "4075:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4075:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4095:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4095:2:5",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4068:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4068:6:5"
																},
																"nativeSrc": "4068:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4068:30:5"
															},
															"nativeSrc": "4068:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4068:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4118:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4118:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4129:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4129:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4114:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4114:3:5"
																		},
																		"nativeSrc": "4114:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4114:18:5"
																	},
																	{
																		"hexValue": "526577617264207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "4134:24:5",
																		"nodeType": "YulLiteral",
																		"src": "4134:24:5",
																		"type": "",
																		"value": "Reward transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4107:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4107:6:5"
																},
																"nativeSrc": "4107:52:5",
																"nodeType": "YulFunctionCall",
																"src": "4107:52:5"
															},
															"nativeSrc": "4107:52:5",
															"nodeType": "YulExpressionStatement",
															"src": "4107:52:5"
														},
														{
															"nativeSrc": "4168:26:5",
															"nodeType": "YulAssignment",
															"src": "4168:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4180:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4180:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4191:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4191:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4176:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4176:3:5"
																},
																"nativeSrc": "4176:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4176:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4168:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4168:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3854:346:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4005:9:5",
														"nodeType": "YulTypedName",
														"src": "4005:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4019:4:5",
														"nodeType": "YulTypedName",
														"src": "4019:4:5",
														"type": ""
													}
												],
												"src": "3854:346:5"
											},
											{
												"body": {
													"nativeSrc": "4334:119:5",
													"nodeType": "YulBlock",
													"src": "4334:119:5",
													"statements": [
														{
															"nativeSrc": "4344:26:5",
															"nodeType": "YulAssignment",
															"src": "4344:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4356:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4356:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4367:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4367:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4352:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4352:3:5"
																},
																"nativeSrc": "4352:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4352:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4344:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4344:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4386:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4386:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4397:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4397:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4379:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4379:6:5"
																},
																"nativeSrc": "4379:25:5",
																"nodeType": "YulFunctionCall",
																"src": "4379:25:5"
															},
															"nativeSrc": "4379:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "4379:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4424:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4424:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4435:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4435:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4420:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4420:3:5"
																		},
																		"nativeSrc": "4420:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:18:5"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4440:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4440:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4413:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4413:6:5"
																},
																"nativeSrc": "4413:34:5",
																"nodeType": "YulFunctionCall",
																"src": "4413:34:5"
															},
															"nativeSrc": "4413:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "4413:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4205:248:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4295:9:5",
														"nodeType": "YulTypedName",
														"src": "4295:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4306:6:5",
														"nodeType": "YulTypedName",
														"src": "4306:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4314:6:5",
														"nodeType": "YulTypedName",
														"src": "4314:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4325:4:5",
														"nodeType": "YulTypedName",
														"src": "4325:4:5",
														"type": ""
													}
												],
												"src": "4205:248:5"
											},
											{
												"body": {
													"nativeSrc": "4632:165:5",
													"nodeType": "YulBlock",
													"src": "4632:165:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4649:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4649:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4660:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4660:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4642:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4642:6:5"
																},
																"nativeSrc": "4642:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4642:21:5"
															},
															"nativeSrc": "4642:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4642:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4683:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4683:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4694:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4694:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4679:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4679:3:5"
																		},
																		"nativeSrc": "4679:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4679:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4699:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4699:2:5",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4672:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4672:6:5"
																},
																"nativeSrc": "4672:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4672:30:5"
															},
															"nativeSrc": "4672:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4672:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4722:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4722:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4733:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4733:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4718:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4718:3:5"
																		},
																		"nativeSrc": "4718:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4718:18:5"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "4738:17:5",
																		"nodeType": "YulLiteral",
																		"src": "4738:17:5",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4711:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4711:6:5"
																},
																"nativeSrc": "4711:45:5",
																"nodeType": "YulFunctionCall",
																"src": "4711:45:5"
															},
															"nativeSrc": "4711:45:5",
															"nodeType": "YulExpressionStatement",
															"src": "4711:45:5"
														},
														{
															"nativeSrc": "4765:26:5",
															"nodeType": "YulAssignment",
															"src": "4765:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4777:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4777:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4788:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4773:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4773:3:5"
																},
																"nativeSrc": "4773:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4773:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4765:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4765:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4458:339:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4609:9:5",
														"nodeType": "YulTypedName",
														"src": "4609:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4623:4:5",
														"nodeType": "YulTypedName",
														"src": "4623:4:5",
														"type": ""
													}
												],
												"src": "4458:339:5"
											},
											{
												"body": {
													"nativeSrc": "4931:145:5",
													"nodeType": "YulBlock",
													"src": "4931:145:5",
													"statements": [
														{
															"nativeSrc": "4941:26:5",
															"nodeType": "YulAssignment",
															"src": "4941:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4953:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4953:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4964:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4964:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4949:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4949:3:5"
																},
																"nativeSrc": "4949:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4949:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4941:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4941:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4983:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4983:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4994:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4994:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4976:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4976:6:5"
																},
																"nativeSrc": "4976:25:5",
																"nodeType": "YulFunctionCall",
																"src": "4976:25:5"
															},
															"nativeSrc": "4976:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "4976:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5021:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5021:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5032:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5032:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5017:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5017:3:5"
																		},
																		"nativeSrc": "5017:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5017:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5041:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5041:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5057:3:5",
																								"nodeType": "YulLiteral",
																								"src": "5057:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5062:1:5",
																								"nodeType": "YulLiteral",
																								"src": "5062:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5053:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "5053:3:5"
																						},
																						"nativeSrc": "5053:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "5053:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5066:1:5",
																						"nodeType": "YulLiteral",
																						"src": "5066:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5049:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5049:3:5"
																				},
																				"nativeSrc": "5049:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5049:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5037:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5037:3:5"
																		},
																		"nativeSrc": "5037:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5037:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5010:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5010:6:5"
																},
																"nativeSrc": "5010:60:5",
																"nodeType": "YulFunctionCall",
																"src": "5010:60:5"
															},
															"nativeSrc": "5010:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "5010:60:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "4802:274:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4892:9:5",
														"nodeType": "YulTypedName",
														"src": "4892:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4903:6:5",
														"nodeType": "YulTypedName",
														"src": "4903:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4911:6:5",
														"nodeType": "YulTypedName",
														"src": "4911:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4922:4:5",
														"nodeType": "YulTypedName",
														"src": "4922:4:5",
														"type": ""
													}
												],
												"src": "4802:274:5"
											},
											{
												"body": {
													"nativeSrc": "5113:95:5",
													"nodeType": "YulBlock",
													"src": "5113:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5130:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5130:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5137:3:5",
																				"nodeType": "YulLiteral",
																				"src": "5137:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5142:10:5",
																				"nodeType": "YulLiteral",
																				"src": "5142:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5133:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5133:3:5"
																		},
																		"nativeSrc": "5133:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5133:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5123:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5123:6:5"
																},
																"nativeSrc": "5123:31:5",
																"nodeType": "YulFunctionCall",
																"src": "5123:31:5"
															},
															"nativeSrc": "5123:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "5123:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5170:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5170:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5173:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5173:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5163:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5163:6:5"
																},
																"nativeSrc": "5163:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5163:15:5"
															},
															"nativeSrc": "5163:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5163:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5197:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5197:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5187:6:5"
																},
																"nativeSrc": "5187:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5187:15:5"
															},
															"nativeSrc": "5187:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5187:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5081:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "5081:127:5"
											},
											{
												"body": {
													"nativeSrc": "5260:88:5",
													"nodeType": "YulBlock",
													"src": "5260:88:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5291:22:5",
																"nodeType": "YulBlock",
																"src": "5291:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5293:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "5293:16:5"
																			},
																			"nativeSrc": "5293:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5293:18:5"
																		},
																		"nativeSrc": "5293:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5293:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5276:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5276:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5287:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5287:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5283:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5283:3:5"
																		},
																		"nativeSrc": "5283:6:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5283:6:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5273:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5273:2:5"
																},
																"nativeSrc": "5273:17:5",
																"nodeType": "YulFunctionCall",
																"src": "5273:17:5"
															},
															"nativeSrc": "5270:43:5",
															"nodeType": "YulIf",
															"src": "5270:43:5"
														},
														{
															"nativeSrc": "5322:20:5",
															"nodeType": "YulAssignment",
															"src": "5322:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5333:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5333:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5340:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5340:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5329:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5329:3:5"
																},
																"nativeSrc": "5329:13:5",
																"nodeType": "YulFunctionCall",
																"src": "5329:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5322:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5322:3:5"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "5213:135:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5242:5:5",
														"nodeType": "YulTypedName",
														"src": "5242:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5252:3:5",
														"nodeType": "YulTypedName",
														"src": "5252:3:5",
														"type": ""
													}
												],
												"src": "5213:135:5"
											},
											{
												"body": {
													"nativeSrc": "5527:168:5",
													"nodeType": "YulBlock",
													"src": "5527:168:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5544:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5544:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5555:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5555:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5537:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:5"
																},
																"nativeSrc": "5537:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5537:21:5"
															},
															"nativeSrc": "5537:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5537:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5578:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5578:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5589:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5589:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5574:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5574:3:5"
																		},
																		"nativeSrc": "5574:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5574:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5594:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5594:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5567:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5567:6:5"
																},
																"nativeSrc": "5567:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5567:30:5"
															},
															"nativeSrc": "5567:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5567:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5617:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5617:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5628:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5628:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5613:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5613:3:5"
																		},
																		"nativeSrc": "5613:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5613:18:5"
																	},
																	{
																		"hexValue": "4665652077616c6c6574206e6f7420736574",
																		"kind": "string",
																		"nativeSrc": "5633:20:5",
																		"nodeType": "YulLiteral",
																		"src": "5633:20:5",
																		"type": "",
																		"value": "Fee wallet not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5606:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5606:6:5"
																},
																"nativeSrc": "5606:48:5",
																"nodeType": "YulFunctionCall",
																"src": "5606:48:5"
															},
															"nativeSrc": "5606:48:5",
															"nodeType": "YulExpressionStatement",
															"src": "5606:48:5"
														},
														{
															"nativeSrc": "5663:26:5",
															"nodeType": "YulAssignment",
															"src": "5663:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5675:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5675:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5686:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5686:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5671:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5671:3:5"
																},
																"nativeSrc": "5671:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5671:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5663:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5663:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_450e63d12583b524c4239640e625b08c76818feaa191e82900f37b9aa0c748b0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5353:342:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5504:9:5",
														"nodeType": "YulTypedName",
														"src": "5504:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5518:4:5",
														"nodeType": "YulTypedName",
														"src": "5518:4:5",
														"type": ""
													}
												],
												"src": "5353:342:5"
											},
											{
												"body": {
													"nativeSrc": "5874:182:5",
													"nodeType": "YulBlock",
													"src": "5874:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5891:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5891:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5902:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5902:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5884:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5884:6:5"
																},
																"nativeSrc": "5884:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5884:21:5"
															},
															"nativeSrc": "5884:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5884:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5925:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5925:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5936:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5936:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5921:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5921:3:5"
																		},
																		"nativeSrc": "5921:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5921:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5941:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5941:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5914:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5914:6:5"
																},
																"nativeSrc": "5914:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5914:30:5"
															},
															"nativeSrc": "5914:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5914:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5964:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5964:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5975:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5975:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5960:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5960:3:5"
																		},
																		"nativeSrc": "5960:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5960:18:5"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "5980:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5980:34:5",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5953:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5953:6:5"
																},
																"nativeSrc": "5953:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5953:62:5"
															},
															"nativeSrc": "5953:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5953:62:5"
														},
														{
															"nativeSrc": "6024:26:5",
															"nodeType": "YulAssignment",
															"src": "6024:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6036:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6036:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6047:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6047:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6032:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6032:3:5"
																},
																"nativeSrc": "6032:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6032:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6024:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6024:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5700:356:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5851:9:5",
														"nodeType": "YulTypedName",
														"src": "5851:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5865:4:5",
														"nodeType": "YulTypedName",
														"src": "5865:4:5",
														"type": ""
													}
												],
												"src": "5700:356:5"
											},
											{
												"body": {
													"nativeSrc": "6113:116:5",
													"nodeType": "YulBlock",
													"src": "6113:116:5",
													"statements": [
														{
															"nativeSrc": "6123:20:5",
															"nodeType": "YulAssignment",
															"src": "6123:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6138:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6138:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6141:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6141:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6134:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6134:3:5"
																},
																"nativeSrc": "6134:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6134:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6123:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "6123:7:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6201:22:5",
																"nodeType": "YulBlock",
																"src": "6201:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6203:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6203:16:5"
																			},
																			"nativeSrc": "6203:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6203:18:5"
																		},
																		"nativeSrc": "6203:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6203:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6172:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "6172:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6165:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "6165:6:5"
																				},
																				"nativeSrc": "6165:9:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6165:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6179:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "6179:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6186:7:5",
																								"nodeType": "YulIdentifier",
																								"src": "6186:7:5"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6195:1:5",
																								"nodeType": "YulIdentifier",
																								"src": "6195:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6182:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "6182:3:5"
																						},
																						"nativeSrc": "6182:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6182:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6176:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "6176:2:5"
																				},
																				"nativeSrc": "6176:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6176:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6162:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "6162:2:5"
																		},
																		"nativeSrc": "6162:37:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6162:37:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6155:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:5"
																},
																"nativeSrc": "6155:45:5",
																"nodeType": "YulFunctionCall",
																"src": "6155:45:5"
															},
															"nativeSrc": "6152:71:5",
															"nodeType": "YulIf",
															"src": "6152:71:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6061:168:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6092:1:5",
														"nodeType": "YulTypedName",
														"src": "6092:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6095:1:5",
														"nodeType": "YulTypedName",
														"src": "6095:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6101:7:5",
														"nodeType": "YulTypedName",
														"src": "6101:7:5",
														"type": ""
													}
												],
												"src": "6061:168:5"
											},
											{
												"body": {
													"nativeSrc": "6280:171:5",
													"nodeType": "YulBlock",
													"src": "6280:171:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6311:111:5",
																"nodeType": "YulBlock",
																"src": "6311:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6332:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6332:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6339:3:5",
																							"nodeType": "YulLiteral",
																							"src": "6339:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6344:10:5",
																							"nodeType": "YulLiteral",
																							"src": "6344:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6335:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6335:3:5"
																					},
																					"nativeSrc": "6335:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6335:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6325:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6325:6:5"
																			},
																			"nativeSrc": "6325:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6325:31:5"
																		},
																		"nativeSrc": "6325:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6325:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6376:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6376:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6379:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6379:4:5",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6369:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6369:6:5"
																			},
																			"nativeSrc": "6369:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6369:15:5"
																		},
																		"nativeSrc": "6369:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6369:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6404:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6404:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6407:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6407:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6397:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6397:6:5"
																			},
																			"nativeSrc": "6397:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6397:15:5"
																		},
																		"nativeSrc": "6397:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6397:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6300:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6300:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6293:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6293:6:5"
																},
																"nativeSrc": "6293:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6293:9:5"
															},
															"nativeSrc": "6290:132:5",
															"nodeType": "YulIf",
															"src": "6290:132:5"
														},
														{
															"nativeSrc": "6431:14:5",
															"nodeType": "YulAssignment",
															"src": "6431:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6440:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6440:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6443:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6443:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6436:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6436:3:5"
																},
																"nativeSrc": "6436:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6436:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6431:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6431:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6234:217:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6265:1:5",
														"nodeType": "YulTypedName",
														"src": "6265:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6268:1:5",
														"nodeType": "YulTypedName",
														"src": "6268:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6274:1:5",
														"nodeType": "YulTypedName",
														"src": "6274:1:5",
														"type": ""
													}
												],
												"src": "6234:217:5"
											},
											{
												"body": {
													"nativeSrc": "6505:79:5",
													"nodeType": "YulBlock",
													"src": "6505:79:5",
													"statements": [
														{
															"nativeSrc": "6515:17:5",
															"nodeType": "YulAssignment",
															"src": "6515:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6527:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6527:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6530:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6530:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6523:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6523:3:5"
																},
																"nativeSrc": "6523:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6523:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6515:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6515:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6556:22:5",
																"nodeType": "YulBlock",
																"src": "6556:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6558:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6558:16:5"
																			},
																			"nativeSrc": "6558:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6558:18:5"
																		},
																		"nativeSrc": "6558:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6558:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6547:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6547:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6553:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6553:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6544:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6544:2:5"
																},
																"nativeSrc": "6544:11:5",
																"nodeType": "YulFunctionCall",
																"src": "6544:11:5"
															},
															"nativeSrc": "6541:37:5",
															"nodeType": "YulIf",
															"src": "6541:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6456:128:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6487:1:5",
														"nodeType": "YulTypedName",
														"src": "6487:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6490:1:5",
														"nodeType": "YulTypedName",
														"src": "6490:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6496:4:5",
														"nodeType": "YulTypedName",
														"src": "6496:4:5",
														"type": ""
													}
												],
												"src": "6456:128:5"
											},
											{
												"body": {
													"nativeSrc": "6746:214:5",
													"nodeType": "YulBlock",
													"src": "6746:214:5",
													"statements": [
														{
															"nativeSrc": "6756:26:5",
															"nodeType": "YulAssignment",
															"src": "6756:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6768:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6768:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6779:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6779:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6764:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6764:3:5"
																},
																"nativeSrc": "6764:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6764:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6756:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6756:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6798:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6798:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6813:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6813:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6829:3:5",
																								"nodeType": "YulLiteral",
																								"src": "6829:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6834:1:5",
																								"nodeType": "YulLiteral",
																								"src": "6834:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6825:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "6825:3:5"
																						},
																						"nativeSrc": "6825:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6825:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6838:1:5",
																						"nodeType": "YulLiteral",
																						"src": "6838:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6821:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6821:3:5"
																				},
																				"nativeSrc": "6821:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6821:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6809:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6809:3:5"
																		},
																		"nativeSrc": "6809:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6809:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6791:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6791:6:5"
																},
																"nativeSrc": "6791:51:5",
																"nodeType": "YulFunctionCall",
																"src": "6791:51:5"
															},
															"nativeSrc": "6791:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "6791:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6862:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6862:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6873:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6873:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6858:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6858:3:5"
																		},
																		"nativeSrc": "6858:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6858:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6882:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6882:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6898:3:5",
																								"nodeType": "YulLiteral",
																								"src": "6898:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6903:1:5",
																								"nodeType": "YulLiteral",
																								"src": "6903:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6894:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "6894:3:5"
																						},
																						"nativeSrc": "6894:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6894:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6907:1:5",
																						"nodeType": "YulLiteral",
																						"src": "6907:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6890:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6890:3:5"
																				},
																				"nativeSrc": "6890:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6890:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6878:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6878:3:5"
																		},
																		"nativeSrc": "6878:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6878:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6851:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6851:6:5"
																},
																"nativeSrc": "6851:60:5",
																"nodeType": "YulFunctionCall",
																"src": "6851:60:5"
															},
															"nativeSrc": "6851:60:5",
															"nodeType": "YulExpressionStatement",
															"src": "6851:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6931:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6931:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6942:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6942:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6927:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6927:3:5"
																		},
																		"nativeSrc": "6927:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6927:18:5"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6947:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6947:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6920:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6920:6:5"
																},
																"nativeSrc": "6920:34:5",
																"nodeType": "YulFunctionCall",
																"src": "6920:34:5"
															},
															"nativeSrc": "6920:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "6920:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6589:371:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6699:9:5",
														"nodeType": "YulTypedName",
														"src": "6699:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6710:6:5",
														"nodeType": "YulTypedName",
														"src": "6710:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6718:6:5",
														"nodeType": "YulTypedName",
														"src": "6718:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6726:6:5",
														"nodeType": "YulTypedName",
														"src": "6726:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6737:4:5",
														"nodeType": "YulTypedName",
														"src": "6737:4:5",
														"type": ""
													}
												],
												"src": "6589:371:5"
											},
											{
												"body": {
													"nativeSrc": "7139:165:5",
													"nodeType": "YulBlock",
													"src": "7139:165:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7156:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7156:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7167:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7167:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7149:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7149:6:5"
																},
																"nativeSrc": "7149:21:5",
																"nodeType": "YulFunctionCall",
																"src": "7149:21:5"
															},
															"nativeSrc": "7149:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "7149:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7190:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7190:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7201:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7201:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7186:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7186:3:5"
																		},
																		"nativeSrc": "7186:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7186:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7206:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7206:2:5",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7179:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7179:6:5"
																},
																"nativeSrc": "7179:30:5",
																"nodeType": "YulFunctionCall",
																"src": "7179:30:5"
															},
															"nativeSrc": "7179:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "7179:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7229:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7229:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7240:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7240:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7225:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7225:3:5"
																		},
																		"nativeSrc": "7225:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7225:18:5"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "7245:17:5",
																		"nodeType": "YulLiteral",
																		"src": "7245:17:5",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7218:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7218:6:5"
																},
																"nativeSrc": "7218:45:5",
																"nodeType": "YulFunctionCall",
																"src": "7218:45:5"
															},
															"nativeSrc": "7218:45:5",
															"nodeType": "YulExpressionStatement",
															"src": "7218:45:5"
														},
														{
															"nativeSrc": "7272:26:5",
															"nodeType": "YulAssignment",
															"src": "7272:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7284:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7284:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7295:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7295:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7280:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7280:3:5"
																},
																"nativeSrc": "7280:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7280:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7272:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7272:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6965:339:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7116:9:5",
														"nodeType": "YulTypedName",
														"src": "7116:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7130:4:5",
														"nodeType": "YulTypedName",
														"src": "7130:4:5",
														"type": ""
													}
												],
												"src": "6965:339:5"
											},
											{
												"body": {
													"nativeSrc": "7483:169:5",
													"nodeType": "YulBlock",
													"src": "7483:169:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7500:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7500:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7511:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7511:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7493:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7493:6:5"
																},
																"nativeSrc": "7493:21:5",
																"nodeType": "YulFunctionCall",
																"src": "7493:21:5"
															},
															"nativeSrc": "7493:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "7493:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7534:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7534:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7545:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7545:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7530:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7530:3:5"
																		},
																		"nativeSrc": "7530:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7530:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7550:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7550:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7523:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7523:6:5"
																},
																"nativeSrc": "7523:30:5",
																"nodeType": "YulFunctionCall",
																"src": "7523:30:5"
															},
															"nativeSrc": "7523:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "7523:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7573:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7573:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7584:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7584:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7569:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7569:3:5"
																		},
																		"nativeSrc": "7569:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7569:18:5"
																	},
																	{
																		"hexValue": "466565207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "7589:21:5",
																		"nodeType": "YulLiteral",
																		"src": "7589:21:5",
																		"type": "",
																		"value": "Fee transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7562:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7562:6:5"
																},
																"nativeSrc": "7562:49:5",
																"nodeType": "YulFunctionCall",
																"src": "7562:49:5"
															},
															"nativeSrc": "7562:49:5",
															"nodeType": "YulExpressionStatement",
															"src": "7562:49:5"
														},
														{
															"nativeSrc": "7620:26:5",
															"nodeType": "YulAssignment",
															"src": "7620:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7632:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7632:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7643:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7643:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7628:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7628:3:5"
																},
																"nativeSrc": "7628:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7628:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7620:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7620:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7309:343:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7460:9:5",
														"nodeType": "YulTypedName",
														"src": "7460:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7474:4:5",
														"nodeType": "YulTypedName",
														"src": "7474:4:5",
														"type": ""
													}
												],
												"src": "7309:343:5"
											},
											{
												"body": {
													"nativeSrc": "7705:77:5",
													"nodeType": "YulBlock",
													"src": "7705:77:5",
													"statements": [
														{
															"nativeSrc": "7715:16:5",
															"nodeType": "YulAssignment",
															"src": "7715:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7726:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7726:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7729:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7729:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7722:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7722:3:5"
																},
																"nativeSrc": "7722:9:5",
																"nodeType": "YulFunctionCall",
																"src": "7722:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7715:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7715:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7754:22:5",
																"nodeType": "YulBlock",
																"src": "7754:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7756:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "7756:16:5"
																			},
																			"nativeSrc": "7756:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7756:18:5"
																		},
																		"nativeSrc": "7756:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7756:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7746:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7746:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7749:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7749:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7743:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "7743:2:5"
																},
																"nativeSrc": "7743:10:5",
																"nodeType": "YulFunctionCall",
																"src": "7743:10:5"
															},
															"nativeSrc": "7740:36:5",
															"nodeType": "YulIf",
															"src": "7740:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7657:125:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7688:1:5",
														"nodeType": "YulTypedName",
														"src": "7688:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7691:1:5",
														"nodeType": "YulTypedName",
														"src": "7691:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7697:3:5",
														"nodeType": "YulTypedName",
														"src": "7697:3:5",
														"type": ""
													}
												],
												"src": "7657:125:5"
											},
											{
												"body": {
													"nativeSrc": "7961:177:5",
													"nodeType": "YulBlock",
													"src": "7961:177:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7978:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7978:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7989:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7989:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7971:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7971:6:5"
																},
																"nativeSrc": "7971:21:5",
																"nodeType": "YulFunctionCall",
																"src": "7971:21:5"
															},
															"nativeSrc": "7971:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "7971:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8012:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8012:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8023:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8023:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8008:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8008:3:5"
																		},
																		"nativeSrc": "8008:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8008:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8028:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8028:2:5",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8001:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8001:6:5"
																},
																"nativeSrc": "8001:30:5",
																"nodeType": "YulFunctionCall",
																"src": "8001:30:5"
															},
															"nativeSrc": "8001:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "8001:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8051:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8051:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8062:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8062:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8047:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8047:3:5"
																		},
																		"nativeSrc": "8047:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8047:18:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "8067:29:5",
																		"nodeType": "YulLiteral",
																		"src": "8067:29:5",
																		"type": "",
																		"value": "Insufficient staked balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8040:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8040:6:5"
																},
																"nativeSrc": "8040:57:5",
																"nodeType": "YulFunctionCall",
																"src": "8040:57:5"
															},
															"nativeSrc": "8040:57:5",
															"nodeType": "YulExpressionStatement",
															"src": "8040:57:5"
														},
														{
															"nativeSrc": "8106:26:5",
															"nodeType": "YulAssignment",
															"src": "8106:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8118:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8118:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8129:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8129:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8114:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8114:3:5"
																},
																"nativeSrc": "8114:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8114:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8106:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8106:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7787:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7938:9:5",
														"nodeType": "YulTypedName",
														"src": "7938:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7952:4:5",
														"nodeType": "YulTypedName",
														"src": "7952:4:5",
														"type": ""
													}
												],
												"src": "7787:351:5"
											},
											{
												"body": {
													"nativeSrc": "8317:174:5",
													"nodeType": "YulBlock",
													"src": "8317:174:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8334:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8334:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8345:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8345:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8327:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8327:6:5"
																},
																"nativeSrc": "8327:21:5",
																"nodeType": "YulFunctionCall",
																"src": "8327:21:5"
															},
															"nativeSrc": "8327:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "8327:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8368:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8368:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8379:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8379:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8364:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8364:3:5"
																		},
																		"nativeSrc": "8364:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8364:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8384:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8384:2:5",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8357:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8357:6:5"
																},
																"nativeSrc": "8357:30:5",
																"nodeType": "YulFunctionCall",
																"src": "8357:30:5"
															},
															"nativeSrc": "8357:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "8357:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8407:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8407:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8418:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8418:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8403:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8403:3:5"
																		},
																		"nativeSrc": "8403:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8403:18:5"
																	},
																	{
																		"hexValue": "436f6f6c646f776e20706572696f64206e6f74206f766572",
																		"kind": "string",
																		"nativeSrc": "8423:26:5",
																		"nodeType": "YulLiteral",
																		"src": "8423:26:5",
																		"type": "",
																		"value": "Cooldown period not over"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8396:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8396:6:5"
																},
																"nativeSrc": "8396:54:5",
																"nodeType": "YulFunctionCall",
																"src": "8396:54:5"
															},
															"nativeSrc": "8396:54:5",
															"nodeType": "YulExpressionStatement",
															"src": "8396:54:5"
														},
														{
															"nativeSrc": "8459:26:5",
															"nodeType": "YulAssignment",
															"src": "8459:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8471:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8471:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8482:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8482:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8467:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8467:3:5"
																},
																"nativeSrc": "8467:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8467:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8459:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8459:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e3d8bbfcef8ebc89bd4618ff46db01df5dd9a3f910e649e8b56fb682681de4f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8143:348:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8294:9:5",
														"nodeType": "YulTypedName",
														"src": "8294:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8308:4:5",
														"nodeType": "YulTypedName",
														"src": "8308:4:5",
														"type": ""
													}
												],
												"src": "8143:348:5"
											},
											{
												"body": {
													"nativeSrc": "8670:181:5",
													"nodeType": "YulBlock",
													"src": "8670:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8687:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8687:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8698:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8698:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8680:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8680:6:5"
																},
																"nativeSrc": "8680:21:5",
																"nodeType": "YulFunctionCall",
																"src": "8680:21:5"
															},
															"nativeSrc": "8680:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "8680:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8721:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8721:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8732:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8732:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8717:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8717:3:5"
																		},
																		"nativeSrc": "8717:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8717:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8737:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8737:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8710:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8710:6:5"
																},
																"nativeSrc": "8710:30:5",
																"nodeType": "YulFunctionCall",
																"src": "8710:30:5"
															},
															"nativeSrc": "8710:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "8710:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8760:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8760:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8771:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8771:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8756:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8756:3:5"
																		},
																		"nativeSrc": "8756:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8756:18:5"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "8776:33:5",
																		"nodeType": "YulLiteral",
																		"src": "8776:33:5",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8749:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8749:6:5"
																},
																"nativeSrc": "8749:61:5",
																"nodeType": "YulFunctionCall",
																"src": "8749:61:5"
															},
															"nativeSrc": "8749:61:5",
															"nodeType": "YulExpressionStatement",
															"src": "8749:61:5"
														},
														{
															"nativeSrc": "8819:26:5",
															"nodeType": "YulAssignment",
															"src": "8819:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8831:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8831:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8842:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8842:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8827:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8827:3:5"
																},
																"nativeSrc": "8827:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8827:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8819:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8819:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8496:355:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8647:9:5",
														"nodeType": "YulTypedName",
														"src": "8647:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8661:4:5",
														"nodeType": "YulTypedName",
														"src": "8661:4:5",
														"type": ""
													}
												],
												"src": "8496:355:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_contract$_IERC20_$290__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Pool does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"No rewards available\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Reward transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_450e63d12583b524c4239640e625b08c76818feaa191e82900f37b9aa0c748b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Fee wallet not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Fee transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Insufficient staked balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6e3d8bbfcef8ebc89bd4618ff46db01df5dd9a3f910e649e8b56fb682681de4f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cooldown period not over\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101375760003560e01c80638da5cb5b116100b8578063ac4afa381161007c578063ac4afa3814610272578063b684edcf146102ce578063d13d8258146102e1578063f25f4b56146102f4578063f2fde38b14610307578063f525cb681461031a57600080fd5b80638da5cb5b146102205780638eec5d701461023157806390d49b9d146102395780639e2c8a5b1461024c578063a18f07a01461025f57600080fd5b80636bbf758d116100ff5780636bbf758d146101c95780636e99d52f146101d1578063715018a6146101da57806372f702f3146101e25780637b0472f01461020d57600080fd5b80630962ef791461013c5780632f380b351461015157806333ba88821461018c5780633a4ae6691461019f5780634d333a21146101b6575b600080fd5b61014f61014a366004611068565b610323565b005b61016461015f366004611068565b6104d1565b604080519384526001600160a01b039092166020840152908201526060015b60405180910390f35b61014f61019a36600461109d565b610525565b6101a86101f481565b604051908152602001610183565b61014f6101c4366004611068565b61060a565b6101a860c881565b6101a861384081565b61014f6106bd565b6002546101f5906001600160a01b031681565b6040516001600160a01b039091168152602001610183565b61014f61021b3660046110c9565b6106d1565b6000546001600160a01b03166101f5565b6005546101a8565b61014f6102473660046110eb565b6109e6565b61014f61025a3660046110c9565b610a5a565b6101a861026d36600461109d565b610e22565b6102aa610280366004611068565b6004602052600090815260409020805460018201546002909201549091906001600160a01b031683565b6040805193845260208401929092526001600160a01b031690820152606001610183565b6101a86102dc36600461109d565b610eb8565b6101a86102ef36600461109d565b610f07565b6003546101f5906001600160a01b031681565b61014f6103153660046110eb565b610f57565b6101a860055481565b61032b610f92565b60055481106103555760405162461bcd60e51b815260040161034c9061110d565b60405180910390fd5b60008181526004602052604081209061036e8333610e22565b9050600081116103b75760405162461bcd60e51b81526020600482015260146024820152734e6f207265776172647320617661696c61626c6560601b604482015260640161034c565b33600081815260048481016020526040918290204290556002850154915163a9059cbb60e01b815290810192909252602482018390526001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561041f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610443919061113a565b6104885760405162461bcd60e51b815260206004820152601660248201527514995dd85c99081d1c985b9cd9995c8819985a5b195960521b604482015260640161034c565b604080518481526020810183905233917ff01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e2731743910160405180910390a250506104ce60018055565b50565b600080600060055484106104f75760405162461bcd60e51b815260040161034c9061110d565b50505060009081526004602052604090208054600282015460019092015490926001600160a01b0390921691565b61052d610feb565b806001600160a01b0381166105765760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161034c565b6005805460009081526004602090815260408083208781556002810180546001600160a01b0319166001600160a01b038916908117909155600182019490945593548151888152928301939093527fae9596825f83aa972e67ed4a3ac74d2eb98b77ee23453868db5dc3b08a0316ca910160405180910390a2600580549060006105ff83611172565b919050555050505050565b610612610feb565b60055481106106335760405162461bcd60e51b815260040161034c9061110d565b6000818152600460205260409020600181015469152d02c7e14af68000001161065f57601e8155610682565b690a968163f0a57b40000081600101541061067d5760648155610682565b60c881555b805460405190815282907f9c4893e20d6432767854bfaa7ead2c90ad7644e9440c6861a383f63e4fb2803e9060200160405180910390a25050565b6106c5610feb565b6106cf6000611018565b565b6106d9610f92565b6003546001600160a01b03166107265760405162461bcd60e51b8152602060048201526012602482015271119959481dd85b1b195d081b9bdd081cd95d60721b604482015260640161034c565b60055482106107475760405162461bcd60e51b815260040161034c9061110d565b600081116107975760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161034c565b6000828152600460205260408120906127106107b460c88561118b565b6107be91906111a2565b905060006107cc82856111c4565b6002546040516323b872dd60e01b8152336004820152306024820152604481018390529192506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610824573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610848919061113a565b6108865760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161034c565b6002546003546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152604481018590529116906323b872dd906064016020604051808303816000875af11580156108e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610905919061113a565b6109475760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b604482015260640161034c565b336000908152600384016020526040812080548392906109689084906111d7565b925050819055508083600101600082825461098391906111d7565b909155505033600081815260048501602090815260409182902042905581518881529081018490527f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90910160405180910390a25050506109e260018055565b5050565b6109ee610feb565b806001600160a01b038116610a375760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161034c565b50600380546001600160a01b0319166001600160a01b0392909216919091179055565b610a62610f92565b6003546001600160a01b0316610aaf5760405162461bcd60e51b8152602060048201526012602482015271119959481dd85b1b195d081b9bdd081cd95d60721b604482015260640161034c565b6005548210610ad05760405162461bcd60e51b815260040161034c9061110d565b60008111610b205760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161034c565b6000828152600460209081526040808320338452600381019092529091205482811015610b8f5760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e74207374616b65642062616c616e63650000000000604482015260640161034c565b336000908152600483016020526040902054610bae90613840906111d7565b421015610bfd5760405162461bcd60e51b815260206004820152601860248201527f436f6f6c646f776e20706572696f64206e6f74206f7665720000000000000000604482015260640161034c565b6000612710610c0e6101f48661118b565b610c1891906111a2565b90506000610c2682866111c4565b336000908152600386016020526040812080549293508792909190610c4c9084906111c4565b9250508190555084846001016000828254610c6791906111c4565b909155505060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce1919061113a565b610d1f5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161034c565b60025460035460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af1158015610d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d98919061113a565b610dda5760405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b604482015260640161034c565b604080518781526020810183905233917f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e910160405180910390a2505050506109e260018055565b60008281526004602090815260408083206001600160a01b038516845260038101909252822054808303610e5b57600092505050610eb2565b6001600160a01b0384166000908152600483016020526040812054610e8090426111c4565b905063bbf81e0081846000015484610e98919061118b565b610ea2919061118b565b610eac91906111a2565b93505050505b92915050565b60006005548310610edb5760405162461bcd60e51b815260040161034c9061110d565b5060008281526004602081815260408084206001600160a01b0386168552909201905290205492915050565b60006005548310610f2a5760405162461bcd60e51b815260040161034c9061110d565b5060008281526004602090815260408083206001600160a01b038516845260030190915290205492915050565b610f5f610feb565b6001600160a01b038116610f8957604051631e4fbdf760e01b81526000600482015260240161034c565b6104ce81611018565b600260015403610fe45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161034c565b6002600155565b6000546001600160a01b031633146106cf5760405163118cdaa760e01b815233600482015260240161034c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561107a57600080fd5b5035919050565b80356001600160a01b038116811461109857600080fd5b919050565b600080604083850312156110b057600080fd5b823591506110c060208401611081565b90509250929050565b600080604083850312156110dc57600080fd5b50508035926020909101359150565b6000602082840312156110fd57600080fd5b61110682611081565b9392505050565b602080825260139082015272141bdbdb08191bd95cc81b9bdd08195e1a5cdd606a1b604082015260600190565b60006020828403121561114c57600080fd5b8151801515811461110657600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016111845761118461115c565b5060010190565b8082028115828204841417610eb257610eb261115c565b6000826111bf57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610eb257610eb261115c565b80820180821115610eb257610eb261115c56fea26469706673582212205ce8940413ecb077250abe281c0bdbfbd357062f93dabaf13a7ec8acd98fdf1364736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xAC4AFA38 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xAC4AFA38 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xB684EDCF EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xD13D8258 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xF25F4B56 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xF525CB68 EQ PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x8EEC5D70 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x90D49B9D EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x9E2C8A5B EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xA18F07A0 EQ PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6BBF758D GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x6BBF758D EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6E99D52F EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x962EF79 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x2F380B35 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x33BA8882 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x3A4AE669 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x4D333A21 EQ PUSH2 0x1B6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x1068 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x1068 JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x109D JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x183 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1068 JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST PUSH2 0x1A8 PUSH1 0xC8 DUP2 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x3840 DUP2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1F5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x183 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1A8 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x109D JUMP JUMPDEST PUSH2 0xE22 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x183 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x109D JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x109D JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1F5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0xF57 JUMP JUMPDEST PUSH2 0x1A8 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x32B PUSH2 0xF92 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT PUSH2 0x355 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x36E DUP4 CALLER PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F207265776172647320617661696C61626C65 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP5 DUP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x2 DUP6 ADD SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14995DD85C99081D1C985B9CD9995C8819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF01DA32686223933D8A18A391060918C7F11A3648639EDD87AE013E2E2731743 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x4CE PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x5 SLOAD DUP5 LT PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0x110D JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 JUMP JUMPDEST PUSH2 0x52D PUSH2 0xFEB JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP2 SSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP3 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP4 SLOAD DUP2 MLOAD DUP9 DUP2 MSTORE SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0xAE9596825F83AA972E67ED4A3AC74D2EB98B77EE23453868DB5DC3B08A0316CA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x5 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x5FF DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x612 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT PUSH2 0x633 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH10 0x152D02C7E14AF6800000 GT PUSH2 0x65F JUMPI PUSH1 0x1E DUP2 SSTORE PUSH2 0x682 JUMP JUMPDEST PUSH10 0xA968163F0A57B400000 DUP2 PUSH1 0x1 ADD SLOAD LT PUSH2 0x67D JUMPI PUSH1 0x64 DUP2 SSTORE PUSH2 0x682 JUMP JUMPDEST PUSH1 0xC8 DUP2 SSTORE JUMPDEST DUP1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE DUP3 SWAP1 PUSH32 0x9C4893E20D6432767854BFAA7EAD2C90AD7644E9440C6861A383F63E4FB2803E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x6C5 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x6CF PUSH1 0x0 PUSH2 0x1018 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6D9 PUSH2 0xF92 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x726 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x119959481DD85B1B195D081B9BDD081CD95D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 LT PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x2710 PUSH2 0x7B4 PUSH1 0xC8 DUP6 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x11A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7CC DUP3 DUP6 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x824 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x848 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x886 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x905 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0x947 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x968 SWAP1 DUP5 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x983 SWAP2 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE DUP2 MLOAD DUP9 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x9E2 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9EE PUSH2 0xFEB JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA62 PUSH2 0xF92 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x119959481DD85B1B195D081B9BDD081CD95D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 LT PUSH2 0xAD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x3 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xB8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBAE SWAP1 PUSH2 0x3840 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6F6C646F776E20706572696F64206E6F74206F7665720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH2 0xC0E PUSH2 0x1F4 DUP7 PUSH2 0x118B JUMP JUMPDEST PUSH2 0xC18 SWAP2 SWAP1 PUSH2 0x11A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC26 DUP3 DUP7 PUSH2 0x11C4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP8 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xC4C SWAP1 DUP5 SWAP1 PUSH2 0x11C4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 DUP5 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC67 SWAP2 SWAP1 PUSH2 0x11C4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE1 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0xD1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD98 SWAP2 SWAP1 PUSH2 0x113A JUMP JUMPDEST PUSH2 0xDDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0x9E2 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x3 DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD DUP1 DUP4 SUB PUSH2 0xE5B JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xE80 SWAP1 TIMESTAMP PUSH2 0x11C4 JUMP JUMPDEST SWAP1 POP PUSH4 0xBBF81E00 DUP2 DUP5 PUSH1 0x0 ADD SLOAD DUP5 PUSH2 0xE98 SWAP2 SWAP1 PUSH2 0x118B JUMP JUMPDEST PUSH2 0xEA2 SWAP2 SWAP1 PUSH2 0x118B JUMP JUMPDEST PUSH2 0xEAC SWAP2 SWAP1 PUSH2 0x11A2 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD DUP4 LT PUSH2 0xEDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0x110D JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 MSTORE SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD DUP4 LT PUSH2 0xF2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34C SWAP1 PUSH2 0x110D JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF5F PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF89 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34C JUMP JUMPDEST PUSH2 0x4CE DUP2 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xFE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x34C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1098 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x10C0 PUSH1 0x20 DUP5 ADD PUSH2 0x1081 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1106 DUP3 PUSH2 0x1081 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x141BDBDB08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x114C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1184 JUMPI PUSH2 0x1184 PUSH2 0x115C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xEB2 JUMPI PUSH2 0xEB2 PUSH2 0x115C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xEB2 JUMPI PUSH2 0xEB2 PUSH2 0x115C JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xEB2 JUMPI PUSH2 0xEB2 PUSH2 0x115C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TLOAD 0xE8 SWAP5 DIV SGT 0xEC 0xB0 PUSH24 0x250ABE281C0BDBFBD357062F93DABAF13A7EC8ACD98FDF13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "244:6388:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4829:509;;;;;;:::i;:::-;;:::i;:::-;;5803:276;;;;;;:::i;:::-;;:::i;:::-;;;;447:25:5;;;-1:-1:-1;;;;;508:32:5;;;503:2;488:18;;481:60;557:18;;;550:34;435:2;420:18;5803:276:4;;;;;;;;2236:355;;;;;;:::i;:::-;;:::i;670:48::-;;715:3;670:48;;;;;1224:25:5;;;1212:2;1197:18;670:48:4;1078:177:5;5346:449:4;;;;;;:::i;:::-;;:::i;612:45::-;;654:3;612:45;;420:49;;462:7;420:49;;2293:101:0;;;:::i;347:26:4:-;;;;;-1:-1:-1;;;;;347:26:4;;;;;;-1:-1:-1;;;;;1438:32:5;;;1420:51;;1408:2;1393:18;347:26:4;1260:217:5;2599:809:4;;;;;;:::i;:::-;;:::i;1638:85:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;6538:91:4;6612:9;;6538:91;;2101:127;;;;;;:::i;:::-;;:::i;3416:965::-;;;;;;:::i;:::-;;:::i;4389:432::-;;;;;;:::i;:::-;;:::i;1171:37::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1171:37:4;;;;;;;2448:25:5;;;2504:2;2489:18;;2482:34;;;;-1:-1:-1;;;;;2552:32:5;2532:18;;;2525:60;2436:2;2421:18;1171:37:4;2232:359:5;6311:219:4;;;;;;:::i;:::-;;:::i;6087:216::-;;;;;;:::i;:::-;;:::i;521:24::-;;;;;-1:-1:-1;;;;;521:24:4;;;2543:215:0;;;;;;:::i;:::-;;:::i;1248:24:4:-;;;;;;4829:509;2261:21:1;:19;:21::i;:::-;4919:9:4::1;;4909:7;:19;4901:51;;;;-1:-1:-1::0;;;4901:51:4::1;;;;;;;:::i;:::-;;;;;;;;;4965:17;4985:14:::0;;;:5:::1;:14;::::0;;;;;5027:36:::1;4991:7:::0;5052:10:::1;5027:15;:36::i;:::-;5010:53;;5091:1;5082:6;:10;5074:43;;;::::0;-1:-1:-1;;;5074:43:4;;3146:2:5;5074:43:4::1;::::0;::::1;3128:21:5::0;3185:2;3165:18;;;3158:30;-1:-1:-1;;;3204:18:5;;;3197:50;3264:18;;5074:43:4::1;2944:344:5::0;5074:43:4::1;5150:10;5130:31;::::0;;;:19:::1;::::0;;::::1;:31;::::0;;;;;;5164:15:::1;5130:49:::0;;5198:16:::1;::::0;::::1;::::0;:45;;-1:-1:-1;;;5198:45:4;;;;::::1;3467:51:5::0;;;;3534:18;;;3527:34;;;-1:-1:-1;;;;;5198:16:4::1;::::0;:25:::1;::::0;3440:18:5;;5198:45:4::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5190:80;;;::::0;-1:-1:-1;;;5190:80:4;;4056:2:5;5190:80:4::1;::::0;::::1;4038:21:5::0;4095:2;4075:18;;;4068:30;-1:-1:-1;;;4114:18:5;;;4107:52;4176:18;;5190:80:4::1;3854:346:5::0;5190:80:4::1;5288:42;::::0;;4379:25:5;;;4435:2;4420:18;;4413:34;;;5302:10:4::1;::::0;5288:42:::1;::::0;4352:18:5;5288:42:4::1;;;;;;;4890:448;;2303:20:1::0;1716:1;2809:22;;2629:209;2303:20;4829:509:4;:::o;5803:276::-;5864:7;5873;5882;5920:9;;5910:7;:19;5902:51;;;;-1:-1:-1;;;5902:51:4;;;;;;;:::i;:::-;-1:-1:-1;;;5964:17:4;5984:14;;;:5;:14;;;;;6017:8;;6035:16;;;;;6054;;;;6017:8;;-1:-1:-1;;;;;6035:16:4;;;;5803:276::o;2236:355::-;1531:13:0;:11;:13::i;:::-;2321:12:4;-1:-1:-1;;;;;2031:22:4;::::1;2023:50;;;::::0;-1:-1:-1;;;2023:50:4;;4660:2:5;2023:50:4::1;::::0;::::1;4642:21:5::0;4699:2;4679:18;;;4672:30;-1:-1:-1;;;4718:18:5;;;4711:45;4773:18;;2023:50:4::1;4458:339:5::0;2023:50:4::1;2375:9:::2;::::0;;2346:20:::2;2369:16:::0;;;:5:::2;:16;::::0;;;;;;;2396:18;;;2425:19:::2;::::0;::::2;:42:::0;;-1:-1:-1;;;;;;2425:42:4::2;-1:-1:-1::0;;;;;2425:42:4;::::2;::::0;;::::2;::::0;;;-1:-1:-1;2478:19:4;::::2;:23:::0;;;;2531:9;;2519:42;;4976:25:5;;;5017:18;;;5010:60;;;;2519:42:4::2;::::0;4949:18:5;2519:42:4::2;;;;;;;2572:9;:11:::0;;;:9:::2;:11;::::0;::::2;:::i;:::-;;;;;;2335:256;1554:1:0::1;2236:355:4::0;;:::o;5346:449::-;1531:13:0;:11;:13::i;:::-;5430:9:4::1;;5420:7;:19;5412:51;;;;-1:-1:-1::0;;;5412:51:4::1;;;;;;;:::i;:::-;5476:17;5496:14:::0;;;:5:::1;:14;::::0;;;;5535:16:::1;::::0;::::1;::::0;5555:12:::1;-1:-1:-1::0;5531:209:4::1;;5595:2;5584:13:::0;;5531:209:::1;;;5639:11;5619:4;:16;;;:31;5615:125;;5678:3;5667:14:::0;;5615:125:::1;;;5725:3;5714:14:::0;;5615:125:::1;5778:8:::0;;5757:30:::1;::::0;1224:25:5;;;5769:7:4;;5757:30:::1;::::0;1212:2:5;1197:18;5757:30:4::1;;;;;;;5401:394;5346:449:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2599:809:4:-;2261:21:1;:19;:21::i;:::-;1898:9:4::1;::::0;-1:-1:-1;;;;;1898:9:4::1;1890:54;;;::::0;-1:-1:-1;;;1890:54:4;;5555:2:5;1890:54:4::1;::::0;::::1;5537:21:5::0;5594:2;5574:18;;;5567:30;-1:-1:-1;;;5613:18:5;;;5606:48;5671:18;;1890:54:4::1;5353:342:5::0;1890:54:4::1;2712:9:::2;;2702:7;:19;2694:51;;;;-1:-1:-1::0;;;2694:51:4::2;;;;;;;:::i;:::-;2774:1;2764:7;:11;2756:56;;;::::0;-1:-1:-1;;;2756:56:4;;5902:2:5;2756:56:4::2;::::0;::::2;5884:21:5::0;;;5921:18;;;5914:30;5980:34;5960:18;;;5953:62;6032:18;;2756:56:4::2;5700:356:5::0;2756:56:4::2;2825:17;2845:14:::0;;;:5:::2;:14;::::0;;;;;2914:5:::2;2885:25;654:3;2885:7:::0;:25:::2;:::i;:::-;2884:35;;;;:::i;:::-;2870:49:::0;-1:-1:-1;2930:22:4::2;2955:13;2870:49:::0;2955:7;:13:::2;:::i;:::-;2989:12;::::0;:68:::2;::::0;-1:-1:-1;;;2989:68:4;;3015:10:::2;2989:68;::::0;::::2;6791:51:5::0;3035:4:4::2;6858:18:5::0;;;6851:60;6927:18;;;6920:34;;;2930:38:4;;-1:-1:-1;;;;;;2989:12:4::2;::::0;:25:::2;::::0;6764:18:5;;2989:68:4::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2981:96;;;::::0;-1:-1:-1;;;2981:96:4;;7167:2:5;2981:96:4::2;::::0;::::2;7149:21:5::0;7206:2;7186:18;;;7179:30;-1:-1:-1;;;7225:18:5;;;7218:45;7280:18;;2981:96:4::2;6965:339:5::0;2981:96:4::2;3096:12;::::0;3134:9:::2;::::0;3096:53:::2;::::0;-1:-1:-1;;;3096:53:4;;3122:10:::2;3096:53;::::0;::::2;6791:51:5::0;-1:-1:-1;;;;;3134:9:4;;::::2;6858:18:5::0;;;6851:60;6927:18;;;6920:34;;;3096:12:4;::::2;::::0;:25:::2;::::0;6764:18:5;;3096:53:4::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3088:85;;;::::0;-1:-1:-1;;;3088:85:4;;7511:2:5;3088:85:4::2;::::0;::::2;7493:21:5::0;7550:2;7530:18;;;7523:30;-1:-1:-1;;;7569:18:5;;;7562:49;7628:18;;3088:85:4::2;7309:343:5::0;3088:85:4::2;3205:10;3186:30;::::0;;;:18:::2;::::0;::::2;:30;::::0;;;;:48;;3220:14;;3186:30;:48:::2;::::0;3220:14;;3186:48:::2;:::i;:::-;;;;;;;;3265:14;3245:4;:16;;;:34;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3310:10:4::2;3290:31;::::0;;;:19:::2;::::0;::::2;:31;::::0;;;;;;;;3324:15:::2;3290:49:::0;;3357:43;;4379:25:5;;;4420:18;;;4413:34;;;3357:43:4::2;::::0;4352:18:5;3357:43:4::2;;;;;;;2683:725;;;2303:20:1::0;1716:1;2809:22;;2629:209;2303:20;2599:809:4;;:::o;2101:127::-;1531:13:0;:11;:13::i;:::-;2175:10:4;-1:-1:-1;;;;;2031:22:4;::::1;2023:50;;;::::0;-1:-1:-1;;;2023:50:4;;4660:2:5;2023:50:4::1;::::0;::::1;4642:21:5::0;4699:2;4679:18;;;4672:30;-1:-1:-1;;;4718:18:5;;;4711:45;4773:18;;2023:50:4::1;4458:339:5::0;2023:50:4::1;-1:-1:-1::0;2198:9:4::2;:22:::0;;-1:-1:-1;;;;;;2198:22:4::2;-1:-1:-1::0;;;;;2198:22:4;;;::::2;::::0;;;::::2;::::0;;2101:127::o;3416:965::-;2261:21:1;:19;:21::i;:::-;1898:9:4::1;::::0;-1:-1:-1;;;;;1898:9:4::1;1890:54;;;::::0;-1:-1:-1;;;1890:54:4;;5555:2:5;1890:54:4::1;::::0;::::1;5537:21:5::0;5594:2;5574:18;;;5567:30;-1:-1:-1;;;5613:18:5;;;5606:48;5671:18;;1890:54:4::1;5353:342:5::0;1890:54:4::1;3531:9:::2;;3521:7;:19;3513:51;;;;-1:-1:-1::0;;;3513:51:4::2;;;;;;;:::i;:::-;3593:1;3583:7;:11;3575:56;;;::::0;-1:-1:-1;;;3575:56:4;;5902:2:5;3575:56:4::2;::::0;::::2;5884:21:5::0;;;5921:18;;;5914:30;5980:34;5960:18;;;5953:62;6032:18;;3575:56:4::2;5700:356:5::0;3575:56:4::2;3644:17;3664:14:::0;;;:5:::2;:14;::::0;;;;;;;3731:10:::2;3712:30:::0;;:18:::2;::::0;::::2;:30:::0;;;;;;;3763:23;;::::2;;3755:63;;;::::0;-1:-1:-1;;;3755:63:4;;7989:2:5;3755:63:4::2;::::0;::::2;7971:21:5::0;8028:2;8008:18;;;8001:30;8067:29;8047:18;;;8040:57;8114:18;;3755:63:4::2;7787:351:5::0;3755:63:4::2;3876:10;3856:31;::::0;;;:19:::2;::::0;::::2;:31;::::0;;;;;:49:::2;::::0;462:7:::2;::::0;3856:49:::2;:::i;:::-;3837:15;:68;;3829:105;;;::::0;-1:-1:-1;;;3829:105:4;;8345:2:5;3829:105:4::2;::::0;::::2;8327:21:5::0;8384:2;8364:18;;;8357:30;8423:26;8403:18;;;8396:54;8467:18;;3829:105:4::2;8143:348:5::0;3829:105:4::2;3947:11;3994:5;3962:28;715:3;3962:7:::0;:28:::2;:::i;:::-;3961:38;;;;:::i;:::-;3947:52:::0;-1:-1:-1;4010:22:4::2;4035:13;3947:52:::0;4035:7;:13:::2;:::i;:::-;4080:10;4061:30;::::0;;;:18:::2;::::0;::::2;:30;::::0;;;;:41;;4010:38;;-1:-1:-1;4095:7:4;;4061:30;;;:41:::2;::::0;4095:7;;4061:41:::2;:::i;:::-;;;;;;;;4133:7;4113:4;:16;;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4161:12:4::2;::::0;:49:::2;::::0;-1:-1:-1;;;4161:49:4;;4183:10:::2;4161:49;::::0;::::2;3467:51:5::0;3534:18;;;3527:34;;;-1:-1:-1;;;;;4161:12:4;;::::2;::::0;:21:::2;::::0;3440:18:5;;4161:49:4::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4153:77;;;::::0;-1:-1:-1;;;4153:77:4;;7167:2:5;4153:77:4::2;::::0;::::2;7149:21:5::0;7206:2;7186:18;;;7179:30;-1:-1:-1;;;7225:18:5;;;7218:45;7280:18;;4153:77:4::2;6965:339:5::0;4153:77:4::2;4249:12;::::0;4271:9:::2;::::0;4249:37:::2;::::0;-1:-1:-1;;;4249:37:4;;-1:-1:-1;;;;;4271:9:4;;::::2;4249:37;::::0;::::2;3467:51:5::0;3534:18;;;3527:34;;;4249:12:4;::::2;::::0;:21:::2;::::0;3440:18:5;;4249:37:4::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4241:69;;;::::0;-1:-1:-1;;;4241:69:4;;7511:2:5;4241:69:4::2;::::0;::::2;7493:21:5::0;7550:2;7530:18;;;7523:30;-1:-1:-1;;;7569:18:5;;;7562:49;7628:18;;4241:69:4::2;7309:343:5::0;4241:69:4::2;4328:45;::::0;;4379:25:5;;;4435:2;4420:18;;4413:34;;;4337:10:4::2;::::0;4328:45:::2;::::0;4352:18:5;4328:45:4::2;;;;;;;3502:879;;;;2303:20:1::0;1716:1;2809:22;;2629:209;4389:432:4;4467:7;4507:14;;;:5;:14;;;;;;;;-1:-1:-1;;;;;4555:25:4;;;;:18;;;:25;;;;;;4597:17;;;4593:58;;4638:1;4631:8;;;;;;4593:58;-1:-1:-1;;;;;4707:26:4;;4663:23;4707:26;;;:19;;;:26;;;;;;4689:44;;:15;:44;:::i;:::-;4663:70;;4798:14;4778:15;4767:4;:8;;;4752:12;:23;;;;:::i;:::-;:41;;;;:::i;:::-;4751:62;;;;:::i;:::-;4744:69;;;;;4389:432;;;;;:::o;6311:219::-;6397:7;6435:9;;6425:7;:19;6417:51;;;;-1:-1:-1;;;6417:51:4;;;;;;;:::i;:::-;-1:-1:-1;6486:14:4;;;;:5;:14;;;;;;;;-1:-1:-1;;;;;6486:36:4;;;;:29;;;:36;;;;;6311:219;;;;:::o;6087:216::-;6171:7;6209:9;;6199:7;:19;6191:51;;;;-1:-1:-1;;;6191:51:4;;;;;;;:::i;:::-;-1:-1:-1;6260:14:4;;;;:5;:14;;;;;;;;-1:-1:-1;;;;;6260:35:4;;;;:28;;:35;;;;;;6087:216;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1420:51:5::0;1393:18;;2672:31:0::1;1260:217:5::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;2336:287:1:-:0;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:1;;8698:2:5;2460:63:1;;;8680:21:5;8737:2;8717:18;;;8710:30;8776:33;8756:18;;;8749:61;8827:18;;2460:63:1;8496:355:5;2460:63:1;1759:1;2598:7;:18;2336:287::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:3;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:3;1901:40:0;;;1420:51:5;1393:18;;1901:40:0;1260:217:5;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:226:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:5;;14:226;-1:-1:-1;14:226:5:o;595:173::-;663:20;;-1:-1:-1;;;;;712:31:5;;702:42;;692:70;;758:1;755;748:12;692:70;595:173;;;:::o;773:300::-;841:6;849;902:2;890:9;881:7;877:23;873:32;870:52;;;918:1;915;908:12;870:52;963:23;;;-1:-1:-1;1029:38:5;1063:2;1048:18;;1029:38;:::i;:::-;1019:48;;773:300;;;;;:::o;1482:346::-;1550:6;1558;1611:2;1599:9;1590:7;1586:23;1582:32;1579:52;;;1627:1;1624;1617:12;1579:52;-1:-1:-1;;1672:23:5;;;1792:2;1777:18;;;1764:32;;-1:-1:-1;1482:346:5:o;2041:186::-;2100:6;2153:2;2141:9;2132:7;2128:23;2124:32;2121:52;;;2169:1;2166;2159:12;2121:52;2192:29;2211:9;2192:29;:::i;:::-;2182:39;2041:186;-1:-1:-1;;;2041:186:5:o;2596:343::-;2798:2;2780:21;;;2837:2;2817:18;;;2810:30;-1:-1:-1;;;2871:2:5;2856:18;;2849:49;2930:2;2915:18;;2596:343::o;3572:277::-;3639:6;3692:2;3680:9;3671:7;3667:23;3663:32;3660:52;;;3708:1;3705;3698:12;3660:52;3740:9;3734:16;3793:5;3786:13;3779:21;3772:5;3769:32;3759:60;;3815:1;3812;3805:12;5081:127;5142:10;5137:3;5133:20;5130:1;5123:31;5173:4;5170:1;5163:15;5197:4;5194:1;5187:15;5213:135;5252:3;5273:17;;;5270:43;;5293:18;;:::i;:::-;-1:-1:-1;5340:1:5;5329:13;;5213:135::o;6061:168::-;6134:9;;;6165;;6182:15;;;6176:22;;6162:37;6152:71;;6203:18;;:::i;6234:217::-;6274:1;6300;6290:132;;6344:10;6339:3;6335:20;6332:1;6325:31;6379:4;6376:1;6369:15;6407:4;6404:1;6397:15;6290:132;-1:-1:-1;6436:9:5;;6234:217::o;6456:128::-;6523:9;;;6544:11;;;6541:37;;;6558:18;;:::i;7657:125::-;7722:9;;;7743:10;;;7740:36;;;7756:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "928000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"COOLDOWN_PERIOD()": "240",
								"DEPOSIT_FEE_BPS()": "218",
								"WITHDRAWAL_FEE_BPS()": "285",
								"addPool(uint256,address)": "84281",
								"adjustAPY(uint256)": "34609",
								"calculateReward(uint256,address)": "infinite",
								"claimRewards(uint256)": "infinite",
								"feeWallet()": "2425",
								"getPoolCount()": "2337",
								"getPoolInfo(uint256)": "8934",
								"getUserLastStakedTime(uint256,address)": "4832",
								"getUserStakedAmount(uint256,address)": "4854",
								"owner()": "2354",
								"poolCount()": "2427",
								"pools(uint256)": "6771",
								"renounceOwnership()": "infinite",
								"setFeeWallet(address)": "26842",
								"stake(uint256,uint256)": "infinite",
								"stakingToken()": "2426",
								"transferOwnership(address)": "28443",
								"unstake(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 6632,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 244,
									"end": 6632,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 244,
									"end": 6632,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1713,
									"end": 1847,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1713,
									"end": 1847,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1756,
									"end": 1766,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1756,
									"end": 1766,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1779,
									"end": 1791,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1779,
									"end": 1815,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1779,
									"end": 1815,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1779,
									"end": 1815,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1779,
									"end": 1815,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1779,
									"end": 1815,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1779,
									"end": 1815,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1779,
									"end": 1815,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1779,
									"end": 1815,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1779,
									"end": 1815,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1779,
									"end": 1815,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1779,
									"end": 1815,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1779,
									"end": 1815,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1779,
									"end": 1815,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1826,
									"end": 1835,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1826,
									"end": 1839,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 244,
									"end": 6632,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 244,
									"end": 6632,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 309,
									"end": 512,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 309,
									"end": 512,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 244,
									"end": 6632,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 6632,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 244,
									"end": 6632,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 6632,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 6632,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 244,
									"end": 6632,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 6632,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205ce8940413ecb077250abe281c0bdbfbd357062f93dabaf13a7ec8acd98fdf1364736f6c634300081c0033",
									".code": [
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "AC4AFA38"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "AC4AFA38"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "B684EDCF"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "D13D8258"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "F25F4B56"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "F525CB68"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "8EEC5D70"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "90D49B9D"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "9E2C8A5B"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "A18F07A0"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "6BBF758D"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "6BBF758D"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "6E99D52F"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "72F702F3"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "7B0472F0"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "962EF79"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "2F380B35"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "33BA8882"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "3A4AE669"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "4D333A21"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 244,
											"end": 6632,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 5338,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4829,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4829,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4829,
											"end": 5338,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 5338,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4829,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4829,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 5338,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4829,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4829,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 5338,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4829,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 5338,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 5803,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5803,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 472,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 447,
											"end": 472,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 447,
											"end": 472,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 508,
											"end": 540,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 508,
											"end": 540,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 508,
											"end": 540,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 503,
											"end": 505,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 488,
											"end": 506,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 488,
											"end": 506,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 481,
											"end": 541,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 557,
											"end": 575,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 557,
											"end": 575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 557,
											"end": 575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 550,
											"end": 584,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 435,
											"end": 437,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2591,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2236,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2236,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2236,
											"end": 2591,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2591,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2236,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2591,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2236,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2236,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 670,
											"end": 718,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 670,
											"end": 718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 670,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 718,
											"name": "PUSH",
											"source": 4,
											"value": "1F4"
										},
										{
											"begin": 670,
											"end": 718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 670,
											"end": 718,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 670,
											"end": 718,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 670,
											"end": 718,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 718,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1212,
											"end": 1214,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 670,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1078,
											"end": 1255,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5346,
											"end": 5795,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5346,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5346,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 5346,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5346,
											"end": 5795,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5346,
											"end": 5795,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5346,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 5346,
											"end": 5795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5346,
											"end": 5795,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5346,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5346,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5346,
											"end": 5795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 612,
											"end": 657,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 612,
											"end": 657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 612,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 657,
											"name": "PUSH",
											"source": 4,
											"value": "C8"
										},
										{
											"begin": 612,
											"end": 657,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 612,
											"end": 657,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 420,
											"end": 469,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 420,
											"end": 469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 420,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 469,
											"name": "PUSH",
											"source": 4,
											"value": "3840"
										},
										{
											"begin": 420,
											"end": 469,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 420,
											"end": 469,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 347,
											"end": 373,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 347,
											"end": 373,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 347,
											"end": 373,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 347,
											"end": 373,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 347,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 347,
											"end": 373,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 347,
											"end": 373,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 347,
											"end": 373,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 347,
											"end": 373,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 347,
											"end": 373,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 347,
											"end": 373,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 347,
											"end": 373,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 373,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1438,
											"end": 1470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1470,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1470,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1471,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1471,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 347,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1260,
											"end": 1477,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 3408,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2599,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2599,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2599,
											"end": 3408,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2599,
											"end": 3408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 3408,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2599,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2599,
											"end": 3408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6538,
											"end": 6629,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 6538,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6612,
											"end": 6621,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6612,
											"end": 6621,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6538,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6538,
											"end": 6629,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2228,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2101,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2101,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2101,
											"end": 2228,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2228,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2101,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2228,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2101,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2101,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3416,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3416,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3416,
											"end": 4381,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3416,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3416,
											"end": 4381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3416,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3416,
											"end": 4381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4389,
											"end": 4821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4389,
											"end": 4821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1171,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2473,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2473,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2473,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2506,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 2507,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2516,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2516,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2482,
											"end": 2516,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2552,
											"end": 2584,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2525,
											"end": 2585,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2438,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2421,
											"end": 2439,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1171,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2232,
											"end": 2591,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6311,
											"end": 6530,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 6311,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6311,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6311,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6311,
											"end": 6530,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6311,
											"end": 6530,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6311,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 6311,
											"end": 6530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6311,
											"end": 6530,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 6311,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6311,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 6311,
											"end": 6530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6087,
											"end": 6303,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6087,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6087,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6087,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 6087,
											"end": 6303,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6087,
											"end": 6303,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6087,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 6087,
											"end": 6303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6087,
											"end": 6303,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 6087,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6087,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 6087,
											"end": 6303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 521,
											"end": 545,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 545,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 521,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 521,
											"end": 545,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 521,
											"end": 545,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 521,
											"end": 545,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 521,
											"end": 545,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1272,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1248,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1248,
											"end": 1272,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1272,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 5338,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4829,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4919,
											"end": 4928,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 4916,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 4928,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4901,
											"end": 4952,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4901,
											"end": 4952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4965,
											"end": 4982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 4999,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 4999,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 4999,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 4990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 4999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4985,
											"end": 4999,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 4999,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4985,
											"end": 4999,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 4999,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 4999,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4991,
											"end": 4998,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5052,
											"end": 5062,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5042,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5027,
											"end": 5063,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5063,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5027,
											"end": 5063,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5010,
											"end": 5063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5010,
											"end": 5063,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5091,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5082,
											"end": 5088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5082,
											"end": 5092,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5074,
											"end": 5117,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5074,
											"end": 5117,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5074,
											"end": 5117,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5117,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3146,
											"end": 3148,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5074,
											"end": 5117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5074,
											"end": 5117,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5117,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3128,
											"end": 3149,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3185,
											"end": 3187,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3188,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F207265776172647320617661696C61626C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3247,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3264,
											"end": 3282,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3264,
											"end": 3282,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5074,
											"end": 5117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2944,
											"end": 3288,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5074,
											"end": 5117,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5074,
											"end": 5117,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5150,
											"end": 5160,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5130,
											"end": 5161,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5161,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5161,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5130,
											"end": 5149,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5149,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5149,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5130,
											"end": 5161,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5161,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5130,
											"end": 5161,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5161,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5161,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5161,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5179,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5179,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5198,
											"end": 5214,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5214,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5214,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5198,
											"end": 5243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3467,
											"end": 3518,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3518,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3518,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3561,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3561,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5198,
											"end": 5214,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 5198,
											"end": 5223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5243,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5198,
											"end": 5243,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5198,
											"end": 5243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5190,
											"end": 5270,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5270,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5190,
											"end": 5270,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5270,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4056,
											"end": 4058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5190,
											"end": 5270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5190,
											"end": 5270,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5270,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4095,
											"end": 4097,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 4075,
											"end": 4093,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4075,
											"end": 4093,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4075,
											"end": 4093,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4098,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14995DD85C99081D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4114,
											"end": 4132,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4114,
											"end": 4132,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4114,
											"end": 4132,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4107,
											"end": 4159,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4176,
											"end": 4194,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4176,
											"end": 4194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5190,
											"end": 5270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3854,
											"end": 4200,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5190,
											"end": 5270,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5190,
											"end": 5270,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5288,
											"end": 5330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5288,
											"end": 5330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5288,
											"end": 5330,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4404,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4435,
											"end": 4437,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5302,
											"end": 5312,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5312,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5288,
											"end": 5330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "F01DA32686223933D8A18A391060918C7F11A3648639EDD87AE013E2E2731743"
										},
										{
											"begin": 5288,
											"end": 5330,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4352,
											"end": 4370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5288,
											"end": 5330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5288,
											"end": 5330,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5288,
											"end": 5330,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5288,
											"end": 5330,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5288,
											"end": 5330,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5288,
											"end": 5330,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5288,
											"end": 5330,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 4890,
											"end": 5338,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4890,
											"end": 5338,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 5338,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 5338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5803,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5864,
											"end": 5871,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5920,
											"end": 5929,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5920,
											"end": 5929,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5917,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5929,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5902,
											"end": 5953,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5953,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5902,
											"end": 5953,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5902,
											"end": 5953,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5953,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5953,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5902,
											"end": 5953,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5902,
											"end": 5953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5902,
											"end": 5953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5953,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5902,
											"end": 5953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5964,
											"end": 5981,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5984,
											"end": 5998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5984,
											"end": 5998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5984,
											"end": 5998,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5984,
											"end": 5989,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5984,
											"end": 5998,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5984,
											"end": 5998,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5984,
											"end": 5998,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5984,
											"end": 5998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5984,
											"end": 5998,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6017,
											"end": 6025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6017,
											"end": 6025,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6051,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6035,
											"end": 6051,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6051,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6051,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6051,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6054,
											"end": 6070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6054,
											"end": 6070,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6054,
											"end": 6070,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6054,
											"end": 6070,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6017,
											"end": 6025,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6017,
											"end": 6025,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6035,
											"end": 6051,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6051,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6051,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6051,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 6079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2591,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2236,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2333,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2031,
											"end": 2053,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2031,
											"end": 2053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2023,
											"end": 2073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2023,
											"end": 2073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4662,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2023,
											"end": 2073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4701,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4672,
											"end": 4702,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4711,
											"end": 4756,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4791,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4773,
											"end": 4791,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4458,
											"end": 4797,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2375,
											"end": 2384,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2369,
											"end": 2385,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2385,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2396,
											"end": 2414,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2396,
											"end": 2414,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2396,
											"end": 2414,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2444,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2425,
											"end": 2444,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2444,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2467,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2467,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2425,
											"end": 2467,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2425,
											"end": 2467,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2467,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2467,
											"modifierDepth": 2,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2467,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2478,
											"end": 2497,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2497,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2540,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2540,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2561,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 5001,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4976,
											"end": 5001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4976,
											"end": 5001,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5035,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5035,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5017,
											"end": 5035,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2561,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "AE9596825F83AA972E67ED4A3AC74D2EB98B77EE23453868DB5DC3B08A0316CA"
										},
										{
											"begin": 2519,
											"end": 2561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2561,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2519,
											"end": 2561,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2561,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2561,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2561,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2561,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2561,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2572,
											"end": 2583,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2583,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2583,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2572,
											"end": 2583,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2583,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2572,
											"end": 2583,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2583,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2572,
											"end": 2583,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2583,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2583,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2583,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2583,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2583,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2335,
											"end": 2591,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5346,
											"end": 5795,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5346,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5430,
											"end": 5439,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5427,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5439,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5412,
											"end": 5463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5412,
											"end": 5463,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5412,
											"end": 5463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5412,
											"end": 5463,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5412,
											"end": 5463,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5412,
											"end": 5463,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5412,
											"end": 5463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5412,
											"end": 5463,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5412,
											"end": 5463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5412,
											"end": 5463,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5412,
											"end": 5463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5412,
											"end": 5463,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5412,
											"end": 5463,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5412,
											"end": 5463,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5496,
											"end": 5510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5496,
											"end": 5510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5496,
											"end": 5510,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5496,
											"end": 5501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5496,
											"end": 5510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5496,
											"end": 5510,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5496,
											"end": 5510,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5496,
											"end": 5510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5496,
											"end": 5510,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5535,
											"end": 5551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5535,
											"end": 5551,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5535,
											"end": 5551,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5535,
											"end": 5551,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5555,
											"end": 5567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "152D02C7E14AF6800000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 5531,
											"end": 5740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5531,
											"end": 5740,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5595,
											"end": 5597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1E"
										},
										{
											"begin": 5584,
											"end": 5597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5584,
											"end": 5597,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5531,
											"end": 5740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5531,
											"end": 5740,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5531,
											"end": 5740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5531,
											"end": 5740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A968163F0A57B400000"
										},
										{
											"begin": 5619,
											"end": 5623,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5619,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5619,
											"end": 5635,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5619,
											"end": 5635,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5619,
											"end": 5650,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5615,
											"end": 5740,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 5681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5667,
											"end": 5681,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5667,
											"end": 5681,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5615,
											"end": 5740,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5615,
											"end": 5740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "C8"
										},
										{
											"begin": 5714,
											"end": 5728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5714,
											"end": 5728,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5615,
											"end": 5740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5778,
											"end": 5786,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5778,
											"end": 5786,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5757,
											"end": 5787,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5769,
											"end": 5776,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5769,
											"end": 5776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "9C4893E20D6432767854BFAA7EAD2C90AD7644E9440C6861A383F63E4FB2803E"
										},
										{
											"begin": 5757,
											"end": 5787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1214,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5757,
											"end": 5787,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5787,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5787,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5787,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5787,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 5401,
											"end": 5795,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5346,
											"end": 5795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5346,
											"end": 5795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 3408,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2599,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1898,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1898,
											"end": 1907,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1890,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1890,
											"end": 1944,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1890,
											"end": 1944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 1944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5555,
											"end": 5557,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1890,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1890,
											"end": 1944,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 1944,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5537,
											"end": 5558,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5594,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5597,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119959481DD85B1B195D081B9BDD081CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5613,
											"end": 5631,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5613,
											"end": 5631,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5606,
											"end": 5654,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5353,
											"end": 5695,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1890,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2712,
											"end": 2721,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2712,
											"end": 2721,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2709,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2721,
											"modifierDepth": 2,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2694,
											"end": 2745,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2694,
											"end": 2745,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2694,
											"end": 2745,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2694,
											"end": 2745,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2694,
											"end": 2745,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2694,
											"end": 2745,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2694,
											"end": 2745,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2694,
											"end": 2745,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2694,
											"end": 2745,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2694,
											"end": 2745,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2694,
											"end": 2745,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2694,
											"end": 2745,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2694,
											"end": 2745,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2694,
											"end": 2745,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2775,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2771,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 2775,
											"modifierDepth": 2,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2812,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2756,
											"end": 2812,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2756,
											"end": 2812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2756,
											"end": 2812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2812,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5904,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2756,
											"end": 2812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2756,
											"end": 2812,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2812,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5884,
											"end": 5905,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5884,
											"end": 5905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5884,
											"end": 5905,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5921,
											"end": 5939,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5921,
											"end": 5939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5921,
											"end": 5939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5944,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5980,
											"end": 6014,
											"name": "PUSH",
											"source": 5,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 5960,
											"end": 5978,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5960,
											"end": 5978,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5960,
											"end": 5978,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5953,
											"end": 6015,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2812,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5700,
											"end": 6056,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2812,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2756,
											"end": 2812,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2842,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2845,
											"end": 2859,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2845,
											"end": 2859,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2845,
											"end": 2859,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2845,
											"end": 2850,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2845,
											"end": 2859,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2859,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2845,
											"end": 2859,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2859,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2845,
											"end": 2859,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2845,
											"end": 2859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2914,
											"end": 2919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 2885,
											"end": 2910,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 654,
											"end": 657,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "C8"
										},
										{
											"begin": 2885,
											"end": 2892,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2910,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2885,
											"end": 2910,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2910,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2885,
											"end": 2910,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2884,
											"end": 2919,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2884,
											"end": 2919,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2870,
											"end": 2919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2930,
											"end": 2952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2968,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2870,
											"end": 2919,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2962,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2968,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2955,
											"end": 2968,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2968,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2955,
											"end": 2968,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3001,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2989,
											"end": 3057,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2989,
											"end": 3057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3015,
											"end": 3025,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2989,
											"end": 3057,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3039,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6851,
											"end": 6911,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6920,
											"end": 6954,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6920,
											"end": 6954,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6920,
											"end": 6954,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2968,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2930,
											"end": 2968,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2989,
											"end": 3001,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3014,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 2989,
											"end": 3014,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6764,
											"end": 6782,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2989,
											"end": 3057,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2989,
											"end": 3057,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 3077,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2981,
											"end": 3077,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 3077,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2981,
											"end": 3077,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2981,
											"end": 3077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 3077,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7167,
											"end": 7169,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 3077,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2981,
											"end": 3077,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 3077,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7149,
											"end": 7170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7206,
											"end": 7208,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7179,
											"end": 7209,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7225,
											"end": 7243,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7225,
											"end": 7243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7218,
											"end": 7263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7280,
											"end": 7298,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 7280,
											"end": 7298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2981,
											"end": 3077,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6965,
											"end": 7304,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2981,
											"end": 3077,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2981,
											"end": 3077,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3108,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3096,
											"end": 3108,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3134,
											"end": 3143,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3149,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3096,
											"end": 3149,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3132,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3096,
											"end": 3149,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3134,
											"end": 3143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3143,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6851,
											"end": 6911,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6920,
											"end": 6954,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6920,
											"end": 6954,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6920,
											"end": 6954,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3108,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3121,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 3096,
											"end": 3121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6764,
											"end": 6782,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3149,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3096,
											"end": 3149,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3096,
											"end": 3149,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3173,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3088,
											"end": 3173,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3173,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3088,
											"end": 3173,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3173,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7511,
											"end": 7513,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3088,
											"end": 3173,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3173,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7493,
											"end": 7514,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7550,
											"end": 7552,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7523,
											"end": 7553,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119959481D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7569,
											"end": 7587,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7569,
											"end": 7587,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7569,
											"end": 7587,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7562,
											"end": 7611,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7628,
											"end": 7646,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 7628,
											"end": 7646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3173,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 7309,
											"end": 7652,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3173,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3088,
											"end": 3173,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3205,
											"end": 3215,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3216,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3204,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3204,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3216,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3234,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3234,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3234,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3234,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3234,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3186,
											"end": 3234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3234,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3234,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3186,
											"end": 3234,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3234,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3186,
											"end": 3234,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3234,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3234,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3234,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3234,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3234,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3234,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3234,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3265,
											"end": 3279,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3249,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3261,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3245,
											"end": 3261,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3261,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3279,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3279,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3279,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3279,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3245,
											"end": 3279,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3279,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3279,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3245,
											"end": 3279,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3279,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3245,
											"end": 3279,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3279,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3310,
											"end": 3320,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3290,
											"end": 3321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3321,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3309,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3290,
											"end": 3309,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3309,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3290,
											"end": 3321,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3321,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3321,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3290,
											"end": 3321,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3321,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3321,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3321,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3324,
											"end": 3339,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3339,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3339,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3357,
											"end": 3400,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3357,
											"end": 3400,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4404,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4447,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3357,
											"end": 3400,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90"
										},
										{
											"begin": 3357,
											"end": 3400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4352,
											"end": 4370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3357,
											"end": 3400,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3357,
											"end": 3400,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3357,
											"end": 3400,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3357,
											"end": 3400,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3357,
											"end": 3400,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3357,
											"end": 3400,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3357,
											"end": 3400,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2683,
											"end": 3408,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2683,
											"end": 3408,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2683,
											"end": 3408,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 3408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2228,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2101,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2185,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2031,
											"end": 2053,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2031,
											"end": 2053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2023,
											"end": 2073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2023,
											"end": 2073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4660,
											"end": 4662,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2023,
											"end": 2073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4701,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4672,
											"end": 4702,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4736,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4711,
											"end": 4756,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4791,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4773,
											"end": 4791,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4458,
											"end": 4797,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2207,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2220,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2198,
											"end": 2220,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2198,
											"end": 2220,
											"modifierDepth": 2,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 4381,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3416,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1898,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1898,
											"end": 1907,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 1890,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1890,
											"end": 1944,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1890,
											"end": 1944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 1944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5555,
											"end": 5557,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1890,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1890,
											"end": 1944,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 1944,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5537,
											"end": 5558,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5594,
											"end": 5596,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5597,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119959481DD85B1B195D081B9BDD081CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5613,
											"end": 5631,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5613,
											"end": 5631,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5606,
											"end": 5654,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5353,
											"end": 5695,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 1890,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3540,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3531,
											"end": 3540,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3521,
											"end": 3528,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3521,
											"end": 3540,
											"modifierDepth": 2,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3564,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 3513,
											"end": 3564,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3564,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 3564,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3564,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3564,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3564,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3513,
											"end": 3564,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3564,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3513,
											"end": 3564,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3564,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3513,
											"end": 3564,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3564,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 3513,
											"end": 3564,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3593,
											"end": 3594,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3590,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3594,
											"modifierDepth": 2,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3575,
											"end": 3631,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3575,
											"end": 3631,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3575,
											"end": 3631,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3575,
											"end": 3631,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3575,
											"end": 3631,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3575,
											"end": 3631,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5904,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3575,
											"end": 3631,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3575,
											"end": 3631,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3575,
											"end": 3631,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5884,
											"end": 5905,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5884,
											"end": 5905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5884,
											"end": 5905,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5921,
											"end": 5939,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5921,
											"end": 5939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5921,
											"end": 5939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5914,
											"end": 5944,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5980,
											"end": 6014,
											"name": "PUSH",
											"source": 5,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 5960,
											"end": 5978,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5960,
											"end": 5978,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5960,
											"end": 5978,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5953,
											"end": 6015,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3575,
											"end": 3631,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5700,
											"end": 6056,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3575,
											"end": 3631,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3575,
											"end": 3631,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3644,
											"end": 3661,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3678,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3678,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3678,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3669,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3664,
											"end": 3678,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3664,
											"end": 3678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3678,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3678,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3678,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3664,
											"end": 3678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3664,
											"end": 3678,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3731,
											"end": 3741,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3742,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3742,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3730,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3742,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3742,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3742,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3742,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3742,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3742,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3742,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3786,
											"modifierDepth": 2,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3786,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3755,
											"end": 3818,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 3755,
											"end": 3818,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3755,
											"end": 3818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3755,
											"end": 3818,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3755,
											"end": 3818,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3755,
											"end": 3818,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7989,
											"end": 7991,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3755,
											"end": 3818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3755,
											"end": 3818,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3755,
											"end": 3818,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7971,
											"end": 7992,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8028,
											"end": 8030,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8008,
											"end": 8026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8001,
											"end": 8031,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8067,
											"end": 8096,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E74207374616B65642062616C616E63650000000000"
										},
										{
											"begin": 8047,
											"end": 8065,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 8047,
											"end": 8065,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8047,
											"end": 8065,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8040,
											"end": 8097,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8132,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 8114,
											"end": 8132,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3818,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 7787,
											"end": 8138,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3818,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 3755,
											"end": 3818,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3876,
											"end": 3886,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3856,
											"end": 3887,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3856,
											"end": 3887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3856,
											"end": 3887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3856,
											"end": 3887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3856,
											"end": 3875,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3856,
											"end": 3875,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3856,
											"end": 3875,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3856,
											"end": 3887,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3856,
											"end": 3887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3856,
											"end": 3887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3856,
											"end": 3887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3856,
											"end": 3887,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3856,
											"end": 3887,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3856,
											"end": 3905,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 3856,
											"end": 3905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 462,
											"end": 469,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "3840"
										},
										{
											"begin": 462,
											"end": 469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3856,
											"end": 3905,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3856,
											"end": 3905,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3856,
											"end": 3905,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 3856,
											"end": 3905,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 3852,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 3905,
											"modifierDepth": 2,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 3905,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3934,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 3829,
											"end": 3934,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3934,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3934,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3829,
											"end": 3934,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3934,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8347,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3829,
											"end": 3934,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3934,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3934,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8348,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8384,
											"end": 8386,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 8364,
											"end": 8382,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8364,
											"end": 8382,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8364,
											"end": 8382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8357,
											"end": 8387,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8423,
											"end": 8449,
											"name": "PUSH",
											"source": 5,
											"value": "436F6F6C646F776E20706572696F64206E6F74206F7665720000000000000000"
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8396,
											"end": 8450,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 3934,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 8143,
											"end": 8491,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 3934,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 3829,
											"end": 3934,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3947,
											"end": 3958,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 3999,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 3962,
											"end": 3990,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 715,
											"end": 718,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1F4"
										},
										{
											"begin": 3962,
											"end": 3969,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3962,
											"end": 3990,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3962,
											"end": 3990,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3962,
											"end": 3990,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 3962,
											"end": 3990,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3961,
											"end": 3999,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 3961,
											"end": 3999,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3961,
											"end": 3999,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3961,
											"end": 3999,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3961,
											"end": 3999,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3961,
											"end": 3999,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 3961,
											"end": 3999,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3947,
											"end": 3999,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4010,
											"end": 4032,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4035,
											"end": 4048,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 3947,
											"end": 3999,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4035,
											"end": 4042,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4035,
											"end": 4048,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4035,
											"end": 4048,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4035,
											"end": 4048,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 4035,
											"end": 4048,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4080,
											"end": 4090,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4091,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4091,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4091,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4091,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4079,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4061,
											"end": 4079,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4079,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4091,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4061,
											"end": 4091,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4091,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4061,
											"end": 4091,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4091,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4102,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4010,
											"end": 4048,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4010,
											"end": 4048,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4095,
											"end": 4102,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4102,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4091,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4091,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4091,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4102,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 4061,
											"end": 4102,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4102,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4102,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4102,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4061,
											"end": 4102,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4102,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 4061,
											"end": 4102,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4102,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4102,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4102,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4102,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4102,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4102,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4102,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4133,
											"end": 4140,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4117,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4129,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4113,
											"end": 4129,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4129,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4140,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4140,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4140,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4140,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 4113,
											"end": 4140,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4140,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4140,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4113,
											"end": 4140,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4140,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 4113,
											"end": 4140,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4140,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4140,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4161,
											"end": 4173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4161,
											"end": 4210,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4161,
											"end": 4210,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4183,
											"end": 4193,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4210,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3467,
											"end": 3518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3561,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3561,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4173,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4182,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 4161,
											"end": 4182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4161,
											"end": 4210,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 4161,
											"end": 4210,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4230,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 4153,
											"end": 4230,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4230,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4153,
											"end": 4230,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4153,
											"end": 4230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4230,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7167,
											"end": 7169,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4153,
											"end": 4230,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4153,
											"end": 4230,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4230,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7149,
											"end": 7170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7206,
											"end": 7208,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7179,
											"end": 7209,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7225,
											"end": 7243,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7225,
											"end": 7243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7225,
											"end": 7243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7218,
											"end": 7263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7280,
											"end": 7298,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 7280,
											"end": 7298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4230,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6965,
											"end": 7304,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4230,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 4153,
											"end": 4230,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4261,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4249,
											"end": 4261,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4280,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4271,
											"end": 4280,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4286,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4249,
											"end": 4286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4271,
											"end": 4280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4280,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4280,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4249,
											"end": 4286,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3467,
											"end": 3518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3561,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3561,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4249,
											"end": 4261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4261,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 4249,
											"end": 4270,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4249,
											"end": 4286,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 4249,
											"end": 4286,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4310,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 4241,
											"end": 4310,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4310,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4241,
											"end": 4310,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4241,
											"end": 4310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7511,
											"end": 7513,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4241,
											"end": 4310,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4241,
											"end": 4310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4310,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7493,
											"end": 7514,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7550,
											"end": 7552,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7523,
											"end": 7553,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119959481D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7569,
											"end": 7587,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7569,
											"end": 7587,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7569,
											"end": 7587,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7562,
											"end": 7611,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7628,
											"end": 7646,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 7628,
											"end": 7646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4241,
											"end": 4310,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 7309,
											"end": 7652,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4241,
											"end": 4310,
											"modifierDepth": 2,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 4241,
											"end": 4310,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4373,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4373,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4373,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4404,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4435,
											"end": 4437,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4413,
											"end": 4447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4347,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4347,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4373,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E"
										},
										{
											"begin": 4328,
											"end": 4373,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4352,
											"end": 4370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4328,
											"end": 4373,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4373,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4373,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4373,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4373,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4373,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4373,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 4381,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 4381,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 4381,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 4381,
											"modifierDepth": 2,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4474,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4507,
											"end": 4521,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4555,
											"end": 4580,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4555,
											"end": 4580,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4555,
											"end": 4580,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4555,
											"end": 4580,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4555,
											"end": 4580,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4555,
											"end": 4580,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4555,
											"end": 4580,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4555,
											"end": 4580,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4555,
											"end": 4580,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4555,
											"end": 4580,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4614,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4614,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4593,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 4593,
											"end": 4651,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4638,
											"end": 4639,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4639,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4639,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4639,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4639,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 4631,
											"end": 4639,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4593,
											"end": 4651,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 4593,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4707,
											"end": 4733,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4733,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4663,
											"end": 4686,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4733,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4733,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4726,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4707,
											"end": 4726,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4726,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4733,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4733,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4733,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4707,
											"end": 4733,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4733,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4733,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4689,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 4689,
											"end": 4733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4689,
											"end": 4704,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4689,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4689,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4689,
											"end": 4733,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 4689,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4663,
											"end": 4733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4663,
											"end": 4733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "PUSH",
											"source": 4,
											"value": "BBF81E00"
										},
										{
											"begin": 4778,
											"end": 4793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4775,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4767,
											"end": 4775,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4775,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4752,
											"end": 4764,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4752,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 4752,
											"end": 4775,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4752,
											"end": 4775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4752,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 4752,
											"end": 4775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4752,
											"end": 4775,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 4752,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4752,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 4752,
											"end": 4793,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4752,
											"end": 4793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4752,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 4752,
											"end": 4793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4752,
											"end": 4793,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 4752,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 4751,
											"end": 4813,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4751,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4813,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 4751,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4744,
											"end": 4813,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4744,
											"end": 4813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4744,
											"end": 4813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4744,
											"end": 4813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4744,
											"end": 4813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4389,
											"end": 4821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4389,
											"end": 4821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6311,
											"end": 6530,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 6311,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6397,
											"end": 6404,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6435,
											"end": 6444,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6435,
											"end": 6444,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6425,
											"end": 6432,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6425,
											"end": 6444,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 6417,
											"end": 6468,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6468,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6417,
											"end": 6468,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6417,
											"end": 6468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6468,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6417,
											"end": 6468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6417,
											"end": 6468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 6417,
											"end": 6468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6468,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 6417,
											"end": 6468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6486,
											"end": 6500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6486,
											"end": 6500,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6491,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6486,
											"end": 6500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6486,
											"end": 6500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6500,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6486,
											"end": 6500,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6500,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6500,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6486,
											"end": 6522,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6522,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6522,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6522,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6515,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6522,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6522,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6522,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6522,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6486,
											"end": 6522,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6311,
											"end": 6530,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6311,
											"end": 6530,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6311,
											"end": 6530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6311,
											"end": 6530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6311,
											"end": 6530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6087,
											"end": 6303,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 6087,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6209,
											"end": 6218,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6209,
											"end": 6218,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6199,
											"end": 6206,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 6191,
											"end": 6242,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6191,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6191,
											"end": 6242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6191,
											"end": 6242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6191,
											"end": 6242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 6191,
											"end": 6242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6242,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 6191,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6260,
											"end": 6274,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6274,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6274,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6274,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6265,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6260,
											"end": 6274,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6274,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6274,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6274,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6260,
											"end": 6274,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6274,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6274,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6260,
											"end": 6295,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6295,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6295,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6295,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6288,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6260,
											"end": 6288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6295,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6295,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6295,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6087,
											"end": 6303,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6087,
											"end": 6303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6087,
											"end": 6303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6087,
											"end": 6303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6087,
											"end": 6303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1471,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1260,
											"end": 1477,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8700,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8680,
											"end": 8701,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8737,
											"end": 8739,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 8717,
											"end": 8735,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8717,
											"end": 8735,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8710,
											"end": 8740,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8776,
											"end": 8809,
											"name": "PUSH",
											"source": 5,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8749,
											"end": 8810,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8827,
											"end": 8845,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 8827,
											"end": 8845,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 8496,
											"end": 8851,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1471,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1260,
											"end": 1477,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 240,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 14,
											"end": 240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 187,
											"end": 210,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 187,
											"end": 210,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 595,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 595,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 663,
											"end": 683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 663,
											"end": 683,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 712,
											"end": 743,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 712,
											"end": 743,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 702,
											"end": 744,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 702,
											"end": 744,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 692,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 692,
											"end": 762,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 758,
											"end": 759,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 756,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 748,
											"end": 760,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 692,
											"end": 762,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 692,
											"end": 762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 595,
											"end": 768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 595,
											"end": 768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 768,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 595,
											"end": 768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 1073,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 773,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 841,
											"end": 847,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 902,
											"end": 904,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 899,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 881,
											"end": 888,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 877,
											"end": 900,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 873,
											"end": 905,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 870,
											"end": 922,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 870,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 870,
											"end": 922,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 918,
											"end": 919,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 916,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 908,
											"end": 920,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 870,
											"end": 922,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 870,
											"end": 922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 963,
											"end": 986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 963,
											"end": 986,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 963,
											"end": 986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1029,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1063,
											"end": 1065,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1029,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 1029,
											"end": 1067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1029,
											"end": 1067,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1029,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 1073,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 773,
											"end": 1073,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 1073,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 773,
											"end": 1073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 773,
											"end": 1073,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 1073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1828,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1482,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1564,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1613,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1599,
											"end": 1608,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1590,
											"end": 1597,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1586,
											"end": 1609,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1614,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1627,
											"end": 1628,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1617,
											"end": 1629,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 1579,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1672,
											"end": 1695,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1695,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1695,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1796,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1796,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2227,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2041,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2106,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2155,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2150,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2132,
											"end": 2139,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2151,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2156,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2173,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 2121,
											"end": 2173,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2169,
											"end": 2170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2167,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2159,
											"end": 2171,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 2121,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 2211,
											"end": 2220,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 2192,
											"end": 2221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2221,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 2192,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2221,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2227,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2041,
											"end": 2227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2939,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2596,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2800,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2780,
											"end": 2801,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2801,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2801,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2817,
											"end": 2835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2817,
											"end": 2835,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2817,
											"end": 2835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2810,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "141BDBDB08191BD95CC81B9BDD08195E1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2871,
											"end": 2873,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2856,
											"end": 2874,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2856,
											"end": 2874,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2932,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2915,
											"end": 2933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3572,
											"end": 3849,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3572,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3639,
											"end": 3645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3694,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3680,
											"end": 3689,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3678,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3690,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3695,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3712,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 3660,
											"end": 3712,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3706,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3698,
											"end": 3710,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3712,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 3660,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3740,
											"end": 3749,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3750,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3793,
											"end": 3798,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3799,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3779,
											"end": 3800,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3772,
											"end": 3777,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3769,
											"end": 3801,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3759,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 3759,
											"end": 3819,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3812,
											"end": 3813,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 3817,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5081,
											"end": 5208,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 5081,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5152,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 5137,
											"end": 5140,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5133,
											"end": 5153,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5130,
											"end": 5131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5154,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5177,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5170,
											"end": 5171,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5163,
											"end": 5178,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5197,
											"end": 5201,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5194,
											"end": 5195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5187,
											"end": 5202,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5348,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5213,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5273,
											"end": 5290,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5273,
											"end": 5290,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5273,
											"end": 5290,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5270,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 5270,
											"end": 5313,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 5293,
											"end": 5311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5340,
											"end": 5341,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5329,
											"end": 5342,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5329,
											"end": 5342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6061,
											"end": 6229,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6061,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6134,
											"end": 6143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6134,
											"end": 6143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6134,
											"end": 6143,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6165,
											"end": 6174,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6165,
											"end": 6174,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6197,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6197,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6197,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6176,
											"end": 6198,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6176,
											"end": 6198,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 6152,
											"end": 6223,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6203,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 6203,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 6203,
											"end": 6221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6234,
											"end": 6451,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 6234,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6274,
											"end": 6275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6300,
											"end": 6301,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 6290,
											"end": 6422,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6344,
											"end": 6354,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 6339,
											"end": 6342,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6335,
											"end": 6355,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6332,
											"end": 6333,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6325,
											"end": 6356,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6379,
											"end": 6383,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6369,
											"end": 6384,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6404,
											"end": 6405,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6412,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6422,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 6290,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6436,
											"end": 6445,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6436,
											"end": 6445,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6234,
											"end": 6451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6456,
											"end": 6584,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 6456,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6532,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6532,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6532,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 6555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 6555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 6555,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6541,
											"end": 6578,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6541,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 6541,
											"end": 6578,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 6558,
											"end": 6576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7657,
											"end": 7782,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 7657,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7722,
											"end": 7731,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7722,
											"end": 7731,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7722,
											"end": 7731,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7743,
											"end": 7753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7743,
											"end": 7753,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7743,
											"end": 7753,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7740,
											"end": 7776,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7740,
											"end": 7776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 7740,
											"end": 7776,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7756,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 7756,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 7756,
											"end": 7774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"COOLDOWN_PERIOD()": "6e99d52f",
							"DEPOSIT_FEE_BPS()": "6bbf758d",
							"WITHDRAWAL_FEE_BPS()": "3a4ae669",
							"addPool(uint256,address)": "33ba8882",
							"adjustAPY(uint256)": "4d333a21",
							"calculateReward(uint256,address)": "a18f07a0",
							"claimRewards(uint256)": "0962ef79",
							"feeWallet()": "f25f4b56",
							"getPoolCount()": "8eec5d70",
							"getPoolInfo(uint256)": "2f380b35",
							"getUserLastStakedTime(uint256,address)": "b684edcf",
							"getUserStakedAmount(uint256,address)": "d13d8258",
							"owner()": "8da5cb5b",
							"poolCount()": "f525cb68",
							"pools(uint256)": "ac4afa38",
							"renounceOwnership()": "715018a6",
							"setFeeWallet(address)": "90d49b9d",
							"stake(uint256,uint256)": "7b0472f0",
							"stakingToken()": "72f702f3",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256,uint256)": "9e2c8a5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAPY\",\"type\":\"uint256\"}],\"name\":\"APYAdjusted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COOLDOWN_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPOSIT_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAWAL_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apy\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"adjustAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPoolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserLastStakedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeWallet\",\"type\":\"address\"}],\"name\":\"setFeeWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"StakingContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0x52ad8f8fdff9fa8eb0b8fb36ac723892841b764300c14ee5272f77f4d1d39293\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f363a1f71e81f3f978ac101f3a88ae9a2030fd74a2779ee08dabb1203b4ec51\",\"dweb:/ipfs/QmV8kbK9SDkqWeQqp6R4fwTeWFVoP3DsD2aHbkLxYjuA1Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/Staking.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 158,
								"contract": "contracts/Staking.sol:StakingContract",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 332,
								"contract": "contracts/Staking.sol:StakingContract",
								"label": "stakingToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)290"
							},
							{
								"astId": 337,
								"contract": "contracts/Staking.sol:StakingContract",
								"label": "feeWallet",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 364,
								"contract": "contracts/Staking.sol:StakingContract",
								"label": "pools",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(Pool)359_storage)"
							},
							{
								"astId": 366,
								"contract": "contracts/Staking.sol:StakingContract",
								"label": "poolCount",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)290": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Pool)359_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct StakingContract.Pool)",
								"numberOfBytes": "32",
								"value": "t_struct(Pool)359_storage"
							},
							"t_struct(Pool)359_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.Pool",
								"members": [
									{
										"astId": 345,
										"contract": "contracts/Staking.sol:StakingContract",
										"label": "apy",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 347,
										"contract": "contracts/Staking.sol:StakingContract",
										"label": "totalStaked",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 350,
										"contract": "contracts/Staking.sol:StakingContract",
										"label": "rewardToken",
										"offset": 0,
										"slot": "2",
										"type": "t_contract(IERC20)290"
									},
									{
										"astId": 354,
										"contract": "contracts/Staking.sol:StakingContract",
										"label": "stakedAmounts",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 358,
										"contract": "contracts/Staking.sol:StakingContract",
										"label": "lastStakedTime",
										"offset": 0,
										"slot": "4",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 321,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 320,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								320
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 224,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 233,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 290,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 290,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 290,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 290,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 290,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 290,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 291,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								224,
								233
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 297,
												"id": 300,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 320,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 307,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 306,
												"id": 309,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 320,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 320,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"contracts/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Staking.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"IERC20": [
							290
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						],
						"StakingContract": [
							1013
						]
					},
					"id": 1014,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1014,
							"sourceUnit": 291,
							"src": "66:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1014,
							"sourceUnit": 148,
							"src": "124:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1014,
							"sourceUnit": 213,
							"src": "178:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 326,
										"name": "Ownable",
										"nameLocations": [
											"272:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "272:7:4"
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "272:7:4"
								},
								{
									"baseName": {
										"id": 328,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"281:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "281:15:4"
									},
									"id": 329,
									"nodeType": "InheritanceSpecifier",
									"src": "281:15:4"
								}
							],
							"canonicalName": "StakingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1013,
							"linearizedBaseContracts": [
								1013,
								212,
								147,
								320
							],
							"name": "StakingContract",
							"nameLocation": "253:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 332,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "361:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1013,
									"src": "347:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$290",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 331,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 330,
											"name": "IERC20",
											"nameLocations": [
												"347:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 290,
											"src": "347:6:4"
										},
										"referencedDeclaration": 290,
										"src": "347:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$290",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6e99d52f",
									"id": 335,
									"mutability": "constant",
									"name": "COOLDOWN_PERIOD",
									"nameLocation": "444:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1013,
									"src": "420:49:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 333,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "420:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "462:7:4",
										"subdenomination": "hours",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_14400_by_1",
											"typeString": "int_const 14400"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f25f4b56",
									"id": 337,
									"mutability": "mutable",
									"name": "feeWallet",
									"nameLocation": "536:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1013,
									"src": "521:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 336,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "521:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6bbf758d",
									"id": 340,
									"mutability": "constant",
									"name": "DEPOSIT_FEE_BPS",
									"nameLocation": "636:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1013,
									"src": "612:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 338,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "612:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 339,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "654:3:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3a4ae669",
									"id": 343,
									"mutability": "constant",
									"name": "WITHDRAWAL_FEE_BPS",
									"nameLocation": "694:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1013,
									"src": "670:48:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 341,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "670:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 342,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "715:3:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.Pool",
									"id": 359,
									"members": [
										{
											"constant": false,
											"id": 345,
											"mutability": "mutable",
											"name": "apy",
											"nameLocation": "764:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "756:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 344,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "756:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 347,
											"mutability": "mutable",
											"name": "totalStaked",
											"nameLocation": "843:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "835:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 346,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "835:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 350,
											"mutability": "mutable",
											"name": "rewardToken",
											"nameLocation": "918:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "911:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$290",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 349,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 348,
													"name": "IERC20",
													"nameLocations": [
														"911:6:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 290,
													"src": "911:6:4"
												},
												"referencedDeclaration": 290,
												"src": "911:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$290",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 354,
											"mutability": "mutable",
											"name": "stakedAmounts",
											"nameLocation": "1009:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "981:41:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 353,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "981:27:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 358,
											"mutability": "mutable",
											"name": "lastStakedTime",
											"nameLocation": "1088:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "1060:42:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 357,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1060:27:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Pool",
									"nameLocation": "740:4:4",
									"nodeType": "StructDefinition",
									"scope": 1013,
									"src": "733:406:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ac4afa38",
									"id": 364,
									"mutability": "mutable",
									"name": "pools",
									"nameLocation": "1203:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1013,
									"src": "1171:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$359_storage_$",
										"typeString": "mapping(uint256 => struct StakingContract.Pool)"
									},
									"typeName": {
										"id": 363,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 360,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1179:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1171:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$359_storage_$",
											"typeString": "mapping(uint256 => struct StakingContract.Pool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 362,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 361,
												"name": "Pool",
												"nameLocations": [
													"1190:4:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 359,
												"src": "1190:4:4"
											},
											"referencedDeclaration": 359,
											"src": "1190:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
												"typeString": "struct StakingContract.Pool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f525cb68",
									"id": 366,
									"mutability": "mutable",
									"name": "poolCount",
									"nameLocation": "1263:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1013,
									"src": "1248:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 365,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1248:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ae9596825f83aa972e67ed4a3ac74d2eb98b77ee23453868db5dc3b08a0316ca",
									"id": 374,
									"name": "PoolCreated",
									"nameLocation": "1343:11:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "1371:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1355:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"indexed": false,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "1387:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1379:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "1400:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1392:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:58:4"
									},
									"src": "1337:76:4"
								},
								{
									"anonymous": false,
									"eventSelector": "1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90",
									"id": 382,
									"name": "Staked",
									"nameLocation": "1425:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1448:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1432:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"indexed": false,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "1462:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1454:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1454:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1478:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1470:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:54:4"
									},
									"src": "1419:67:4"
								},
								{
									"anonymous": false,
									"eventSelector": "7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e",
									"id": 390,
									"name": "Unstaked",
									"nameLocation": "1498:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1523:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1507:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": false,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "1537:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1529:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1553:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1545:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:54:4"
									},
									"src": "1492:69:4"
								},
								{
									"anonymous": false,
									"eventSelector": "f01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e2731743",
									"id": 398,
									"name": "RewardClaimed",
									"nameLocation": "1573:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1603:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1587:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"indexed": false,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "1617:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1609:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1633:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "1625:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1586:54:4"
									},
									"src": "1567:74:4"
								},
								{
									"anonymous": false,
									"eventSelector": "9c4893e20d6432767854bfaa7ead2c90ad7644e9440c6861a383f63e4fb2803e",
									"id": 404,
									"name": "APYAdjusted",
									"nameLocation": "1653:11:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "1681:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1665:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAPY",
												"nameLocation": "1697:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1689:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1689:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1664:40:4"
									},
									"src": "1647:58:4"
								},
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "1768:79:4",
										"statements": [
											{
												"expression": {
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 413,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "1779:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 415,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "1801:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 414,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "1794:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1794:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"src": "1779:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "1779:36:4"
											},
											{
												"expression": {
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 419,
														"name": "poolCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "1826:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1838:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1826:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "1826:13:4"
											}
										]
									},
									"id": 424,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 409,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1756:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1760:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1756:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 411,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 408,
												"name": "Ownable",
												"nameLocations": [
													"1748:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1748:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1748:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "1733:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1725:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1724:23:4"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1768:0:4"
									},
									"scope": 1013,
									"src": "1713:134:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "1879:85:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 427,
																"name": "feeWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "1898:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1919:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1911:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 428,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1911:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1911:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1898:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4665652077616c6c6574206e6f7420736574",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1923:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_450e63d12583b524c4239640e625b08c76818feaa191e82900f37b9aa0c748b0",
																"typeString": "literal_string \"Fee wallet not set\""
															},
															"value": "Fee wallet not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_450e63d12583b524c4239640e625b08c76818feaa191e82900f37b9aa0c748b0",
																"typeString": "literal_string \"Fee wallet not set\""
															}
														],
														"id": 426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1890:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1890:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "1890:54:4"
											},
											{
												"id": 436,
												"nodeType": "PlaceholderStatement",
												"src": "1955:1:4"
											}
										]
									},
									"id": 438,
									"name": "feeWalletSet",
									"nameLocation": "1864:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:4"
									},
									"src": "1855:109:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "2012:81:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 443,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "2031:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2051:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2043:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 444,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2043:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2043:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2031:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2023:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2023:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "2023:50:4"
											},
											{
												"id": 452,
												"nodeType": "PlaceholderStatement",
												"src": "2084:1:4"
											}
										]
									},
									"id": 454,
									"name": "validAddress",
									"nameLocation": "1981:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "2002:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1994:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:18:4"
									},
									"src": "1972:121:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "2187:41:4",
										"statements": [
											{
												"expression": {
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 464,
														"name": "feeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2198:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 465,
														"name": "_feeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "2210:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2198:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "2198:22:4"
											}
										]
									},
									"functionSelector": "90d49b9d",
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 459,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 458,
												"name": "onlyOwner",
												"nameLocations": [
													"2152:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2152:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2152:9:4"
										},
										{
											"arguments": [
												{
													"id": 461,
													"name": "_feeWallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 456,
													"src": "2175:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 462,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 460,
												"name": "validAddress",
												"nameLocations": [
													"2162:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 454,
												"src": "2162:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2162:24:4"
										}
									],
									"name": "setFeeWallet",
									"nameLocation": "2110:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "_feeWallet",
												"nameLocation": "2131:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2123:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:20:4"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2187:0:4"
									},
									"scope": 1013,
									"src": "2101:127:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "2335:256:4",
										"statements": [
											{
												"assignments": [
													483
												],
												"declarations": [
													{
														"constant": false,
														"id": 483,
														"mutability": "mutable",
														"name": "newPool",
														"nameLocation": "2359:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 517,
														"src": "2346:20:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
															"typeString": "struct StakingContract.Pool"
														},
														"typeName": {
															"id": 482,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 481,
																"name": "Pool",
																"nameLocations": [
																	"2346:4:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 359,
																"src": "2346:4:4"
															},
															"referencedDeclaration": 359,
															"src": "2346:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																"typeString": "struct StakingContract.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 487,
												"initialValue": {
													"baseExpression": {
														"id": 484,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "2369:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$359_storage_$",
															"typeString": "mapping(uint256 => struct StakingContract.Pool storage ref)"
														}
													},
													"id": 486,
													"indexExpression": {
														"id": 485,
														"name": "poolCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "2375:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2369:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$359_storage",
														"typeString": "struct StakingContract.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2346:39:4"
											},
											{
												"expression": {
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 488,
															"name": "newPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "2396:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																"typeString": "struct StakingContract.Pool storage pointer"
															}
														},
														"id": 490,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2404:3:4",
														"memberName": "apy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 345,
														"src": "2396:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 491,
														"name": "_apy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "2410:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2396:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2396:18:4"
											},
											{
												"expression": {
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 494,
															"name": "newPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "2425:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																"typeString": "struct StakingContract.Pool storage pointer"
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2433:11:4",
														"memberName": "rewardToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 350,
														"src": "2425:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 498,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "2454:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 497,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "2447:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2447:20:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"src": "2425:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "2425:42:4"
											},
											{
												"expression": {
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 502,
															"name": "newPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "2478:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																"typeString": "struct StakingContract.Pool storage pointer"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2486:11:4",
														"memberName": "totalStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 347,
														"src": "2478:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2500:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2478:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "2478:23:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 509,
															"name": "poolCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "2531:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 510,
															"name": "_apy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "2542:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 511,
															"name": "_rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "2548:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 508,
														"name": "PoolCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "2519:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,uint256,address)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2519:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "EmitStatement",
												"src": "2514:47:4"
											},
											{
												"expression": {
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2572:11:4",
													"subExpression": {
														"id": 514,
														"name": "poolCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "2572:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "2572:11:4"
											}
										]
									},
									"functionSelector": "33ba8882",
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 476,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 475,
												"name": "onlyOwner",
												"nameLocations": [
													"2298:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2298:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2298:9:4"
										},
										{
											"arguments": [
												{
													"id": 478,
													"name": "_rewardToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 473,
													"src": "2321:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 479,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 477,
												"name": "validAddress",
												"nameLocations": [
													"2308:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 454,
												"src": "2308:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2308:26:4"
										}
									],
									"name": "addPool",
									"nameLocation": "2245:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "_apy",
												"nameLocation": "2261:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2253:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2253:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "2275:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2267:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2267:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2252:36:4"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2335:0:4"
									},
									"scope": 1013,
									"src": "2236:355:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "2683:725:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 530,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "2702:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 531,
																"name": "poolCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "2712:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2702:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20646f6573206e6f74206578697374",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2723:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																"typeString": "literal_string \"Pool does not exist\""
															},
															"value": "Pool does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																"typeString": "literal_string \"Pool does not exist\""
															}
														],
														"id": 529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2694:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2694:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "2694:51:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 537,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "2764:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2774:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2764:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2777:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2756:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2756:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "2756:56:4"
											},
											{
												"assignments": [
													545
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "2838:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "2825:17:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
															"typeString": "struct StakingContract.Pool"
														},
														"typeName": {
															"id": 544,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 543,
																"name": "Pool",
																"nameLocations": [
																	"2825:4:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 359,
																"src": "2825:4:4"
															},
															"referencedDeclaration": 359,
															"src": "2825:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																"typeString": "struct StakingContract.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"baseExpression": {
														"id": 546,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "2845:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$359_storage_$",
															"typeString": "mapping(uint256 => struct StakingContract.Pool storage ref)"
														}
													},
													"id": 548,
													"indexExpression": {
														"id": 547,
														"name": "_poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "2851:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2845:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$359_storage",
														"typeString": "struct StakingContract.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2825:34:4"
											},
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "2878:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "2870:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2870:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 558,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 552,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "2885:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 553,
																	"name": "DEPOSIT_FEE_BPS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "2895:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2885:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 555,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2884:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2914:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2884:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2870:49:4"
											},
											{
												"assignments": [
													560
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "amountAfterFee",
														"nameLocation": "2938:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "2930:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 559,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2930:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 564,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 561,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "2955:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 562,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "2965:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2955:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2930:38:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 568,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3015:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3019:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3015:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 572,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3035:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingContract_$1013",
																				"typeString": "contract StakingContract"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingContract_$1013",
																				"typeString": "contract StakingContract"
																			}
																		],
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3027:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 570,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3027:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3027:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 574,
																	"name": "amountAfterFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "3042:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 566,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "2989:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3002:12:4",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 289,
																"src": "2989:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2989:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3059:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 565,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2981:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2981:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "2981:96:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 582,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3122:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3126:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3122:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 584,
																	"name": "feeWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "3134:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 585,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "3145:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 580,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "3096:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3109:12:4",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 289,
																"src": "3096:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3096:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "466565207472616e73666572206661696c6564",
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3151:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56",
																"typeString": "literal_string \"Fee transfer failed\""
															},
															"value": "Fee transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56",
																"typeString": "literal_string \"Fee transfer failed\""
															}
														],
														"id": 579,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3088:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3088:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "3088:85:4"
											},
											{
												"expression": {
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 590,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "3186:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																	"typeString": "struct StakingContract.Pool storage pointer"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3191:13:4",
															"memberName": "stakedAmounts",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 354,
															"src": "3186:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 595,
														"indexExpression": {
															"expression": {
																"id": 592,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3205:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3209:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3205:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3186:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 596,
														"name": "amountAfterFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "3220:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3186:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "3186:48:4"
											},
											{
												"expression": {
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 599,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "3245:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																"typeString": "struct StakingContract.Pool storage pointer"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3250:11:4",
														"memberName": "totalStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 347,
														"src": "3245:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 602,
														"name": "amountAfterFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "3265:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3245:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "3245:34:4"
											},
											{
												"expression": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 605,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "3290:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																	"typeString": "struct StakingContract.Pool storage pointer"
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3295:14:4",
															"memberName": "lastStakedTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 358,
															"src": "3290:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 610,
														"indexExpression": {
															"expression": {
																"id": 607,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3310:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3314:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3310:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3290:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 611,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3324:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3330:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3324:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3290:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "3290:49:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 616,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3364:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3364:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "3376:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 619,
															"name": "amountAfterFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "3385:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "3357:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3357:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "EmitStatement",
												"src": "3352:48:4"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 525,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 524,
												"name": "nonReentrant",
												"nameLocations": [
													"2657:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "2657:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2657:12:4"
										},
										{
											"id": 527,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 526,
												"name": "feeWalletSet",
												"nameLocations": [
													"2670:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 438,
												"src": "2670:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2670:12:4"
										}
									],
									"name": "stake",
									"nameLocation": "2608:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "2622:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "2614:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2614:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2639:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "2631:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2613:34:4"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2683:0:4"
									},
									"scope": 1013,
									"src": "2599:809:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "3502:879:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 635,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "3521:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 636,
																"name": "poolCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "3531:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3521:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20646f6573206e6f74206578697374",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3542:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																"typeString": "literal_string \"Pool does not exist\""
															},
															"value": "Pool does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																"typeString": "literal_string \"Pool does not exist\""
															}
														],
														"id": 634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3513:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3513:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "3513:51:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 642,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "3583:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3593:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3583:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3596:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3575:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3575:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "3575:56:4"
											},
											{
												"assignments": [
													650
												],
												"declarations": [
													{
														"constant": false,
														"id": 650,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "3657:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 740,
														"src": "3644:17:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
															"typeString": "struct StakingContract.Pool"
														},
														"typeName": {
															"id": 649,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 648,
																"name": "Pool",
																"nameLocations": [
																	"3644:4:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 359,
																"src": "3644:4:4"
															},
															"referencedDeclaration": 359,
															"src": "3644:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																"typeString": "struct StakingContract.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 654,
												"initialValue": {
													"baseExpression": {
														"id": 651,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "3664:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$359_storage_$",
															"typeString": "mapping(uint256 => struct StakingContract.Pool storage ref)"
														}
													},
													"id": 653,
													"indexExpression": {
														"id": 652,
														"name": "_poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "3670:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3664:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$359_storage",
														"typeString": "struct StakingContract.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3644:34:4"
											},
											{
												"assignments": [
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "stakedAmount",
														"nameLocation": "3697:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 740,
														"src": "3689:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 655,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3689:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 662,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 657,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "3712:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																"typeString": "struct StakingContract.Pool storage pointer"
															}
														},
														"id": 658,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3717:13:4",
														"memberName": "stakedAmounts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 354,
														"src": "3712:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 661,
													"indexExpression": {
														"expression": {
															"id": 659,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3731:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3735:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3731:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3712:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3689:53:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 664,
																"name": "stakedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "3763:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 665,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "3779:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3763:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3788:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															},
															"value": "Insufficient staked balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															}
														],
														"id": 663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3755:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3755:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "3755:63:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 671,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3837:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3843:9:4",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3837:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 673,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 650,
																			"src": "3856:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																				"typeString": "struct StakingContract.Pool storage pointer"
																			}
																		},
																		"id": 674,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3861:14:4",
																		"memberName": "lastStakedTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 358,
																		"src": "3856:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 677,
																	"indexExpression": {
																		"expression": {
																			"id": 675,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3876:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3880:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3876:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3856:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 678,
																	"name": "COOLDOWN_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "3890:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3856:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3837:68:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6f6c646f776e20706572696f64206e6f74206f766572",
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3907:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e3d8bbfcef8ebc89bd4618ff46db01df5dd9a3f910e649e8b56fb682681de4f",
																"typeString": "literal_string \"Cooldown period not over\""
															},
															"value": "Cooldown period not over"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e3d8bbfcef8ebc89bd4618ff46db01df5dd9a3f910e649e8b56fb682681de4f",
																"typeString": "literal_string \"Cooldown period not over\""
															}
														],
														"id": 670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3829:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3829:105:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "3829:105:4"
											},
											{
												"assignments": [
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "3955:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 740,
														"src": "3947:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3947:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 692,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 686,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "3962:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 687,
																	"name": "WITHDRAWAL_FEE_BPS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "3972:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3962:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 689,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3961:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3994:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "3961:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3947:52:4"
											},
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "amountAfterFee",
														"nameLocation": "4018:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 740,
														"src": "4010:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 693,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4010:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 695,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "4035:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 696,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "4045:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4035:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4010:38:4"
											},
											{
												"expression": {
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 699,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "4061:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																	"typeString": "struct StakingContract.Pool storage pointer"
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4066:13:4",
															"memberName": "stakedAmounts",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 354,
															"src": "4061:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 704,
														"indexExpression": {
															"expression": {
																"id": 701,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4080:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4084:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4080:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4061:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 705,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "4095:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4061:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "4061:41:4"
											},
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 708,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "4113:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																"typeString": "struct StakingContract.Pool storage pointer"
															}
														},
														"id": 710,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4118:11:4",
														"memberName": "totalStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 347,
														"src": "4113:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 711,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "4133:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4113:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "4113:27:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 717,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4183:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4187:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4183:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 719,
																	"name": "amountAfterFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "4195:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 715,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "4161:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4174:8:4",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 257,
																"src": "4161:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4161:49:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4212:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 714,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4153:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4153:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "4153:77:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 727,
																	"name": "feeWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "4271:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 728,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "4282:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 725,
																	"name": "stakingToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "4249:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4262:8:4",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 257,
																"src": "4249:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4249:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "466565207472616e73666572206661696c6564",
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4288:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56",
																"typeString": "literal_string \"Fee transfer failed\""
															},
															"value": "Fee transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56",
																"typeString": "literal_string \"Fee transfer failed\""
															}
														],
														"id": 724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4241:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4241:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "4241:69:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 734,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4337:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4341:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4337:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "4349:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 737,
															"name": "amountAfterFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "4358:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 733,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "4328:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4328:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "EmitStatement",
												"src": "4323:50:4"
											}
										]
									},
									"functionSelector": "9e2c8a5b",
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 630,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 629,
												"name": "nonReentrant",
												"nameLocations": [
													"3476:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "3476:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3476:12:4"
										},
										{
											"id": 632,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 631,
												"name": "feeWalletSet",
												"nameLocations": [
													"3489:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 438,
												"src": "3489:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3489:12:4"
										}
									],
									"name": "unstake",
									"nameLocation": "3425:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "3441:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3433:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3433:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3458:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "3450:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3450:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3432:34:4"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3502:0:4"
									},
									"scope": 1013,
									"src": "3416:965:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "4476:345:4",
										"statements": [
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4500:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 794,
														"src": "4487:17:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
															"typeString": "struct StakingContract.Pool"
														},
														"typeName": {
															"id": 751,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 750,
																"name": "Pool",
																"nameLocations": [
																	"4487:4:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 359,
																"src": "4487:4:4"
															},
															"referencedDeclaration": 359,
															"src": "4487:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																"typeString": "struct StakingContract.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"initialValue": {
													"baseExpression": {
														"id": 753,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "4507:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$359_storage_$",
															"typeString": "mapping(uint256 => struct StakingContract.Pool storage ref)"
														}
													},
													"id": 755,
													"indexExpression": {
														"id": 754,
														"name": "_poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "4513:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4507:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$359_storage",
														"typeString": "struct StakingContract.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:34:4"
											},
											{
												"assignments": [
													758
												],
												"declarations": [
													{
														"constant": false,
														"id": 758,
														"mutability": "mutable",
														"name": "stakedAmount",
														"nameLocation": "4540:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 794,
														"src": "4532:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 757,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4532:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 763,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 759,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "4555:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																"typeString": "struct StakingContract.Pool storage pointer"
															}
														},
														"id": 760,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4560:13:4",
														"memberName": "stakedAmounts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 354,
														"src": "4555:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 762,
													"indexExpression": {
														"id": 761,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "4574:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4555:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4532:48:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 764,
														"name": "stakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "4597:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4613:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4597:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 770,
												"nodeType": "IfStatement",
												"src": "4593:58:4",
												"trueBody": {
													"id": 769,
													"nodeType": "Block",
													"src": "4616:35:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4638:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 749,
															"id": 768,
															"nodeType": "Return",
															"src": "4631:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"mutability": "mutable",
														"name": "stakingDuration",
														"nameLocation": "4671:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 794,
														"src": "4663:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 771,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4663:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 780,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 773,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4689:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4695:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4689:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"expression": {
																"id": 775,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "4707:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																	"typeString": "struct StakingContract.Pool storage pointer"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4712:14:4",
															"memberName": "lastStakedTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 358,
															"src": "4707:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 778,
														"indexExpression": {
															"id": 777,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "4727:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4707:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4689:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4663:70:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 781,
																		"name": "stakedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "4752:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 782,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 752,
																			"src": "4767:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																				"typeString": "struct StakingContract.Pool storage pointer"
																			}
																		},
																		"id": 783,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4772:3:4",
																		"memberName": "apy",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 345,
																		"src": "4767:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4752:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 785,
																	"name": "stakingDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "4778:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4752:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 787,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4751:43:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_3153600000_by_1",
																	"typeString": "int_const 3153600000"
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "333635",
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4798:8:4",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "365"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4809:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "4798:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3153600000_by_1",
																	"typeString": "int_const 3153600000"
																}
															}
														],
														"id": 791,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4797:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3153600000_by_1",
															"typeString": "int_const 3153600000"
														}
													},
													"src": "4751:62:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 749,
												"id": 793,
												"nodeType": "Return",
												"src": "4744:69:4"
											}
										]
									},
									"functionSelector": "a18f07a0",
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "4398:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "4422:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "4414:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4414:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "4439:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "4431:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4431:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4413:32:4"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "4467:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4466:9:4"
									},
									"scope": 1013,
									"src": "4389:432:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "4890:448:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 803,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "4909:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 804,
																"name": "poolCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "4919:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4909:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20646f6573206e6f74206578697374",
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4930:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																"typeString": "literal_string \"Pool does not exist\""
															},
															"value": "Pool does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																"typeString": "literal_string \"Pool does not exist\""
															}
														],
														"id": 802,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4901:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4901:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "4901:51:4"
											},
											{
												"assignments": [
													811
												],
												"declarations": [
													{
														"constant": false,
														"id": 811,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4978:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 859,
														"src": "4965:17:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
															"typeString": "struct StakingContract.Pool"
														},
														"typeName": {
															"id": 810,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 809,
																"name": "Pool",
																"nameLocations": [
																	"4965:4:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 359,
																"src": "4965:4:4"
															},
															"referencedDeclaration": 359,
															"src": "4965:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																"typeString": "struct StakingContract.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"initialValue": {
													"baseExpression": {
														"id": 812,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "4985:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$359_storage_$",
															"typeString": "mapping(uint256 => struct StakingContract.Pool storage ref)"
														}
													},
													"id": 814,
													"indexExpression": {
														"id": 813,
														"name": "_poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "4991:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4985:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$359_storage",
														"typeString": "struct StakingContract.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4965:34:4"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "5018:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 859,
														"src": "5010:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5010:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 823,
												"initialValue": {
													"arguments": [
														{
															"id": 819,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "5043:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 820,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5052:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5056:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5052:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 818,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "5027:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (uint256,address) view returns (uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5027:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5010:53:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 825,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "5082:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5091:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5082:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320617661696c61626c65",
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5094:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																"typeString": "literal_string \"No rewards available\""
															},
															"value": "No rewards available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																"typeString": "literal_string \"No rewards available\""
															}
														],
														"id": 824,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5074:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5074:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "5074:43:4"
											},
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 831,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "5130:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																	"typeString": "struct StakingContract.Pool storage pointer"
																}
															},
															"id": 835,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5135:14:4",
															"memberName": "lastStakedTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 358,
															"src": "5130:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 836,
														"indexExpression": {
															"expression": {
																"id": 833,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5150:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5154:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5150:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5130:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 837,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5164:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5170:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5164:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5130:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "5130:49:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 845,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5224:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5228:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5224:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 847,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "5236:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 842,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "5198:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																			"typeString": "struct StakingContract.Pool storage pointer"
																		}
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5203:11:4",
																	"memberName": "rewardToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 350,
																	"src": "5198:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5215:8:4",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 257,
																"src": "5198:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5198:45:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526577617264207472616e73666572206661696c6564",
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5245:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce",
																"typeString": "literal_string \"Reward transfer failed\""
															},
															"value": "Reward transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c745758d72f89e19328d67ece8ee7d1c3fa24ceabda854d2a9216c00473e37ce",
																"typeString": "literal_string \"Reward transfer failed\""
															}
														],
														"id": 841,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5190:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5190:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "5190:80:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 853,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5302:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5306:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5302:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "5314:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 856,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "5323:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 852,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "5288:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5288:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "EmitStatement",
												"src": "5283:47:4"
											}
										]
									},
									"functionSelector": "0962ef79",
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 800,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 799,
												"name": "nonReentrant",
												"nameLocations": [
													"4877:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "4877:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4877:12:4"
										}
									],
									"name": "claimRewards",
									"nameLocation": "4838:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "4859:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "4851:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4851:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4850:17:4"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4890:0:4"
									},
									"scope": 1013,
									"src": "4829:509:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "5401:394:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 868,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "5420:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 869,
																"name": "poolCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "5430:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5420:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20646f6573206e6f74206578697374",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5441:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																"typeString": "literal_string \"Pool does not exist\""
															},
															"value": "Pool does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																"typeString": "literal_string \"Pool does not exist\""
															}
														],
														"id": 867,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5412:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5412:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "5412:51:4"
											},
											{
												"assignments": [
													876
												],
												"declarations": [
													{
														"constant": false,
														"id": 876,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "5489:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 918,
														"src": "5476:17:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
															"typeString": "struct StakingContract.Pool"
														},
														"typeName": {
															"id": 875,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 874,
																"name": "Pool",
																"nameLocations": [
																	"5476:4:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 359,
																"src": "5476:4:4"
															},
															"referencedDeclaration": 359,
															"src": "5476:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																"typeString": "struct StakingContract.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 880,
												"initialValue": {
													"baseExpression": {
														"id": 877,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5496:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$359_storage_$",
															"typeString": "mapping(uint256 => struct StakingContract.Pool storage ref)"
														}
													},
													"id": 879,
													"indexExpression": {
														"id": 878,
														"name": "_poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "5502:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5496:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$359_storage",
														"typeString": "struct StakingContract.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5476:34:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 881,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "5535:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																"typeString": "struct StakingContract.Pool storage pointer"
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5540:11:4",
														"memberName": "totalStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 347,
														"src": "5535:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313030303030",
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5555:12:4",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000"
														},
														"value": "100000"
													},
													"src": "5535:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 892,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "5619:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																	"typeString": "struct StakingContract.Pool storage pointer"
																}
															},
															"id": 893,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5624:11:4",
															"memberName": "totalStaked",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 347,
															"src": "5619:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "3530303030",
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5639:11:4",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50000000000000000000000_by_1",
																"typeString": "int_const 50000000000000000000000"
															},
															"value": "50000"
														},
														"src": "5619:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 909,
														"nodeType": "Block",
														"src": "5699:41:4",
														"statements": [
															{
																"expression": {
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 903,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 876,
																			"src": "5714:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																				"typeString": "struct StakingContract.Pool storage pointer"
																			}
																		},
																		"id": 905,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "5719:3:4",
																		"memberName": "apy",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 345,
																		"src": "5714:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "323030",
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5725:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	"src": "5714:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 908,
																"nodeType": "ExpressionStatement",
																"src": "5714:14:4"
															}
														]
													},
													"id": 910,
													"nodeType": "IfStatement",
													"src": "5615:125:4",
													"trueBody": {
														"id": 902,
														"nodeType": "Block",
														"src": "5652:41:4",
														"statements": [
															{
																"expression": {
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 896,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 876,
																			"src": "5667:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																				"typeString": "struct StakingContract.Pool storage pointer"
																			}
																		},
																		"id": 898,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "5672:3:4",
																		"memberName": "apy",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 345,
																		"src": "5667:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "313030",
																		"id": 899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5678:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "5667:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 901,
																"nodeType": "ExpressionStatement",
																"src": "5667:14:4"
															}
														]
													}
												},
												"id": 911,
												"nodeType": "IfStatement",
												"src": "5531:209:4",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "5569:40:4",
													"statements": [
														{
															"expression": {
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 885,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "5584:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																			"typeString": "struct StakingContract.Pool storage pointer"
																		}
																	},
																	"id": 887,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5589:3:4",
																	"memberName": "apy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 345,
																	"src": "5584:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3330",
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5595:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "5584:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 890,
															"nodeType": "ExpressionStatement",
															"src": "5584:13:4"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 913,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "5769:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 914,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "5778:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																	"typeString": "struct StakingContract.Pool storage pointer"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5783:3:4",
															"memberName": "apy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 345,
															"src": "5778:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 912,
														"name": "APYAdjusted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "5757:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5757:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "EmitStatement",
												"src": "5752:35:4"
											}
										]
									},
									"functionSelector": "4d333a21",
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 865,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 864,
												"name": "onlyOwner",
												"nameLocations": [
													"5391:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5391:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5391:9:4"
										}
									],
									"name": "adjustAPY",
									"nameLocation": "5355:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "5373:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "5365:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5364:17:4"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5401:0:4"
									},
									"scope": 1013,
									"src": "5346:449:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "5891:188:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 931,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "5910:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 932,
																"name": "poolCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "5920:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5910:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20646f6573206e6f74206578697374",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5931:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																"typeString": "literal_string \"Pool does not exist\""
															},
															"value": "Pool does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																"typeString": "literal_string \"Pool does not exist\""
															}
														],
														"id": 930,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5902:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5902:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "5902:51:4"
											},
											{
												"assignments": [
													939
												],
												"declarations": [
													{
														"constant": false,
														"id": 939,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "5977:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 955,
														"src": "5964:17:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
															"typeString": "struct StakingContract.Pool"
														},
														"typeName": {
															"id": 938,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 937,
																"name": "Pool",
																"nameLocations": [
																	"5964:4:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 359,
																"src": "5964:4:4"
															},
															"referencedDeclaration": 359,
															"src": "5964:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																"typeString": "struct StakingContract.Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 943,
												"initialValue": {
													"baseExpression": {
														"id": 940,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5984:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$359_storage_$",
															"typeString": "mapping(uint256 => struct StakingContract.Pool storage ref)"
														}
													},
													"id": 942,
													"indexExpression": {
														"id": 941,
														"name": "_poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "5990:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5984:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$359_storage",
														"typeString": "struct StakingContract.Pool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:34:4"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 944,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "6017:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																	"typeString": "struct StakingContract.Pool storage pointer"
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6022:3:4",
															"memberName": "apy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 345,
															"src": "6017:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 948,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "6035:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																			"typeString": "struct StakingContract.Pool storage pointer"
																		}
																	},
																	"id": 949,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6040:11:4",
																	"memberName": "rewardToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 350,
																	"src": "6035:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$290",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6027:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 946,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6027:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6027:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 951,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 939,
																"src": "6054:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$359_storage_ptr",
																	"typeString": "struct StakingContract.Pool storage pointer"
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6059:11:4",
															"memberName": "totalStaked",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 347,
															"src": "6054:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 953,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6016:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint256_$",
														"typeString": "tuple(uint256,address,uint256)"
													}
												},
												"functionReturnParameters": 929,
												"id": 954,
												"nodeType": "Return",
												"src": "6009:62:4"
											}
										]
									},
									"functionSelector": "2f380b35",
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolInfo",
									"nameLocation": "5812:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "5832:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5824:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5823:17:4"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5864:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5864:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5873:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5873:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "5882:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5882:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5863:27:4"
									},
									"scope": 1013,
									"src": "5803:276:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "6180:123:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 966,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "6199:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 967,
																"name": "poolCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6209:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6199:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20646f6573206e6f74206578697374",
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6220:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																"typeString": "literal_string \"Pool does not exist\""
															},
															"value": "Pool does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																"typeString": "literal_string \"Pool does not exist\""
															}
														],
														"id": 965,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6191:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6191:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "6191:51:4"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 972,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "6260:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$359_storage_$",
																	"typeString": "mapping(uint256 => struct StakingContract.Pool storage ref)"
																}
															},
															"id": 974,
															"indexExpression": {
																"id": 973,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "6266:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6260:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage",
																"typeString": "struct StakingContract.Pool storage ref"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6275:13:4",
														"memberName": "stakedAmounts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 354,
														"src": "6260:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 977,
													"indexExpression": {
														"id": 976,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "6289:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6260:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 964,
												"id": 978,
												"nodeType": "Return",
												"src": "6253:42:4"
											}
										]
									},
									"functionSelector": "d13d8258",
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserStakedAmount",
									"nameLocation": "6096:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "6124:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "6116:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6116:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6141:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "6133:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6133:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6115:32:4"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "6171:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6170:9:4"
									},
									"scope": 1013,
									"src": "6087:216:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "6406:124:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 990,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "6425:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 991,
																"name": "poolCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6435:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6425:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20646f6573206e6f74206578697374",
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6446:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																"typeString": "literal_string \"Pool does not exist\""
															},
															"value": "Pool does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37",
																"typeString": "literal_string \"Pool does not exist\""
															}
														],
														"id": 989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6417:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6417:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "6417:51:4"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 996,
																"name": "pools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "6486:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$359_storage_$",
																	"typeString": "mapping(uint256 => struct StakingContract.Pool storage ref)"
																}
															},
															"id": 998,
															"indexExpression": {
																"id": 997,
																"name": "_poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "6492:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6486:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$359_storage",
																"typeString": "struct StakingContract.Pool storage ref"
															}
														},
														"id": 999,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6501:14:4",
														"memberName": "lastStakedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 358,
														"src": "6486:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1001,
													"indexExpression": {
														"id": 1000,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "6516:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6486:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 988,
												"id": 1002,
												"nodeType": "Return",
												"src": "6479:43:4"
											}
										]
									},
									"functionSelector": "b684edcf",
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserLastStakedTime",
									"nameLocation": "6320:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "6350:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "6342:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6367:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "6359:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6341:32:4"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "6397:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6396:9:4"
									},
									"scope": 1013,
									"src": "6311:219:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "6594:35:4",
										"statements": [
											{
												"expression": {
													"id": 1009,
													"name": "poolCount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 366,
													"src": "6612:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1008,
												"id": 1010,
												"nodeType": "Return",
												"src": "6605:16:4"
											}
										]
									},
									"functionSelector": "8eec5d70",
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolCount",
									"nameLocation": "6547:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6559:2:4"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "6585:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6585:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6584:9:4"
									},
									"scope": 1013,
									"src": "6538:91:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1014,
							"src": "244:6388:4",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								374,
								382,
								390,
								398,
								404
							]
						}
					],
					"src": "33:6601:4"
				},
				"id": 4
			}
		}
	}
}